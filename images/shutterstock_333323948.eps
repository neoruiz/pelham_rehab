%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 12 medical rehabilitation sevice for dysability and elderly icon set.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: MMM
%%CreationDate: 10/30/2015
%%BoundingBox: 0 0 754 706
%%HiResBoundingBox: 0 0 753.2334 705.4561
%%CropBox: 0 0 753.2334 705.4561
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-10-30T22:24:25+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-10-30T22:24:25+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-10-30T22:24:25+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>240</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA8AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AOf8AnMjQte1ay8rx2N9b&#xA;pameeN9Mnu4LVpp39MRyIs7xiXgKqf5eX+Vir178nPL/AJm8vflpoWjeZpfV1uzhdLkmT1iimV2i&#xA;i9TcN6UTKmxptsaYq8t/Pn/nJPzH+XvnS28vaNpNrcRpbx3N5PeiUmQSsaLD6bxhaBd2PLfttuq9&#xA;08u6wuteX9M1lIWt01O0gvFgk+3GJ41kCNsN15UOKphirsVdir5FitPz3n/5yWnEFxfS2ttqokuG&#xA;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&#xA;6S1cDj6hopRlp+zSmKvIvyZ/KzzToX5l6Nd6hpF0iQTaXcLcPbyhUF5b+vIOXHiPSrweu6nY4q9G&#xA;178mPLnmj8t7rUvMX17SNU0rV9Ya1u7a0luZ3huNTlKIbRR6kyMXDLxpTrXjXFXkv5Qfl/q8E/nW&#xA;TUNG1WK4TyxrEeiNLZTRJNNLbtFxPJT+8aNzxQVr4+Kr7a8rxyReWdIjkUpIllbq6MCGVhEoIIPQ&#xA;jFUzxV55plhfL+fOuXzW8q2Unl+xijuijCJpFuZiyB6cSwBqRXFXoeKuxV2KvMv0dqH/AEMv+kfq&#xA;0v6P/wAGfV/rnBvR9b9K8/S9SnHnx+LjWtMVem4q7FXlP/OS3kfzH5z/AC6i0jy/bC6v11K1mMRY&#xA;J+7+ONmq3ZTKCfapxVL/AMofy982aF+Q2qeVdUsxba5dR6pHDamRGq06NHFV1JQBjuDXpirHf+cY&#xA;/wArPPPk7zHrF95i042NteaZYx27GSNyZABzQhGYhk4fFXFXqn5caPqenX3nV763e3TUPMdxeWRf&#xA;/dtu9paosi/5JaNh9GKu/OTR9T1j8t9X03TLd7u+n+rejbx7s3C6idqV8FUnFWaYq7FXnn5jWF9c&#xA;effy4nt7eWaC11O7e6ljRmSJWsZFDSMAQoLGlTir0PFXYq7FXnn5p2F9deY/y9ktreWeO18wJLcv&#xA;GjOI4/qsw5uVB4rUgVOKvQ8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqTf408of4h/wAOfpqy/T9K/ov6xH9Z+zyp&#xA;6XLly4/FSlab9MVTnFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqleveavLPl6KGXXtVtNKjuH9OB&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:E318C94D1A7FE51199A7CAEA61D3C8B2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:E318C94D1A7FE51199A7CAEA61D3C8B2</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:93a0ac65-1a1f-460c-a45b-c245327d0f00</stRef:instanceID>
            <stRef:documentID>xmp.did:F77C44C9857DE5119AE7B5AF17AA464B</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77C44C9857DE5119AE7B5AF17AA464B</stEvt:instanceID>
                  <stEvt:when>2015-10-28T22:08:46+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E318C94D1A7FE51199A7CAEA61D3C8B2</stEvt:instanceID>
                  <stEvt:when>2015-10-30T22:24:25+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>841.889648</stDim:w>
            <stDim:h>841.889648</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -705.456 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 705.456 li
753.233 705.456 li
753.233 0 li
cp
clp
63.9297 27.2671 mo
68.9492 27.2671 73.0186 23.1973 73.0186 18.1782 cv
73.0186 13.1587 68.9492 9.08936 63.9297 9.08936 cv
58.9102 9.08936 54.8408 13.1587 54.8408 18.1782 cv
54.8408 23.1973 58.9102 27.2671 63.9297 27.2671 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.75021 .679683 .670222 .90164 cmyk
f
20.3149 18.1782 mo
25.3345 18.1782 29.4038 14.1089 29.4038 9.08936 cv
29.4038 4.06934 25.3345 0 20.3149 0 cv
15.2949 0 11.2256 4.06934 11.2256 9.08936 cv
11.2256 14.1089 15.2949 18.1782 20.3149 18.1782 cv
cp
f
65.9976 63.8589 mo
66.8555 58.0571 li
67.4761 58.1523 68.3042 58.1406 69.2002 57.7563 cv
78.48 57.7563 li
79.3818 63.8589 li
65.9976 63.8589 li
cp
83.6104 92.4629 mo
86.4443 92.4629 li
81.1123 56.3921 li
81.0225 55.7871 80.4253 55.3345 79.7178 55.3345 cv
70.8608 55.3345 li
61.7573 30.6968 li
61.7573 30.6968 58.4385 25.4082 53.0112 26.2383 cv
45.1094 27.4463 39.8062 33.5474 36.9839 41.5 cv
30.5161 39.7202 26.5151 32.7983 24.9482 29.5283 cv
23.7666 23.9624 21.4912 19.856 17.3423 19.8931 cv
12.5137 19.936 7.05273 26.1235 7.39551 59.1069 cv
8.99658 59.1069 li
8.99658 89.5132 li
8.99658 91.6538 10.54 93.4053 12.4258 93.4053 cv
14.3125 93.4053 15.8564 91.6538 15.8564 89.5132 cv
15.8564 59.1069 li
16.8848 59.1069 li
16.8848 89.5132 li
16.8848 91.6538 18.4287 93.4053 20.3149 93.4053 cv
22.2012 93.4053 23.7441 91.6538 23.7441 89.5132 cv
23.7441 59.1069 li
25.1162 59.1069 li
25.1162 59.1069 26.1133 51.3042 26.0889 42.6606 cv
29.5693 45.4805 33.3452 47.1851 35.4531 47.1152 cv
34.3945 52.4658 34.2769 58.2646 35.0835 63.7944 cv
35.6909 63.7944 li
35.6909 89.9756 li
35.6909 91.8623 37.2344 93.4053 39.1201 93.4053 cv
41.0068 93.4053 42.5508 91.8623 42.5508 89.9756 cv
42.5508 63.7944 li
43.9219 63.7944 li
43.9219 89.9756 li
43.9219 91.8623 45.4653 93.4053 47.3521 93.4053 cv
49.2383 93.4053 50.7817 91.8623 50.7817 89.9756 cv
50.7817 63.7944 li
52.4033 63.7944 li
52.4033 63.7944 51.7363 48.1323 56.8003 38.4102 cv
64.7754 55.6143 li
64.5063 55.8047 64.3154 56.0747 64.2686 56.3921 cv
58.9355 92.4629 li
61.769 92.4629 li
65.6953 65.9028 li
79.6841 65.9028 li
83.6104 92.4629 li
cp
f
371.797 29.5532 mo
376.817 29.5532 380.886 25.4839 380.886 20.4644 cv
380.886 15.4443 376.817 11.375 371.797 11.375 cv
366.777 11.375 362.708 15.4443 362.708 20.4644 cv
362.708 25.4839 366.777 29.5532 371.797 29.5532 cv
cp
f
328.182 20.4644 mo
333.202 20.4644 337.271 16.395 337.271 11.375 cv
337.271 6.35547 333.202 2.28613 328.182 2.28613 cv
323.162 2.28613 319.093 6.35547 319.093 11.375 cv
319.093 16.395 323.162 20.4644 328.182 20.4644 cv
cp
f
378.773 57.7637 mo
378.772 57.7549 378.77 57.7349 378.77 57.7349 cv
369.624 32.9829 li
369.624 32.9829 366.306 27.6943 360.878 28.5244 cv
352.977 29.7329 347.673 35.8335 344.851 43.7856 cv
338.383 42.0063 334.382 35.084 332.815 31.814 cv
331.633 26.2485 329.358 22.1426 325.209 22.1797 cv
320.38 22.2222 314.92 28.4102 315.263 61.3931 cv
316.863 61.3931 li
316.863 91.7988 li
316.863 93.9399 318.407 95.6914 320.293 95.6914 cv
322.18 95.6914 323.723 93.9399 323.723 91.7988 cv
323.723 61.3931 li
324.752 61.3931 li
324.752 91.7988 li
324.752 93.9399 326.295 95.6914 328.182 95.6914 cv
330.068 95.6914 331.611 93.9399 331.611 91.7988 cv
331.611 61.3931 li
332.984 61.3931 li
332.984 61.3931 333.981 53.5903 333.956 44.9468 cv
337.437 47.7666 341.213 49.4712 343.321 49.4014 cv
342.262 54.752 342.144 60.5508 342.95 66.0811 cv
343.558 66.0811 li
343.558 92.2617 li
343.558 94.1484 345.101 95.6914 346.988 95.6914 cv
348.874 95.6914 350.417 94.1484 350.417 92.2617 cv
350.417 66.0811 li
351.789 66.0811 li
351.789 92.2617 li
351.789 94.1484 353.333 95.6914 355.219 95.6914 cv
357.105 95.6914 358.648 94.1484 358.648 92.2617 cv
358.648 66.0811 li
360.271 66.0811 li
360.271 66.0811 359.604 50.4189 364.667 40.6968 cv
373.278 59.271 li
372.09 60.3325 371.41 61.6865 371.159 62.6045 cv
370.959 63.3354 371.39 64.0894 372.121 64.2896 cv
372.851 64.4897 373.606 64.0591 373.806 63.3276 cv
373.814 63.2988 374.642 60.394 377.575 60.394 cv
379.985 60.394 380.206 62.3716 380.218 62.9658 cv
380.218 95.6914 li
380.218 96.4497 380.831 97.064 381.589 97.064 cv
382.347 97.064 382.962 96.4497 382.962 95.6914 cv
382.962 62.9658 li
382.962 61.0625 381.816 58.3369 378.773 57.7637 cv
cp
f
220.173 29.2993 mo
225.193 29.2993 229.263 25.23 229.263 20.2104 cv
229.263 15.1904 225.193 11.1211 220.173 11.1211 cv
215.154 11.1211 211.084 15.1904 211.084 20.2104 cv
211.084 25.23 215.154 29.2993 220.173 29.2993 cv
cp
f
176.559 20.2104 mo
181.579 20.2104 185.647 16.1411 185.647 11.1211 cv
185.647 6.10205 181.579 2.03271 176.559 2.03271 cv
171.539 2.03271 167.47 6.10205 167.47 11.1211 cv
167.47 16.1411 171.539 20.2104 176.559 20.2104 cv
cp
f
235.78 95.0313 mo
232.864 85.6289 li
232.687 85.0547 232.155 84.6636 231.554 84.6636 cv
227.026 84.6636 li
227.175 62.5811 li
225.669 62.7183 li
225.654 62.7202 224.092 62.8584 222.1 62.7153 cv
221.375 62.6646 221.16 62.3818 221.089 62.2891 cv
220.93 62.0811 220.847 61.7993 220.808 61.5146 cv
230.325 61.5146 li
231.083 61.5146 231.697 60.9004 231.697 60.1426 cv
231.697 59.3853 231.083 58.771 230.325 58.771 cv
226.777 58.771 li
227.24 58.1045 227.147 57.481 227.147 57.481 cv
218.001 32.7295 li
218.001 32.7295 214.682 27.4409 209.255 28.271 cv
201.354 29.479 196.051 35.5796 193.228 43.5322 cv
186.759 41.7524 182.757 34.8271 181.191 31.5581 cv
180.009 25.9937 177.734 21.8887 173.586 21.9258 cv
168.757 21.9683 163.296 28.1567 163.64 61.1392 cv
165.24 61.1392 li
165.24 91.5454 li
165.24 93.6865 166.784 95.438 168.67 95.438 cv
170.557 95.438 172.1 93.6865 172.1 91.5454 cv
172.1 61.1392 li
173.129 61.1392 li
173.129 91.5454 li
173.129 93.6865 174.672 95.438 176.559 95.438 cv
178.445 95.438 179.989 93.6865 179.989 91.5454 cv
179.989 61.1392 li
181.361 61.1392 li
181.361 61.1392 182.357 53.3369 182.333 44.6934 cv
185.813 47.5132 189.59 49.2178 191.698 49.1479 cv
190.639 54.4985 190.521 60.2969 191.327 65.8271 cv
191.934 65.8271 li
191.934 92.0083 li
191.934 93.8945 193.478 95.438 195.365 95.438 cv
197.251 95.438 198.794 93.8945 198.794 92.0083 cv
198.794 65.8271 li
200.166 65.8271 li
200.166 92.0083 li
200.166 93.8945 201.709 95.438 203.596 95.438 cv
205.482 95.438 207.025 93.8945 207.025 92.0083 cv
207.025 65.8271 li
208.647 65.8271 li
208.647 65.8271 207.98 50.165 213.044 40.4424 cv
221.541 58.771 li
218.375 58.771 li
218.146 59.8589 li
218.094 60.1045 217.671 62.312 218.894 63.9346 cv
219.366 64.5635 220.274 65.3369 221.906 65.4531 cv
222.867 65.521 223.734 65.5313 224.413 65.5205 cv
224.282 84.6636 li
219.893 84.6636 li
219.308 84.6636 218.787 85.0332 218.596 85.5859 cv
215.338 94.9893 li
215.09 95.7046 215.469 96.4863 216.186 96.7339 cv
216.334 96.7861 216.486 96.8105 216.634 96.8105 cv
217.204 96.8105 217.734 96.4541 217.931 95.8867 cv
220.869 87.4072 li
224.263 87.4072 li
224.208 95.4287 li
224.203 96.1865 224.813 96.8047 225.571 96.8101 cv
225.574 96.8101 225.577 96.8101 225.58 96.8101 cv
226.334 96.8101 226.947 96.2017 226.952 95.4478 cv
227.007 87.4072 li
230.543 87.4072 li
233.16 95.8447 li
233.384 96.5684 234.156 96.9717 234.875 96.748 cv
235.6 96.5239 236.004 95.7554 235.78 95.0313 cv
cp
f
521.356 29.5532 mo
526.378 29.5532 530.446 25.4839 530.446 20.4644 cv
530.446 15.4443 526.378 11.375 521.356 11.375 cv
516.337 11.375 512.271 15.4443 512.271 20.4644 cv
512.271 25.4839 516.337 29.5532 521.356 29.5532 cv
cp
f
477.743 20.4644 mo
482.763 20.4644 486.831 16.395 486.831 11.375 cv
486.831 6.35547 482.763 2.28613 477.743 2.28613 cv
472.722 2.28613 468.653 6.35547 468.653 11.375 cv
468.653 16.395 472.722 20.4644 477.743 20.4644 cv
cp
f
522.999 60.6509 mo
567.442 60.6509 li
567.442 93.2632 li
522.999 93.2632 li
522.999 60.6509 li
cp
515.63 93.2632 mo
513.937 97.064 li
577.044 97.064 li
575.351 93.2632 li
570.837 93.2632 li
570.837 60.6509 li
573.548 60.6509 li
574.302 60.6509 574.919 60.0332 574.919 59.2788 cv
574.919 58.7656 li
574.919 58.0112 574.302 57.394 573.548 57.394 cv
528.207 57.394 li
519.187 32.9829 li
519.187 32.9829 515.866 27.6943 510.438 28.5244 cv
502.538 29.7329 497.235 35.8335 494.413 43.7861 cv
487.946 42.0073 483.945 35.0889 482.378 31.8174 cv
481.195 26.2505 478.921 22.1426 474.771 22.1797 cv
469.94 22.2222 464.479 28.4102 464.825 61.3931 cv
466.425 61.3931 li
466.425 91.7988 li
466.425 93.9399 467.968 95.6914 469.856 95.6914 cv
471.741 95.6914 473.284 93.9399 473.284 91.7988 cv
473.284 61.3931 li
474.313 61.3931 li
474.313 91.7988 li
474.313 93.9399 475.856 95.6914 477.743 95.6914 cv
479.63 95.6914 481.173 93.9399 481.173 91.7988 cv
481.173 61.3931 li
482.546 61.3931 li
482.546 61.3931 483.543 53.5908 483.518 44.9468 cv
486.998 47.7666 490.774 49.4712 492.883 49.4014 cv
491.823 54.752 491.706 60.5508 492.513 66.0811 cv
493.118 66.0811 li
493.118 92.2617 li
493.118 94.1484 494.663 95.6914 496.548 95.6914 cv
498.437 95.6914 499.978 94.1484 499.978 92.2617 cv
499.978 66.0811 li
501.349 66.0811 li
501.349 92.2617 li
501.349 94.1484 502.894 95.6914 504.78 95.6914 cv
506.667 95.6914 508.21 94.1484 508.21 92.2617 cv
508.21 66.0811 li
509.833 66.0811 li
509.833 66.0811 509.166 50.4204 514.229 40.6978 cv
521.969 57.394 li
516.224 57.394 li
515.47 57.394 514.851 58.0112 514.851 58.7656 cv
514.851 59.2788 li
514.851 60.0332 515.47 60.6509 516.224 60.6509 cv
519.604 60.6509 li
519.604 93.2632 li
515.63 93.2632 li
cp
f
498.114 202.743 mo
503.134 202.743 507.202 198.673 507.202 193.653 cv
507.202 188.634 503.134 184.564 498.114 184.564 cv
493.093 184.564 489.024 188.634 489.024 193.653 cv
489.024 198.673 493.093 202.743 498.114 202.743 cv
cp
f
527.257 202.743 mo
532.276 202.743 536.345 198.673 536.345 193.653 cv
536.345 188.634 532.276 184.564 527.257 184.564 cv
522.235 184.564 518.167 188.634 518.167 193.653 cv
518.167 198.673 522.235 202.743 527.257 202.743 cv
cp
f
551.188 193.654 mo
550.562 190.29 547.63 190.398 547.63 190.398 cv
528.486 206.313 li
527.362 205.125 525.981 204.442 524.284 204.458 cv
520.48 204.491 516.288 208.346 514.845 226.083 cv
508.34 224.333 504.318 217.373 502.747 214.092 cv
501.564 208.526 499.289 204.42 495.14 204.458 cv
490.312 204.5 484.851 210.689 485.194 243.671 cv
486.794 243.671 li
486.794 274.078 li
486.794 276.218 488.339 277.97 490.226 277.97 cv
492.11 277.97 493.655 276.218 493.655 274.078 cv
493.655 243.671 li
494.683 243.671 li
494.683 274.078 li
494.683 276.218 496.228 277.97 498.114 277.97 cv
500.001 277.97 501.544 276.218 501.544 274.078 cv
501.544 243.671 li
502.915 243.671 li
502.915 243.671 503.912 235.869 503.888 227.226 cv
507.949 230.516 512.438 232.31 514.175 231.51 cv
514.302 231.452 514.409 231.383 514.521 231.317 cv
514.358 234.951 514.289 239.038 514.337 243.671 cv
515.938 243.671 li
515.938 274.078 li
515.938 276.218 517.481 277.97 519.368 277.97 cv
521.253 277.97 522.798 276.218 522.798 274.078 cv
522.798 243.671 li
523.825 243.671 li
523.825 274.078 li
523.825 276.218 525.37 277.97 527.257 277.97 cv
529.144 277.97 530.687 276.218 530.687 274.078 cv
530.687 243.671 li
532.058 243.671 li
532.058 243.671 534.386 225.464 531.84 213.863 cv
551.188 193.654 li
cp
f
580.847 188.76 mo
577.307 192.3 li
574.894 189.886 li
575.132 188.968 574.901 187.956 574.183 187.237 cv
573.104 186.158 571.354 186.158 570.276 187.237 cv
569.198 188.316 569.198 190.066 570.276 191.145 cv
570.995 191.863 572.009 192.092 572.925 191.854 cv
575.339 194.267 li
570.342 199.265 li
567.927 196.851 li
568.167 195.934 567.935 194.921 567.218 194.203 cv
566.14 193.124 564.39 193.124 563.31 194.203 cv
562.231 195.282 562.231 197.031 563.31 198.11 cv
564.03 198.828 565.044 199.057 565.96 198.819 cv
568.374 201.232 li
541.815 227.792 li
544.581 230.558 li
583.612 191.526 li
580.847 188.76 li
cp
f
589.698 230.558 mo
544.581 230.558 li
544.581 235.893 li
546.427 235.893 li
546.427 277.97 li
549.821 277.97 li
549.821 235.893 li
583.612 235.893 li
583.612 277.97 li
587.007 277.97 li
587.007 235.893 li
589.698 235.893 li
589.698 230.558 li
cp
f
551.595 189.81 mo
555.392 193.605 li
557.358 191.638 li
553.562 187.842 li
553.802 186.925 553.569 185.912 552.853 185.194 cv
551.774 184.115 550.024 184.114 548.944 185.194 cv
547.866 186.272 547.866 188.022 548.944 189.101 cv
549.665 189.819 550.679 190.048 551.595 189.81 cv
cp
f
675.464 27.1304 mo
680.485 27.1304 684.552 23.061 684.552 18.0415 cv
684.552 13.0215 680.485 8.95215 675.464 8.95215 cv
670.446 8.95215 666.376 13.0215 666.376 18.0415 cv
666.376 23.061 670.446 27.1304 675.464 27.1304 cv
cp
f
636.53 20.4644 mo
641.55 20.4644 645.618 16.395 645.618 11.375 cv
645.618 6.35547 641.55 2.28613 636.53 2.28613 cv
631.509 2.28613 627.442 6.35547 627.442 11.375 cv
627.442 16.395 631.509 20.4644 636.53 20.4644 cv
cp
f
681.786 60.876 mo
682.94 60.3213 li
683.587 60.4404 684.491 60.4619 685.476 60.0215 cv
686.582 59.5269 686.949 58.8311 687.07 58.3359 cv
741.376 32.2324 li
741.376 93.2632 li
739.114 93.2632 li
739.114 88.7769 li
739.114 86.5693 li
739.114 82.8394 li
739.114 80.1831 li
739.114 77.3579 li
739.114 74.2456 li
739.114 68.7642 li
718.351 68.7642 li
718.351 74.2456 li
706.841 74.2456 li
706.841 80.1831 li
697.583 80.1831 li
697.583 86.5693 li
684.552 86.5693 li
684.552 93.2632 li
681.786 93.2632 li
681.786 60.876 li
cp
674.884 93.2632 mo
672.726 97.064 li
753.233 97.064 li
751.073 93.2632 li
744.772 93.2632 li
744.772 30.6001 li
745.435 30.2817 li
746.31 29.8613 746.759 28.9604 746.431 28.2803 cv
746.208 27.8174 li
745.882 27.1372 744.897 26.9258 744.022 27.3467 cv
686.169 55.1558 li
677.974 32.9829 li
677.974 32.9829 674.653 27.6943 669.226 28.5244 cv
661.325 29.7329 656.022 35.8335 653.2 43.7861 cv
646.735 42.0078 642.734 35.0923 641.166 31.8198 cv
639.984 26.2515 637.71 22.1426 633.56 22.1797 cv
628.729 22.2222 623.269 28.4102 623.612 61.3931 cv
625.214 61.3931 li
625.214 91.7988 li
625.214 93.9399 626.755 95.6914 628.642 95.6914 cv
630.528 95.6914 632.071 93.9399 632.071 91.7988 cv
632.071 61.3931 li
633.101 61.3931 li
633.101 91.7988 li
633.101 93.9399 634.646 95.6914 636.53 95.6914 cv
638.417 95.6914 639.962 93.9399 639.962 91.7988 cv
639.962 61.3931 li
641.333 61.3931 li
641.333 61.3931 642.33 53.5908 642.306 44.9473 cv
645.785 47.7671 649.562 49.4712 651.67 49.4014 cv
650.61 54.752 650.493 60.5508 651.3 66.0811 cv
651.907 66.0811 li
651.907 92.2617 li
651.907 94.1484 653.45 95.6914 655.335 95.6914 cv
657.224 95.6914 658.767 94.1484 658.767 92.2617 cv
658.767 66.0811 li
660.138 66.0811 li
660.138 92.2617 li
660.138 94.1484 661.681 95.6914 663.567 95.6914 cv
665.454 95.6914 666.997 94.1484 666.997 92.2617 cv
666.997 66.0811 li
668.62 66.0811 li
668.62 66.0811 667.953 50.4185 673.017 40.6963 cv
680.894 57.6914 li
677.489 59.3276 li
676.616 59.748 676.165 60.6489 676.493 61.3291 cv
676.714 61.7915 li
676.979 62.3413 677.673 62.5776 678.392 62.4292 cv
678.392 93.2632 li
674.884 93.2632 li
cp
f
20.3149 204.466 mo
25.3345 204.466 29.4038 200.397 29.4038 195.377 cv
29.4038 190.357 25.3345 186.289 20.3149 186.289 cv
15.2949 186.289 11.2256 190.357 11.2256 195.377 cv
11.2256 200.397 15.2949 204.466 20.3149 204.466 cv
cp
f
56.7817 207.586 mo
61.8018 207.586 65.8706 203.517 65.8706 198.497 cv
65.8706 193.478 61.8018 189.409 56.7817 189.409 cv
51.7622 189.409 47.6929 193.478 47.6929 198.497 cv
47.6929 203.517 51.7622 207.586 56.7817 207.586 cv
cp
f
60.5508 240.765 mo
55.5835 240.765 li
55.5835 238.116 li
60.4712 238.116 li
60.5117 239.03 60.5376 239.918 60.5508 240.765 cv
cp
32.4702 236.583 mo
32.4702 232.767 li
34.1543 233.409 35.5674 233.607 36.377 233.234 cv
39.5063 231.792 37.8979 228.003 37.8979 228.003 cv
35.8604 227.613 34.0522 226.706 32.4702 225.535 cv
32.4702 170.674 li
81.0928 170.674 li
81.0928 236.583 li
78.1201 236.583 li
77.2646 223.17 72.0122 210.063 60.9688 208.374 cv
55.5415 207.544 52.2231 212.833 52.2231 212.833 cv
52.2231 212.833 51.7813 213.624 51.0415 214.828 cv
49.3887 213.789 47.894 212.434 46.8135 210.654 cv
43.5562 205.289 39.8345 206.311 40.1069 208.863 cv
40.5757 213.249 44.0566 216.72 48.0679 219.311 cv
45.6558 222.66 42.6099 226.17 40.1069 226.748 cv
40.1069 226.748 36.6265 228.728 39.6919 232.272 cv
42.103 235.061 49.9102 230.041 55.3701 223.046 cv
56.4775 223.499 57.4985 223.878 58.373 224.181 cv
59.5615 228.085 60.1372 232.529 60.3887 236.583 cv
55.5835 236.583 li
55.5835 232.831 li
55.5835 231.825 li
54.0615 231.825 li
50.8042 231.825 li
50.8042 232.831 li
54.0615 232.831 li
54.0615 236.583 li
32.4702 236.583 li
cp
82.6255 238.116 mo
82.6255 169.142 li
30.9375 169.142 li
30.9375 224.256 li
27.9424 221.477 25.9482 217.904 24.9482 215.816 cv
23.7661 210.25 21.4912 206.145 17.3423 206.181 cv
12.5137 206.225 7.05273 212.412 7.39551 245.396 cv
8.99658 245.396 li
8.99658 275.801 li
8.99658 277.942 10.54 279.694 12.4258 279.694 cv
14.3125 279.694 15.8564 277.942 15.8564 275.801 cv
15.8564 245.396 li
16.8848 245.396 li
16.8848 275.801 li
16.8848 277.942 18.4287 279.694 20.3149 279.694 cv
22.2012 279.694 23.7441 277.942 23.7441 275.801 cv
23.7441 245.396 li
25.1162 245.396 li
25.1162 245.396 26.1133 237.593 26.0889 228.949 cv
27.707 230.26 29.3848 231.322 30.9375 232.088 cv
30.9375 238.116 li
54.0615 238.116 li
54.0615 238.722 li
51.9053 238.722 li
51.9053 239.968 li
54.0615 239.968 li
54.0615 240.765 li
35.0078 240.765 li
35.0078 245.396 li
51.1484 245.396 li
51.1484 278.8 li
58.9355 278.8 li
58.9355 245.396 li
60.5156 245.396 li
60.4443 247.722 60.3184 249.188 60.3184 249.188 cv
61.9404 249.188 li
61.9404 275.37 li
61.9404 277.256 63.4839 278.8 65.3706 278.8 cv
67.2568 278.8 68.8003 277.256 68.8003 275.37 cv
68.8003 249.188 li
70.1724 249.188 li
70.1724 275.37 li
70.1724 277.256 71.7158 278.8 73.6021 278.8 cv
75.4883 278.8 77.0313 277.256 77.0313 275.37 cv
77.0313 249.188 li
77.6396 249.188 li
77.8198 247.953 77.9561 246.684 78.0571 245.396 cv
78.5557 245.396 li
78.5557 240.765 li
78.2461 240.765 li
78.249 239.884 78.2344 239 78.2002 238.116 cv
82.6255 238.116 li
cp
f
45.0293 202.705 mo
46.4077 203.899 li
46.4077 203.836 li
47.021 202.567 46.9375 202.014 46.3872 201.347 cv
46.4077 201.326 li
45.9727 200.891 li
45.7988 200.715 45.6094 200.528 45.3906 200.309 cv
44.0327 198.952 42.5337 200.541 42.5337 200.541 cv
43.9395 201.76 li
37.4771 208.222 li
38.4937 209.24 li
45.0293 202.705 li
cp
f
268.077 420.641 mo
273.097 420.641 277.166 416.572 277.166 411.552 cv
277.166 406.532 273.097 402.463 268.077 402.463 cv
263.057 402.463 258.988 406.532 258.988 411.552 cv
258.988 416.572 263.057 420.641 268.077 420.641 cv
cp
f
191.847 418.838 mo
196.867 418.838 200.936 414.77 200.936 409.749 cv
200.936 404.729 196.867 400.66 191.847 400.66 cv
186.826 400.66 182.758 404.729 182.758 409.749 cv
182.758 414.77 186.826 418.838 191.847 418.838 cv
cp
f
235.517 433.983 mo
225.841 433.983 217.308 438.871 212.248 446.312 cv
204.586 443.19 195.556 428.721 193.17 424.716 cv
192.35 422.313 190.996 420.731 188.874 420.553 cv
184.127 420.154 173.118 424.974 173.153 456.775 cv
173.138 456.908 173.133 457.041 173.149 457.169 cv
173.149 457.175 173.152 457.181 173.153 457.186 cv
173.154 457.484 173.149 457.768 173.152 458.07 cv
173.403 458.07 li
173.845 459.16 174.803 460.231 176.099 461.258 cv
166.428 461.258 li
166.428 426.836 li
162.15 426.836 li
162.15 461.258 li
162.15 468.741 li
162.15 490.226 li
166.428 490.226 li
166.428 468.741 li
184.918 468.741 li
184.918 490.226 li
189.197 490.226 li
189.197 468.741 li
191.847 468.741 li
191.847 468.731 li
194.007 469.461 195.463 469.879 195.463 469.879 cv
197.088 490.226 li
203.666 490.226 li
204.049 464.297 li
191.015 457.455 li
191.51 455.275 193.206 447.443 193.917 439.534 cv
198.277 444.977 205.271 450.02 209.422 451.624 cv
208.119 454.863 207.396 458.397 207.396 462.104 cv
207.396 477.636 219.986 490.226 235.517 490.226 cv
251.048 490.226 263.639 477.636 263.639 462.104 cv
263.639 446.572 251.048 433.983 235.517 433.983 cv
cp
f
311.176 461.258 mo
293.974 461.258 li
295.625 459.95 296.748 458.569 296.923 457.169 cv
299.324 440.705 293.572 421.842 278.995 419.612 cv
273.567 418.783 270.249 424.071 270.249 424.071 cv
250.855 436.25 li
250.855 436.25 250.059 437.532 251.654 438.847 cv
253.268 440.179 256 438.537 256 438.537 cv
274.254 430.154 li
280.344 439.633 279.603 457.169 279.603 457.169 cv
266.023 464.297 li
266.406 490.226 li
272.984 490.226 li
274.609 469.879 li
274.609 469.879 276.052 469.465 278.196 468.741 cv
281.48 468.741 li
281.48 490.226 li
285.758 490.226 li
285.758 468.741 li
304.249 468.741 li
304.249 490.226 li
308.526 490.226 li
308.526 468.741 li
311.176 468.741 li
311.176 461.258 li
cp
f
505.872 413.121 mo
510.894 413.121 514.962 409.051 514.962 404.031 cv
514.962 399.012 510.894 394.942 505.872 394.942 cv
500.853 394.942 496.784 399.012 496.784 404.031 cv
496.784 409.051 500.853 413.121 505.872 413.121 cv
cp
f
418.938 415.299 mo
423.96 415.299 428.028 411.229 428.028 406.209 cv
428.028 401.189 423.96 397.12 418.938 397.12 cv
413.919 397.12 409.851 401.189 409.851 406.209 cv
409.851 411.229 413.919 415.299 418.938 415.299 cv
cp
f
421.454 421.991 mo
420.586 418.958 418.901 416.986 415.966 417.013 cv
411.203 417.056 400.209 421.446 400.243 453.233 cv
400.229 453.367 400.224 453.5 400.239 453.629 cv
400.24 453.636 400.243 453.642 400.243 453.648 cv
400.245 453.945 400.24 454.229 400.243 454.53 cv
400.494 454.53 li
400.936 455.62 401.895 456.692 403.19 457.718 cv
393.521 457.718 li
393.521 423.296 li
389.241 423.296 li
389.241 457.718 li
389.241 465.201 li
389.241 486.686 li
393.521 486.686 li
393.521 465.201 li
412.011 465.201 li
412.011 486.686 li
416.288 486.686 li
416.288 465.201 li
418.938 465.201 li
418.938 465.191 li
421.1 465.921 422.556 466.339 422.556 466.339 cv
424.179 486.686 li
430.759 486.686 li
431.142 460.757 li
418.133 453.929 li
418.75 451.674 420.959 443.228 421.849 434.967 cv
427.616 440.65 435.21 445.079 437.233 444.147 cv
440.362 442.704 438.755 438.917 438.755 438.917 cv
431.229 437.476 423.854 426.038 421.454 421.991 cv
cp
f
538.269 457.718 mo
521.066 457.718 li
522.718 456.41 523.842 455.029 524.017 453.629 cv
526.417 437.165 520.665 418.302 506.087 416.072 cv
505.222 415.94 504.417 415.976 503.664 416.108 cv
472.997 403.345 li
472.997 403.345 471.351 403.438 470.942 405.576 cv
470.528 407.742 473.548 409.072 473.548 409.072 cv
497.688 421.956 li
497.759 422.116 497.845 422.284 497.946 422.456 cv
494.211 425.853 487.229 430.945 477.909 432.192 cv
477.909 432.192 476.302 435.979 479.431 437.423 cv
481.905 438.562 495.821 435.096 502.735 429.14 cv
507.318 438.898 506.694 453.629 506.694 453.629 cv
493.114 460.757 li
493.497 486.686 li
500.077 486.686 li
501.702 466.339 li
501.702 466.339 503.145 465.925 505.29 465.201 cv
508.571 465.201 li
508.571 486.686 li
512.849 486.686 li
512.849 465.201 li
531.339 465.201 li
531.339 486.686 li
535.618 486.686 li
535.618 465.201 li
538.269 465.201 li
538.269 457.718 li
cp
f
493.114 442.333 mo
493.114 437.958 li
441.552 437.958 li
441.552 442.333 li
465.513 442.333 li
465.513 486.686 li
469.153 486.686 li
469.153 442.333 li
493.114 442.333 li
cp
f
474.403 390.514 mo
470.534 389.187 li
462.595 406.523 li
470.028 409.072 li
474.403 390.514 li
cp
f
465.513 437.149 mo
470.54 437.149 li
470.54 436.409 li
465.439 436.409 li
465.079 432.782 li
465.513 432.782 li
465.189 429.521 li
465.513 429.521 li
463.63 410.545 li
459.538 410.545 li
457.655 429.521 li
457.979 429.521 li
457.655 432.782 li
458.089 432.782 li
457.729 436.409 li
452.626 436.409 li
452.626 437.149 li
457.655 437.149 li
465.513 437.149 li
cp
f
698.054 395.479 mo
698.054 393.045 696.081 391.072 693.647 391.072 cv
691.212 391.072 689.239 393.045 689.239 395.479 cv
689.239 397.912 691.212 399.885 693.647 399.885 cv
696.081 399.885 698.054 397.912 698.054 395.479 cv
cp
f
719.126 410.287 mo
724.146 410.287 728.216 406.218 728.216 401.197 cv
728.216 396.178 724.146 392.109 719.126 392.109 cv
714.104 392.109 710.038 396.178 710.038 401.197 cv
710.038 406.218 714.104 410.287 719.126 410.287 cv
cp
f
649.976 414.615 mo
654.997 414.615 659.065 410.546 659.065 405.525 cv
659.065 400.506 654.997 396.438 649.976 396.438 cv
644.956 396.438 640.888 400.506 640.888 405.525 cv
640.888 410.546 644.956 414.615 649.976 414.615 cv
cp
f
748.823 457.034 mo
731.62 457.034 li
733.271 455.727 734.395 454.346 734.569 452.946 cv
734.583 452.836 734.584 452.723 734.574 452.608 cv
734.615 449.712 734.809 428.356 731.817 418.01 cv
729.723 410.77 724.116 410.851 720.726 413.163 cv
714.455 411.05 702.869 406.462 699.464 400.479 cv
699.464 400.479 695.405 399.8 694.733 403.18 cv
694.107 406.337 708.757 418.204 718.296 419.938 cv
718.927 427.831 718.418 450.399 717.249 452.946 cv
703.669 460.074 li
704.052 486.003 li
710.632 486.003 li
712.255 465.655 li
712.255 465.655 713.696 465.241 715.84 464.519 cv
719.126 464.519 li
719.126 486.003 li
723.403 486.003 li
723.403 464.519 li
741.894 464.519 li
741.894 486.003 li
746.173 486.003 li
746.173 464.519 li
748.823 464.519 li
748.823 457.034 li
cp
f
671.075 402.151 mo
674.495 403.146 li
673.964 404.971 li
670.745 404.035 li
671.075 402.151 li
cp
671.513 399.68 mo
675.19 400.75 li
674.751 402.265 li
671.237 401.244 li
671.513 399.68 li
cp
678.47 404.301 mo
677.938 406.125 li
674.843 405.227 li
675.374 403.4 li
678.47 404.301 li
cp
676.071 401.006 mo
679.167 401.905 li
678.726 403.42 li
675.632 402.521 li
676.071 401.006 li
cp
682.444 405.456 mo
681.915 407.281 li
678.819 406.381 li
679.349 404.557 li
682.444 405.456 li
cp
680.044 402.162 mo
683.14 403.061 li
682.7 404.576 li
679.604 403.676 li
680.044 402.162 li
cp
686.798 406.721 mo
686.069 408.488 li
682.794 407.536 li
683.323 405.711 li
686.798 406.721 li
cp
684.021 403.316 mo
687.757 404.402 li
687.149 405.869 li
683.581 404.832 li
684.021 403.316 li
cp
684.989 411.107 mo
682.007 410.242 li
682.538 408.416 li
685.718 409.342 li
684.989 411.107 li
cp
683.907 413.727 mo
681.222 412.947 li
681.753 411.121 li
684.638 411.959 li
683.907 413.727 li
cp
682.827 416.347 mo
680.437 415.652 li
680.966 413.826 li
683.556 414.579 li
682.827 416.347 li
cp
681.747 418.967 mo
679.647 418.357 li
680.179 416.531 li
682.476 417.199 li
681.747 418.967 li
cp
680.923 420.961 mo
679.05 420.416 li
679.394 419.236 li
681.396 419.818 li
680.923 420.961 li
cp
675.673 417.201 mo
676.204 415.376 li
679.3 416.275 li
678.769 418.102 li
675.673 417.201 li
cp
678.171 420.16 mo
675.075 419.262 li
675.417 418.081 li
678.513 418.98 li
678.171 420.16 li
cp
671.698 416.046 mo
672.229 414.221 li
675.325 415.12 li
674.794 416.945 li
671.698 416.046 li
cp
674.194 419.006 mo
671.101 418.105 li
671.442 416.926 li
674.538 417.825 li
674.194 419.006 li
cp
669.737 415.476 mo
670.3 414.982 670.834 414.49 671.337 414.005 cv
670.819 415.79 li
669.737 415.476 li
cp
670.22 417.851 mo
668.403 417.322 li
668.551 416.486 li
668.671 416.387 668.787 416.287 668.905 416.188 cv
670.563 416.67 li
670.22 417.851 li
cp
677.153 408.83 mo
675.637 408.39 li
675.742 408.052 675.784 407.751 675.735 407.508 cv
675.64 407.023 675.468 406.631 675.255 406.3 cv
677.683 407.005 li
677.153 408.83 li
cp
676.991 412.671 mo
680.085 413.57 li
679.556 415.396 li
676.46 414.496 li
676.991 412.671 li
cp
674.174 410.898 mo
674.636 410.299 675.007 409.74 675.274 409.238 cv
676.897 409.71 li
676.366 411.535 li
674.174 410.898 li
cp
672.691 412.628 mo
672.994 412.302 673.281 411.981 673.546 411.67 cv
676.11 412.415 li
675.579 414.24 li
672.483 413.342 li
672.691 412.628 li
cp
678.034 409.086 mo
678.563 407.261 li
681.659 408.16 li
681.128 409.986 li
678.034 409.086 li
cp
680.872 410.865 mo
680.341 412.691 li
677.245 411.791 li
677.776 409.966 li
680.872 410.865 li
cp
670.585 404.941 mo
670.889 405.029 li
670.752 405.307 670.597 405.581 670.425 405.852 cv
670.585 404.941 li
cp
668.99 407.653 mo
664.604 412.228 655.677 415.646 650.216 417.416 cv
649.363 416.719 648.313 416.318 647.003 416.33 cv
642.239 416.372 631.245 420.765 631.281 452.561 cv
631.267 452.691 631.263 452.82 631.278 452.946 cv
631.278 452.95 631.28 452.953 631.28 452.957 cv
631.282 453.257 631.277 453.542 631.28 453.847 cv
631.532 453.847 li
631.973 454.937 632.932 456.009 634.227 457.034 cv
624.556 457.034 li
624.556 422.612 li
620.278 422.612 li
620.278 457.034 li
620.278 464.519 li
620.278 486.003 li
624.556 486.003 li
624.556 464.519 li
643.048 464.519 li
643.048 486.003 li
647.325 486.003 li
647.325 464.519 li
649.976 464.519 li
649.976 464.508 li
652.137 465.237 653.593 465.655 653.593 465.655 cv
655.218 486.003 li
661.796 486.003 li
662.179 460.074 li
649.17 453.246 li
650.048 450.038 654.156 434.277 653.074 424.409 cv
657.451 423.937 662.83 420.924 667.253 417.516 cv
667.149 418.103 li
681.563 422.292 li
689.239 403.689 li
670.642 398.283 li
668.99 407.653 li
cp
f
58.8633 415.66 mo
64.0654 415.66 68.2813 411.443 68.2813 406.242 cv
68.2813 401.041 64.0654 396.825 58.8633 396.825 cv
53.6611 396.825 49.4463 401.041 49.4463 406.242 cv
49.4463 411.443 53.6611 415.66 58.8633 415.66 cv
cp
f
74.877 492.42 mo
70.6348 492.42 67.1836 488.969 67.1836 484.727 cv
67.1836 480.483 70.6348 477.031 74.877 477.031 cv
79.1201 477.031 82.5713 480.483 82.5713 484.727 cv
82.5713 488.969 79.1201 492.42 74.877 492.42 cv
cp
74.877 471.018 mo
67.3184 471.018 61.1689 477.167 61.1689 484.727 cv
61.1689 492.285 67.3184 498.436 74.877 498.436 cv
82.4355 498.436 88.5859 492.285 88.5859 484.727 cv
88.5859 477.167 82.4355 471.018 74.877 471.018 cv
cp
f
51.105 474.33 mo
51.7451 469.191 li
51.7451 469.191 53.2388 468.763 55.459 468.014 cv
59.7744 468.014 li
55.4663 469.598 52.856 471.866 51.105 474.33 cv
cp
32.3516 472.785 mo
32.3521 472.787 li
30.3267 471.16 27.4883 469.788 23.541 469.296 cv
23.541 442.945 li
27.0039 442.271 29.6875 440.708 30.6816 438.755 cv
34.3179 440.304 li
34.5532 440.606 35.0098 440.785 35.627 440.861 cv
35.7705 440.923 li
35.7886 440.881 li
39.9014 441.253 50.7852 437.313 58.2656 431.877 cv
58.3999 441.007 57.8716 453.948 56.9189 456.023 cv
42.8486 463.408 li
42.8486 483.143 li
40.7588 483.153 li
40.7588 483.153 39.0068 475.902 32.3516 472.785 cv
cp
27.4814 484.727 mo
27.4814 488.969 24.0293 492.42 19.7871 492.42 cv
15.5449 492.42 12.0938 488.969 12.0938 484.727 cv
12.0938 483.144 12.5747 481.672 13.397 480.447 cv
26.1777 480.447 li
27 481.672 27.4814 483.144 27.4814 484.727 cv
cp
85.7612 468.014 mo
89.6328 468.014 li
89.6328 460.26 li
83.3125 460.26 li
83.3125 425.249 li
77.8223 425.249 li
77.8223 460.26 li
71.8081 460.26 li
73.519 458.905 74.6831 457.474 74.8643 456.023 cv
74.8784 455.91 74.8799 455.795 74.8706 455.678 cv
74.9146 452.964 75.0952 434.32 72.0137 423.662 cv
69.8633 416.228 64.1406 416.245 60.6191 418.576 cv
60.6191 418.577 60.6187 418.577 60.6187 418.577 cv
60.6172 418.578 li
60.0293 418.968 59.502 419.419 59.064 419.914 cv
54.6855 423.613 42.0396 433.833 34.1826 435.387 cv
34.1826 435.387 33.9824 435.591 33.7734 435.959 cv
29.9131 434.314 li
28.0488 432.264 24.1909 430.851 19.7197 430.851 cv
13.4316 430.851 8.33203 430.666 8.33203 437.082 cv
8.33203 442.571 12.0698 443.227 17.0869 443.302 cv
17.0869 469.296 li
5.10547 470.791 3.40918 480.447 3.40918 480.447 cv
6.77246 480.447 li
6.32813 481.796 6.0791 483.231 6.0791 484.727 cv
6.0791 492.285 12.2285 498.436 19.7871 498.436 cv
27.3467 498.436 33.4961 492.285 33.4961 484.727 cv
33.4961 483.231 33.2471 481.796 32.8027 480.447 cv
34.9072 480.447 li
35.6367 481.842 36.4009 484.187 36.7949 488.125 cv
57.7168 488.125 li
57.7168 488.125 57.873 470.615 74.877 470.615 cv
91.8809 470.615 90.7686 487.235 90.7686 487.235 cv
90.7686 487.235 95.6362 473.521 85.7612 468.014 cv
cp
f
209.534 212.48 mo
214.554 212.48 218.623 208.411 218.623 203.391 cv
218.623 198.371 214.554 194.302 209.534 194.302 cv
204.513 194.302 200.445 198.371 200.445 203.391 cv
200.445 208.411 204.513 212.48 209.534 212.48 cv
cp
f
160.476 201.971 mo
165.465 202.526 169.958 198.932 170.514 193.942 cv
171.069 188.953 167.475 184.459 162.486 183.904 cv
157.496 183.349 153.003 186.943 152.448 191.933 cv
151.893 196.921 155.486 201.416 160.476 201.971 cv
cp
f
195.63 244.655 mo
196.531 242.56 197.661 239.883 198.838 236.975 cv
198.838 251.156 li
195.63 244.655 li
cp
175.843 254.292 mo
175.843 235.229 li
181.139 235.229 li
179.46 240.293 178.458 244.081 178.458 244.081 cv
182.896 254.292 li
175.843 254.292 li
cp
256.206 242.138 mo
254.513 242.138 li
256.616 230.314 li
253.627 229.783 li
251.43 242.138 li
219.027 242.138 li
219.2 242.04 li
205.277 214.251 li
202.811 210.665 196.188 209.594 196.188 209.594 cv
196.188 209.594 173.727 207.292 171.758 220.907 cv
168.791 219.671 li
160.672 206.584 li
160.513 206.292 160.342 206.019 160.163 205.762 cv
160.159 205.757 li
160.159 205.757 li
158.996 204.102 157.388 203.211 155.207 203.422 cv
150.4 203.886 144.793 213.912 141.486 246.73 cv
142.065 246.795 li
142.065 273.755 li
142.065 276.46 143.901 278.674 146.144 278.674 cv
148.388 278.674 150.225 276.46 150.225 273.755 cv
150.225 247.703 li
150.869 247.774 li
150.869 273.624 li
150.869 276.33 152.705 278.543 154.949 278.543 cv
157.192 278.543 159.027 276.33 159.027 273.624 cv
159.027 248.683 li
159.098 248.69 li
159.098 248.69 162.262 234.697 162.753 222.265 cv
165.354 225.113 li
177.742 229.11 li
181.67 227.405 179.176 223.996 179.176 223.996 cv
176.313 222.803 li
176.689 220.508 178.743 215.745 189.271 216.258 cv
186.478 220.854 183.98 227.05 182.091 232.437 cv
175.843 232.437 li
173.785 232.437 li
173.785 235.229 li
173.785 254.292 li
172.371 254.292 li
172.371 257.084 li
184.11 257.084 li
184.932 258.974 li
170.509 258.974 li
170.509 241.69 li
167.072 241.69 li
167.072 279.676 li
170.509 279.676 li
170.509 262.062 li
186.273 262.062 li
186.942 263.601 li
183.901 279.676 li
190.128 279.676 li
194.721 264.938 li
194.962 279.676 li
200.896 279.676 li
202.427 262.062 li
203.849 262.062 li
203.849 279.676 li
207.286 279.676 li
207.286 241.69 li
203.849 241.69 li
203.849 258.974 li
202.695 258.974 li
201.763 257.084 li
202.053 257.084 li
202.053 254.292 li
200.896 254.292 li
200.896 232.437 li
200.639 232.437 li
200.631 232.437 li
201.554 230.043 202.444 227.626 203.207 225.363 cv
214.366 244.761 li
214.523 244.672 li
214.523 245.933 li
214.523 279.676 li
218.318 279.676 li
218.318 245.933 li
250.755 245.933 li
249.038 255.586 li
252.027 256.118 li
253.838 245.933 li
256.206 245.933 li
256.206 279.676 li
260.001 279.676 li
260.001 245.933 li
260.001 242.138 li
256.206 242.138 li
cp
f
252.03 256.588 mo
221.294 256.588 li
222.031 268.132 233.533 270.02 235.577 270.451 cv
237.62 270.882 238.228 275.485 233.989 276.053 cv
229.928 276.596 229.494 279.676 229.494 279.676 cv
251.155 279.676 li
251.155 276.743 249.929 276.053 249.929 276.053 cv
247.359 271.739 247.458 271.367 249.823 268.132 cv
252.188 264.896 252.03 256.588 252.03 256.588 cv
cp
f
391.261 228.378 mo
391.261 233.398 395.331 237.467 400.351 237.467 cv
405.37 237.467 409.44 233.398 409.44 228.378 cv
409.44 223.358 405.37 219.289 400.351 219.289 cv
395.331 219.289 391.261 223.358 391.261 228.378 cv
cp
f
416.21 246.163 mo
310.691 246.163 li
310.691 254.521 li
314.441 254.521 li
314.441 280.055 li
319.191 280.055 li
319.191 254.521 li
409.44 254.521 li
409.44 280.055 li
414.19 280.055 li
414.19 254.521 li
416.21 254.521 li
416.21 246.163 li
cp
f
390.726 241.719 mo
390.726 243.306 396.099 244.593 402.726 244.593 cv
409.353 244.593 414.726 243.306 414.726 241.719 cv
414.726 240.13 409.353 238.843 402.726 238.843 cv
396.099 238.843 390.726 240.13 390.726 241.719 cv
cp
f
394.276 206.143 mo
395.675 206.143 li
395.993 206.143 396.255 205.827 396.255 205.441 cv
396.255 196.878 li
396.255 196.493 395.993 196.176 395.677 196.176 cv
394.276 196.176 li
393.958 196.176 393.698 196.492 393.698 196.878 cv
393.698 205.441 li
393.698 205.827 393.958 206.143 394.276 206.143 cv
cp
f
397.386 205.39 mo
398.784 205.39 li
399.103 205.39 399.362 205.122 399.362 204.794 cv
399.364 197.525 li
399.362 197.197 399.103 196.929 398.784 196.929 cv
397.386 196.929 li
397.067 196.929 396.806 197.198 396.808 197.525 cv
396.806 204.794 li
396.806 205.122 397.067 205.391 397.386 205.39 cv
cp
f
377.866 205.39 mo
379.265 205.391 li
379.583 205.391 379.843 205.122 379.843 204.794 cv
379.843 197.525 li
379.843 197.197 379.583 196.929 379.265 196.929 cv
377.866 196.929 li
377.548 196.929 377.288 197.198 377.288 197.525 cv
377.288 204.794 li
377.288 205.122 377.548 205.391 377.866 205.39 cv
cp
f
380.827 206.143 mo
382.226 206.143 li
382.544 206.143 382.804 205.827 382.804 205.441 cv
382.804 196.878 li
382.804 196.493 382.544 196.176 382.226 196.176 cv
380.827 196.176 li
380.509 196.176 380.249 196.493 380.249 196.878 cv
380.249 205.441 li
380.247 205.827 380.509 206.143 380.827 206.143 cv
cp
f
393.099 199.866 mo
383.128 199.867 li
383.128 202.452 li
393.099 202.452 li
393.099 199.866 li
cp
f
316.128 244.593 mo
319.441 244.593 li
320.541 244.593 321.912 243.826 322.487 242.889 cv
330.23 230.269 li
330.805 229.332 331.924 229.188 332.717 229.951 cv
345.441 243.843 li
345.441 243.843 371.138 245.718 382.86 242.624 cv
394.583 239.528 389.731 228.755 389.731 228.755 cv
390.726 203.975 li
390.726 203.975 388.356 202.311 385.106 203.629 cv
382.163 226.904 li
369.718 226.071 346.679 228.221 346.679 228.221 cv
346.677 228.244 li
346.103 227.795 345.524 227.35 345.083 227.017 cv
330.538 216.047 li
329.66 215.385 328.54 215.649 328.049 216.634 cv
315.02 242.803 li
314.53 243.788 315.029 244.593 316.128 244.593 cv
cp
f
724.722 207.221 mo
729.153 209.577 734.657 207.894 737.013 203.461 cv
739.37 199.029 737.685 193.525 733.253 191.169 cv
728.821 188.813 723.317 190.497 720.96 194.929 cv
718.604 199.362 720.288 204.865 724.722 207.221 cv
cp
f
750.813 246.163 mo
645.294 246.163 li
645.294 254.521 li
649.044 254.521 li
649.044 280.055 li
653.794 280.055 li
653.794 254.521 li
744.044 254.521 li
744.044 280.055 li
748.794 280.055 li
748.794 254.521 li
750.813 254.521 li
750.813 246.163 li
cp
f
713.526 243.563 mo
713.526 243.563 719.74 235.459 723.871 226.972 cv
726.187 243.563 li
726.187 243.563 729.142 244.904 731.788 243.009 cv
729.401 213.063 li
728.579 209.982 724.218 208.896 724.218 208.896 cv
720.266 206.841 714.104 206.1 701.266 228.963 cv
671.501 210.387 li
671.501 210.387 668.376 211.512 667.833 215.637 cv
694.584 235.317 li
662.308 236.011 li
662.308 236.011 659.907 239.66 662.308 243.315 cv
713.526 243.563 li
cp
f
151.502 616.677 mo
156.522 616.677 160.592 612.606 160.592 607.587 cv
160.592 602.567 156.522 598.497 151.502 598.497 cv
146.481 598.497 142.415 602.567 142.415 607.587 cv
142.415 612.606 146.481 616.677 151.502 616.677 cv
cp
f
29.6973 621.003 mo
34.7188 621.003 38.7871 616.935 38.7871 611.915 cv
38.7871 606.895 34.7188 602.825 29.6973 602.825 cv
24.6777 602.825 20.6094 606.895 20.6094 611.915 cv
20.6094 616.935 24.6777 621.003 29.6973 621.003 cv
cp
f
50.7266 611.196 mo
48.0103 617.2 36.4785 621.686 29.936 623.804 cv
29.084 623.107 28.0332 622.708 26.7246 622.72 cv
21.9609 622.761 10.9673 627.152 11.0024 658.949 cv
10.9883 659.08 10.9844 659.209 11 659.335 cv
11.0005 659.339 11.002 659.342 11.0024 659.346 cv
11.0034 659.646 10.999 659.931 11.002 660.235 cv
11.2534 660.235 li
11.6943 661.325 12.6533 662.397 13.9482 663.423 cv
4.27734 663.423 li
4.27734 629.001 li
0 629.001 li
0 663.423 li
0 670.907 li
0 692.392 li
4.27734 692.392 li
4.27734 670.907 li
22.7695 670.907 li
22.7695 692.392 li
27.0469 692.392 li
27.0469 670.907 li
29.6973 670.907 li
29.6973 670.896 li
31.8584 671.626 33.3145 672.044 33.3145 672.044 cv
34.9395 692.392 li
41.5176 692.392 li
41.9004 666.463 li
28.8916 659.635 li
29.769 656.427 33.8779 640.666 32.7959 630.798 cv
42.1543 629.787 56.1074 617.167 55.457 613.896 cv
54.7852 610.517 50.7266 611.196 50.7266 611.196 cv
cp
f
181.2 663.423 mo
163.997 663.423 li
165.647 662.115 166.771 660.734 166.946 659.335 cv
166.959 659.225 166.96 659.111 166.951 658.997 cv
166.992 656.101 167.185 634.745 164.194 624.398 cv
162.1 617.159 156.493 617.24 153.103 619.552 cv
146.833 617.438 135.245 612.85 131.84 606.868 cv
131.84 606.868 127.782 606.188 127.11 609.568 cv
126.484 612.725 141.134 624.593 150.672 626.327 cv
151.303 634.22 150.795 656.788 149.625 659.335 cv
136.045 666.463 li
136.428 692.392 li
143.008 692.392 li
144.631 672.044 li
144.631 672.044 146.073 671.63 148.216 670.907 cv
151.502 670.907 li
151.502 692.392 li
155.78 692.392 li
155.78 670.907 li
174.27 670.907 li
174.27 692.392 li
178.549 692.392 li
178.549 670.907 li
181.2 670.907 li
181.2 663.423 li
cp
f
93.8325 578.951 mo
92.5474 579.123 91.3335 579.51 90.2271 580.08 cv
89.3315 581.95 86.8682 587.9 88.9004 593.169 cv
90.2178 596.585 93.2051 599.116 97.7603 600.71 cv
99.2593 600.37 100.639 599.725 101.838 598.844 cv
103.356 594.925 103.549 591.292 102.361 588.019 cv
100.566 583.073 96.0776 580.151 93.8325 578.951 cv
cp
f
95.9385 578.875 mo
98.4438 580.467 101.833 583.295 103.408 587.629 cv
104.495 590.615 104.517 593.859 103.533 597.309 cv
105.295 595.347 106.377 592.761 106.377 589.916 cv
106.377 584.019 101.757 579.207 95.9385 578.875 cv
cp
f
87.855 593.564 mo
86.0684 588.927 87.4253 583.963 88.5269 581.168 cv
85.9116 583.194 84.2222 586.354 84.2222 589.916 cv
84.2222 596.033 89.1807 600.993 95.3022 600.993 cv
95.3521 600.993 95.4009 600.986 95.4512 600.985 cv
91.6548 599.265 89.0942 596.782 87.855 593.564 cv
cp
f
343.555 651.456 mo
343.543 651.469 li
342.891 650.942 342.062 650.705 341.201 650.745 cv
341.148 650.741 341.098 650.739 341.046 650.739 cv
333.945 650.739 li
333.945 648.791 li
323.099 659.637 li
323.817 660.152 324.636 660.533 325.524 660.741 cv
325.765 660.82 326.012 660.877 326.266 660.902 cv
326.266 660.925 li
340.531 660.925 li
345.084 665.478 li
346.529 666.923 350.105 667.508 351.83 665.783 cv
353.555 664.057 352.776 660.678 351.329 659.232 cv
343.555 651.456 li
cp
f
353.914 636.042 mo
353.333 636.042 352.835 636.373 352.628 636.842 cv
346.913 646.634 li
346.762 646.838 346.674 647.086 346.674 647.353 cv
346.674 648.06 347.294 648.633 348.063 648.633 cv
348.635 648.633 349.127 648.312 349.339 647.854 cv
355.089 638.002 li
355.124 637.952 355.154 637.9 355.179 637.848 cv
355.183 637.846 li
355.259 637.687 355.303 637.509 355.303 637.322 cv
355.303 636.615 354.681 636.042 353.914 636.042 cv
cp
f
328.08 607.787 mo
323.088 607.787 319.041 611.834 319.041 616.826 cv
319.041 621.819 323.088 625.865 328.08 625.865 cv
333.073 625.865 337.12 621.819 337.12 616.826 cv
337.12 611.834 333.073 607.787 328.08 607.787 cv
cp
f
287.646 685.294 mo
283.665 685.294 280.438 682.067 280.438 678.087 cv
280.438 674.105 283.665 670.879 287.646 670.879 cv
291.626 670.879 294.854 674.105 294.854 678.087 cv
294.854 682.067 291.626 685.294 287.646 685.294 cv
cp
287.646 665.326 mo
280.599 665.326 274.886 671.039 274.886 678.087 cv
274.886 685.133 280.599 690.846 287.646 690.846 cv
294.692 690.846 300.405 685.133 300.405 678.087 cv
300.405 671.039 294.692 665.326 287.646 665.326 cv
cp
f
287.646 675.093 mo
285.992 675.093 284.651 676.434 284.651 678.087 cv
284.651 679.74 285.992 681.08 287.646 681.08 cv
289.298 681.08 290.64 679.74 290.64 678.087 cv
290.64 676.434 289.298 675.093 287.646 675.093 cv
cp
f
287.646 673.303 mo
287.921 673.303 288.146 673.078 288.146 672.803 cv
288.146 672.527 287.921 672.303 287.646 672.303 cv
287.369 672.303 287.146 672.527 287.146 672.803 cv
287.146 673.078 287.369 673.303 287.646 673.303 cv
cp
f
287.646 682.854 mo
287.369 682.854 287.146 683.076 287.146 683.352 cv
287.146 683.629 287.369 683.852 287.646 683.852 cv
287.921 683.852 288.146 683.629 288.146 683.352 cv
288.146 683.076 287.921 682.854 287.646 682.854 cv
cp
f
292.251 678.087 mo
292.251 678.363 292.475 678.586 292.751 678.586 cv
293.026 678.586 293.25 678.363 293.25 678.087 cv
293.25 677.811 293.026 677.587 292.751 677.587 cv
292.475 677.587 292.251 677.811 292.251 678.087 cv
cp
f
282.409 677.587 mo
282.132 677.587 281.909 677.811 281.909 678.087 cv
281.909 678.363 282.132 678.586 282.409 678.586 cv
282.685 678.586 282.908 678.363 282.908 678.087 cv
282.908 677.811 282.685 677.587 282.409 677.587 cv
cp
f
375.364 685.294 mo
371.382 685.294 368.155 682.067 368.155 678.087 cv
368.155 674.105 371.382 670.879 375.364 670.879 cv
379.344 670.879 382.571 674.105 382.571 678.087 cv
382.571 682.067 379.344 685.294 375.364 685.294 cv
cp
375.364 665.328 mo
368.315 665.328 362.604 671.04 362.604 678.088 cv
362.604 685.134 368.315 690.847 375.364 690.847 cv
382.41 690.847 388.122 685.134 388.122 678.088 cv
388.122 671.04 382.41 665.328 375.364 665.328 cv
cp
f
375.363 675.093 mo
373.71 675.093 372.37 676.434 372.37 678.087 cv
372.37 679.74 373.71 681.08 375.363 681.08 cv
377.017 681.08 378.356 679.74 378.356 678.087 cv
378.356 676.434 377.017 675.093 375.363 675.093 cv
cp
f
375.429 673.312 mo
375.706 673.312 375.929 673.088 375.929 672.813 cv
375.929 672.535 375.706 672.313 375.429 672.313 cv
375.153 672.313 374.929 672.535 374.929 672.813 cv
374.929 673.088 375.153 673.312 375.429 673.312 cv
cp
f
375.429 682.861 mo
375.153 682.861 374.929 683.086 374.929 683.361 cv
374.929 683.637 375.153 683.861 375.429 683.861 cv
375.706 683.861 375.929 683.637 375.929 683.361 cv
375.929 683.086 375.706 682.861 375.429 682.861 cv
cp
f
380.034 678.096 mo
380.034 678.371 380.259 678.596 380.534 678.596 cv
380.81 678.596 381.034 678.371 381.034 678.096 cv
381.034 677.82 380.81 677.596 380.534 677.596 cv
380.259 677.596 380.034 677.82 380.034 678.096 cv
cp
f
370.192 677.596 mo
369.917 677.596 369.692 677.82 369.692 678.096 cv
369.692 678.371 369.917 678.596 370.192 678.596 cv
370.468 678.596 370.692 678.371 370.692 678.096 cv
370.692 677.82 370.468 677.596 370.192 677.596 cv
cp
f
404.056 665.338 mo
401.015 665.338 398.55 662.872 398.55 659.83 cv
398.55 656.789 401.015 654.324 404.056 654.324 cv
407.097 654.324 409.563 656.789 409.563 659.83 cv
409.563 662.872 407.097 665.338 404.056 665.338 cv
cp
374.286 638.07 mo
374.286 642.281 li
353.906 642.281 li
353.906 672.059 li
312.093 672.059 li
312.086 672.089 li
312.086 668.184 li
335.264 668.184 li
336.834 668.184 338.12 666.896 338.12 665.326 cv
338.12 665.007 li
338.12 663.437 336.834 662.149 335.264 662.149 cv
319.394 662.149 li
316.739 626.486 li
321.169 630.915 li
320.582 631.925 320.246 633.096 320.246 634.348 cv
320.246 654.688 li
320.274 654.688 li
320.338 655.412 320.518 656.104 320.789 656.746 cv
333.945 643.587 li
333.945 642.052 li
334.153 642.259 li
334.881 642.986 335.836 643.347 336.791 643.342 cv
336.791 643.343 li
346.064 643.343 li
347.79 643.343 349.188 641.841 349.188 639.989 cv
349.188 638.138 347.79 636.639 346.064 636.639 cv
339.024 636.639 li
332.403 630.016 li
331.147 628.479 329.236 627.496 327.096 627.496 cv
325.9 627.496 324.777 627.805 323.798 628.343 cv
316.32 620.864 li
316.319 620.859 li
316.203 619.293 314.826 618.104 313.258 618.222 cv
311.196 618.419 li
309.629 618.536 308.442 619.914 308.559 621.48 cv
309.693 642.281 li
287.646 642.281 li
287.646 619.504 304.665 600.714 326.679 597.903 cv
326.679 597.895 li
327.85 597.687 329.232 597.594 330.623 597.566 cv
330.629 597.566 330.635 597.565 330.641 597.565 cv
330.641 597.566 li
332.265 597.534 333.892 597.592 335.217 597.669 cv
335.217 597.619 li
336.079 597.673 336.933 597.76 337.781 597.861 cv
337.997 597.882 338.119 597.895 338.119 597.895 cv
338.119 597.905 li
358.828 600.55 375.111 617.337 376.968 638.282 cv
376.122 638.146 375.222 638.07 374.286 638.07 cv
cp
267.082 660.762 mo
267.082 662.075 266.017 663.141 264.701 663.141 cv
255.739 663.141 li
254.426 663.141 253.359 662.075 253.359 660.762 cv
253.359 659.809 li
253.359 658.494 254.426 657.428 255.739 657.428 cv
264.701 657.428 li
266.017 657.428 267.082 658.494 267.082 659.809 cv
267.082 660.762 li
cp
414.769 666.154 mo
414.769 665.433 414.71 664.717 414.597 664.008 cv
414.481 663.297 414.313 662.594 414.087 661.893 cv
411.454 652.127 402.394 646.361 392.794 643.753 cv
392.226 643.508 391.649 643.268 391.062 643.029 cv
389.304 642.315 387.462 641.634 385.549 640.986 cv
383.285 613.617 360.357 592.108 332.404 592.108 cv
304.451 592.108 281.522 613.617 279.26 640.986 cv
276.068 642.065 273.086 643.24 270.338 644.498 cv
269.789 644.75 269.248 645.004 268.719 645.262 cv
259.071 648.009 249.736 655.146 250.039 666.144 cv
250.04 666.965 250.114 667.774 250.26 668.576 cv
250.401 669.355 250.621 670.126 250.896 670.889 cv
250.889 670.889 li
250.898 670.916 250.912 670.943 250.923 670.971 cv
251.058 671.34 251.213 671.707 251.379 672.072 cv
251.421 672.165 251.456 672.259 251.499 672.351 cv
251.715 672.804 251.95 673.255 252.212 673.701 cv
252.537 674.256 252.896 674.805 253.291 675.349 cv
253.624 675.769 253.974 676.168 254.326 676.563 cv
250.719 676.563 li
249.469 676.563 248.455 677.576 248.455 678.826 cv
248.455 680.076 249.469 681.09 250.719 681.09 cv
259.427 681.09 li
260.313 681.665 261.229 682.199 262.167 682.688 cv
262.674 682.951 263.196 683.214 263.732 683.475 cv
267.175 683.76 270.615 683.794 274.037 683.789 cv
273.332 682.07 272.941 680.189 272.941 678.216 cv
272.941 677.766 272.969 677.322 273.009 676.882 cv
273.019 676.771 273.029 676.66 273.042 676.55 cv
273.091 676.122 273.151 675.698 273.235 675.283 cv
273.246 675.229 273.262 675.178 273.272 675.125 cv
273.351 674.761 273.445 674.403 273.549 674.05 cv
273.587 673.922 273.626 673.794 273.667 673.667 cv
273.789 673.293 273.921 672.923 274.071 672.563 cv
274.115 672.457 274.166 672.355 274.213 672.252 cv
274.334 671.979 274.464 671.709 274.602 671.445 cv
274.673 671.307 274.745 671.169 274.821 671.033 cv
277.34 666.547 282.135 663.511 287.646 663.511 cv
293.158 663.511 297.956 666.548 300.474 671.036 cv
300.548 671.17 300.619 671.305 300.689 671.44 cv
300.829 671.708 300.96 671.98 301.083 672.257 cv
301.128 672.359 301.179 672.458 301.222 672.562 cv
301.372 672.923 301.505 673.293 301.627 673.668 cv
301.668 673.794 301.706 673.921 301.743 674.049 cv
301.848 674.403 301.942 674.762 302.021 675.128 cv
302.032 675.18 302.047 675.23 302.058 675.282 cv
302.142 675.698 302.202 676.122 302.251 676.55 cv
302.264 676.66 302.274 676.771 302.284 676.882 cv
302.324 677.322 302.352 677.766 302.352 678.216 cv
302.352 680.217 301.951 682.123 301.228 683.861 cv
303.9 683.861 306.657 683.861 309.463 683.861 cv
306.14 698.779 li
360.639 698.779 li
357.315 683.861 li
358.821 683.861 360.316 683.861 361.783 683.861 cv
361.059 682.123 360.658 680.217 360.658 678.216 cv
360.658 677.766 360.686 677.323 360.726 676.884 cv
360.735 676.771 360.746 676.659 360.76 676.548 cv
360.808 676.122 360.868 675.699 360.952 675.285 cv
360.964 675.228 360.98 675.172 360.992 675.114 cv
361.069 674.756 361.162 674.404 361.265 674.057 cv
361.304 673.924 361.343 673.792 361.386 673.661 cv
361.507 673.29 361.638 672.924 361.787 672.566 cv
361.832 672.457 361.886 672.352 361.934 672.243 cv
362.055 671.973 362.182 671.706 362.318 671.444 cv
362.39 671.308 362.461 671.17 362.537 671.035 cv
365.055 666.548 369.852 663.511 375.364 663.511 cv
380.872 663.511 385.666 666.543 388.187 671.025 cv
388.267 671.167 388.341 671.312 388.417 671.456 cv
388.548 671.709 388.671 671.967 388.788 672.229 cv
388.841 672.344 388.897 672.457 388.946 672.574 cv
389.093 672.929 389.224 673.292 389.343 673.659 cv
389.386 673.791 389.425 673.924 389.464 674.058 cv
389.567 674.404 389.659 674.757 389.737 675.114 cv
389.749 675.172 389.765 675.228 389.776 675.285 cv
389.86 675.699 389.921 676.122 389.97 676.548 cv
389.983 676.659 389.993 676.771 390.003 676.884 cv
390.044 677.323 390.071 677.766 390.071 678.216 cv
390.071 680.203 389.675 682.096 388.96 683.825 cv
395.458 683.202 402.194 684.727 407.249 679.827 cv
408.112 679.158 408.858 678.449 409.54 677.73 cv
409.913 677.333 410.259 676.932 410.595 676.527 cv
410.671 676.435 410.747 676.343 410.821 676.25 cv
411.128 675.868 411.419 675.484 411.69 675.098 cv
411.767 674.988 411.839 674.878 411.913 674.769 cv
412.142 674.432 412.356 674.093 412.558 673.751 cv
412.62 673.644 412.687 673.537 412.747 673.429 cv
412.946 673.072 413.13 672.714 413.3 672.354 cv
413.366 672.215 413.433 672.076 413.493 671.938 cv
413.647 671.589 413.792 671.24 413.919 670.889 cv
413.913 670.889 li
414.47 669.342 414.769 667.763 414.769 666.154 cv
cp
f
732.356 610.276 mo
736.089 606.271 735.866 599.995 731.86 596.265 cv
727.853 592.532 721.581 592.758 717.849 596.764 cv
714.118 600.77 714.337 607.041 718.347 610.775 cv
722.351 614.507 728.626 614.284 732.356 610.276 cv
cp
f
724.832 655.226 mo
724.294 654.823 723.735 654.44 723.155 654.08 cv
725.065 650.222 727.938 644.137 730.305 637.937 cv
732.311 643.646 li
724.832 655.226 li
cp
727.208 683.156 mo
722.243 692.278 710.778 695.657 701.657 690.69 cv
692.536 685.724 689.155 674.261 694.124 665.14 cv
695.382 662.828 697.06 660.89 699.009 659.358 cv
705.772 660.483 717.388 661.818 721.283 658.589 cv
729.177 663.967 731.873 674.593 727.208 683.156 cv
cp
743.864 634.79 mo
739.747 632.131 li
737.223 636.04 li
734.199 624.204 li
735.535 612.407 721.833 613.256 720.517 618.53 cv
719.321 623.326 709.07 643.101 705.065 648.832 cv
688.663 648.581 li
675.505 673.618 li
681.808 677.051 li
687.941 667.652 li
684.967 678.056 689.471 689.523 699.36 694.908 cv
710.81 701.143 725.192 696.9 731.427 685.454 cv
736.28 676.541 734.782 665.851 728.481 658.61 cv
734.367 649.496 li
737.743 659.103 li
740.591 660.239 742.737 657.629 742.737 657.629 cv
738.876 642.514 li
743.864 634.79 li
cp
f
631.272 697.784 mo
686.499 697.784 li
631.272 664.447 li
631.272 697.784 li
cp
f
503.853 618.968 mo
509.446 618.968 513.979 614.434 513.979 608.84 cv
513.979 603.245 509.446 598.712 503.853 598.712 cv
498.259 598.712 493.726 603.245 493.726 608.84 cv
493.726 614.434 498.259 618.968 503.853 618.968 cv
cp
f
511.556 686.19 mo
507.655 697.087 495.614 702.776 484.72 698.874 cv
473.823 694.972 468.132 682.932 472.036 672.037 cv
474.798 664.319 481.646 659.236 489.274 658.3 cv
489.435 659.535 489.618 660.811 489.824 662.125 cv
489.831 662.273 489.849 662.418 489.888 662.556 cv
489.89 662.562 489.893 662.566 489.895 662.572 cv
489.946 662.9 489.99 663.214 490.046 663.548 cv
490.322 663.505 li
492.983 667.946 504.612 670.659 511.493 671.903 cv
513.127 676.357 513.276 681.385 511.556 686.19 cv
cp
524.257 639.157 mo
527.534 640.328 li
525.554 644.865 li
522.132 643.652 li
524.257 639.157 li
cp
509.763 659.855 mo
509.724 659.818 509.687 659.779 509.646 659.742 cv
509.951 657.021 510.911 647.439 510.478 638.303 cv
516.138 642.37 522.859 645.421 526.581 645.966 cv
527.216 646.24 529.949 646.861 538.677 643.323 cv
540.663 644.159 li
541.132 643.323 li
538.347 641.913 li
538.347 641.913 534.186 643.219 530.578 643.45 cv
530.917 641.601 529.765 639.744 529.765 639.744 cv
524.183 639.552 517.936 634.635 513.348 630.126 cv
524.327 627.837 532.007 618.663 532.007 618.663 cv
532.644 614.366 528.2 614.063 528.2 614.063 cv
521.789 621.48 512.029 622.245 506.626 622.014 cv
505.226 620.119 503.366 619.136 500.913 619.541 cv
496.169 620.324 486.413 625.915 488.698 652.964 cv
479.097 654.118 470.475 660.525 466.997 670.23 cv
462.101 683.905 469.239 699.015 482.913 703.912 cv
496.589 708.81 511.696 701.669 516.595 687.996 cv
517.659 685.021 518.154 681.979 518.137 678.989 cv
521.921 694.84 li
529.165 693.709 li
525.134 665.097 li
509.763 659.855 li
cp
f
579.581 648.378 mo
522.126 648.378 li
522.126 653.253 li
548.825 653.253 li
548.825 702.675 li
552.882 702.675 li
552.882 653.253 li
579.581 653.253 li
579.581 648.378 li
cp
f
534.499 647.363 mo
565.513 647.363 li
565.513 645.69 li
534.499 645.69 li
534.499 647.363 li
cp
f
573.458 619.02 mo
571.79 618.642 li
565.687 645.602 li
567.354 645.979 li
573.458 619.02 li
cp
f
541.729 645.085 mo
542.062 645.3 542.509 645.206 542.724 644.871 cv
542.938 644.537 542.843 644.094 542.511 643.878 cv
541.511 643.231 li
540.729 644.439 li
541.729 645.085 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (MMM) ()
%%Title: (12 medical rehabilitation sevice for dysability and elderly icon set.eps)
%%CreationDate: 10/30/2015 10:24 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6D3$$aE@(HeJGqoc0d,jh[O^5b1Nb>dkjI^/HEUlfP.gS+=:jNO8=h\!6OZP5Fas@LF&#,(<R42[os2163"J$u:NU0]AS,Jc
%S2g=WIs1k[S%#$'H2FZ>GQ77^2`9K?dX/OhZep/9mm$`dTDdGmIe30_?TgL7G)f^EAA1dOG<:2ebrN,TD9o2ViJVo`^A6d]gTQ,#
%rnXX,?[_V:mdkYk^\Z's_lmF]^%pp9?eK@(hYak7T7?k.heqjHJ,/A:XNfR.[SNOPI/a!,h>8j3IXSQ[DA8C4g%b$MZ;u,Mr(MD9
%oIms5d4\gUrO(INSK!@afu$Vcg])W7VMT5<gN'TLGIu=$pqp]&Cd6,qmIfU3s7l3;^O#M%fC*'qrT;qjs8HMukO(!I?2#/=^O3"f
%fTgo+PO.lcqrQ(\f=u_/c0&I"L2N$Hm)Q;ZI"PAq?T3K+,pZj&eUFj0Z/(4coIZ%KLsIFTruHlCp_/,%2s$q%3^<Mp$X=qBJ:5&/
%c$l4s62KL@OSjnnM:_X6YJ9l'o9Wh!p?kYamH,)\F8cdW>6j]6Pj7Y;Fkh@"dV_9,)`QH"pa#0LhW>X_YQ+:?l[SfRc$t3@o!?s:
%^!#m$J,P9as.=H$W9JJa\Z[+QJ=h>_q<Rd)p\)k`p*);(;dK"DGFuSJh!X5_dF7833>,*5NPFM0^O>qW=0KBI&cM.hDpU:`c#*(0
%rUi*Vr7/tt^W%BjIZ_D@o(CbPIJ7)obFa_km0-^,fc*MPc'!K*d<X3t`d[4%3%%IOk&FkUN1\drrL<P"IeDjj:TVGtYmKI.q(LU>
%q<SsC4l6\H`TO`OVuLE-ml,!BrUndGho;4br9;*p:\/&-rTPtSji=j&4hUXn4n09$hV4]QCNJV/GJE_+*ae\(42j-cqP-mVl!M33
%#&iAX`'=19?gDpre";'fNW&E$hS8sMbJ/H%bBH2K_2n"JHhU=>DsXph^V8*6Isgi4I^OZTM19GN^A7??^SAJ:0iJ7r#paqHqld1f
%J+r'h`(T[lm:SA-s76,Thr`uaqu#R1Qg\kfMfnI&HLn?6S!Wi%a4V!V[lUX6oTuagIEb5Dk1M&0b5nMJI@En.=$-'1H^d'gh>GM^
%r=Ad7Vk?Ypq:kWs?We3(qraT$6cJcerU&qNq>,<lrQDDEg%=h#\"A)VDHL8<]akFac!C>.f3eI)]?fA^ou/uN=gEMU<ppg!r;GBb
%H)o\Is34XFI.Oi9hL0jc>92Y:3l]GAYLVe8R#A%u5B[))jo;k=IsCebkAPhBroKLHr8uPMcMs$aY7(;`[bkg6^#E8rfG1U)=r7(?
%`W&N]M*^e/fc-EL^Hkfremj1!D_JkSp!9M?rosC)pMXC<Nk'u6rT0NX[d)`IigVl6^HVM[h%sG8]Y"!Y5JR+/@N>2c3q>7Kqp^pf
%o+LQ7-bk(LQoFbXcU[oPqj3qgZ.8"b2a=nRr#:!Xs70qeoC9/hF8=ttZQK2)++O%f>A!W:(L,iVHqAV0Xn\5fAkkF:)LZC2i2;uU
%9kGEqRm6fBrr(pm>X!93ri"s<dJ>1.gVoYai7iub@);d5pHQRo=244ss3Rh4g@m7\/rS?\)nP#^hL5CVbmR`%ckj_=4&M!_pj[bf
%K=okbfdHCkS-qR350Z:'I6'U15*Q#mHtT'us8+uEf]Rs:*q?Kk538]JiW%(Knc-PVlgM^jor%ZDqDA3?J,f!Cr-@K*2ELi$me`.0
%_\jTcAX'fI?QR@"H)eu(^XQFkm<-o]n*5OR*pZbZ>-a@Bf%Su,S*dB7[tj\0SppHeIC"\\qnDfQmW\R,raLB4TDI-&4aue#msUQ.
%Fk7`3MuG]EOmJ?tdDeBHR,`)>O,*6bT&sXgW(ahl\^,.We_Rm106lB2\%[:B5Nt+SZ9EG$r-NkLQ(Q(B^-;6IS)*luq73iX4[0JN
%H"!=8II)nggCl5LJ)Z_Xg3\.Q\+jY*R!kP#Ym)kQm.4m4rHYWn]m]>81[R!nZ+'GDhW]r1T8Lr*J+02b#@f.7LH"_lA=lBhi$A/?
%DkB,g9`*H]Id$^rp9C2V^HN?\C_Zm<#7np?p+Z5:pJ5ed4:8i!PX!m(4l"rPhqcWUESp6ZqfZ?8MiHe>^YM'/4kaa;gtglDh9EQO
%fC/FFG$"-iNV7J'c)58o`uaN^3d"WhRd2ugXOc?UVR_[6)Zh\Z2XbKJbV<pIlo%83%?tZ2B'W7kd9aaY^UJbND*W4_<]3onJ/'#8
%WGfE:HTP2u4[L'$noM9(pZqFT4tkLMnUo.$4rQ0G@eO6*^"Je!HYQ@-]+6e=AfEWebhKJg^XX^tmsCNiU[C%0Wm.SDSuhr6Cp$L%
%F-r3rEuQq8pE/A/ooItMXhE!hl\:s[50bMp]ZL#G=Pkt$UMbK;Xj?F;mp9*<52!0ceuR>IGILm"f%YE"lOVSDO7uF.7Zrae@O%Ye
%lZb=?no+I(VYU#G?(\^tpO%51o<N!"R_a/:c!\fPR'4lu-(1&lHg5=`Ze]UV@N*o=_UullT(^_h^8m=`XRU/&q]<N5k\_Br2R[I5
%@iF6G<1=f7;-e!+-QCGdCc"qJjD&1L1U[%qeE>XOra\@tYP6clV8n)6T1AoX?Th9<4PfU=oDWIpA'as]ch+U!a!Sch9n=Z2nkWB=
%0SSjf5M?gZe)1bDhSZ+JW(.eJO7qu_a.poK7sbK%CLGiF`i!hl_)elGr#*5?gtD"?d&LQI-a#"(>AW$hqD.EF`u8H'M6A_)W<B:[
%eN-9;c/`X2?sWQ;L@oKbo:#sU8!f[nEqB5#Cq7:hIi</ag$KtSQV>0\Ljn,sqoB]bSR1K6\=G5HB(F;T1m;QI'9%;oS::KZaDada
%C[F+6hJh9q!^jqY1\BJfN0[tg[7N2M=9!\Plakh-Mh<stFdp:[EG1;[5/WuSc:>-N\*m$=C<`>2SaPJJ58WeQLn!Z4S!d4QZ*nKZ
%4iY-OAj)YYfC.5S3uY2Mp\+!t04'-Oo.(WF_%"ldA)agbJKb$VqCb_Ce^/bM0X3l,Ep64RD_')d^._Zc?pC#.l1F`CVrN,-J&`6p
%Z#XcgQ_YPf>Uf$HSdOk^NV:d&D59bXBW"j0BFA[aJR0nhF]M(38r$S2'U,REIND;-komG'AN#uS48[;eXKtu^<c9^;'L:h`:*4PJ
%^2$B6!G3_/4X/G8g"6i6I/Ne$hmUKG3m-_X#?h"5N()'.23qP(h3PdM%K5:qNkkshAK$=^$I+:P3:npr#O7.@9qgSlVe4AVGsSoO
%1WMt&btc=Ac:kPL1Sj-bQt$'1[<^.@c0S5JCoV3nDC2!GRtp+^aMB=nicJOlYU%mp>mjR0D$puB,;)MhNab;3,q0TU/5$M\SZtpR
%d=RPk#:lt($>Hm/G1n6p(>YcdG=S^qT(^>8g3<<S_90+0LC6IBp`oAiQ6t9\qs(N"eS"At_UhZ24n$"0Rm'@2I8#\an%n@=GkC"O
%[3'6Dk24URE)Mb2*8[0(<F<OEAY1$W$CB:Z/bZ:BepDVOY=J'TMp_'ga\f^+XcL`N3-na+I.['OqRWm0T'SH*F1?bcF6iegp$^I5
%pYJu4CPJDCfO^@O?QJb)gf#SKs,imN5CK?*.Y:G<p/LZ_p3sUH'`.(X.J6X3eF2\'kcL530d!1*Sj$U-R]4D3M0V*64na-bZ*\iE
%kdTCFmFl>/3)e@Ghq"%ic@>h[T(-=QloA7tesO'_#Wq(%)WJ;F[h7eL!FlR"6/rBKlj-K\S(jDaO06Y\V?Xq:05Na"1ppP3hJiZ]
%+\YG/4W09+ZLLe.>]f;9#DSl_Id4gu6%ki2LDb8=0$bc5S9qh*KD%[-eGsr)UQt>\/<gs+NUjt/I,%>&K]\<"REh2D[uRk`=8FMC
%/KS]<q_lh;HOo!`hK"Xbcs(pk^M7qo]k`9hWe)G,h'3"H0,PV<@rS5J%lFlZ,S-$MYTCHdIRKj)H`3__=Ah)493s;[Eefa5omUQ+
%UmCS"?[^g5htPZnW37iAc>I9Fo<9#t4nagG))*/-m.;cfs$,N6r'%7=aZcCgSpNF=qrJpbbd<El1[W5q_D>gOr=3K&[l`+nc;(c-
%1EUV;Q^RMD6gOJ%.LsMs\Vn1NDeD1;o=Y(JrqA:=<Fc5;*VVe8'Rt+GmVRi2k6ZTo>[Cp+8&Xt974b&9#jQ=8&28/#FGaB[7)0)*
%@[IbH*(M:G@f_8?CLl0&aYn\fQ.kruSpg@c&Q!gq:EPWYI)gtkkWIQ`3fj!to*Fl)Rha1[8$Q3[m*\\N@bD1,9JSbFo*Vh)EhoNc
%;Ur69Sh2"Kqm'6V3mhhX]?5<9a6rZ&F^A-so[`coZF.`NWX[\<]%B\Hlh5ZE"tsdh4P;En=_kpQ_'ss,!(YcJh?t8]/$&BYXn>,d
%D_nk.@GkH1#>!11-e-2<M$j.U%uLeQNarOD-*m@PTBnLMrQA=Bpoj_E&N`0;@`S'oQ3U`\7#]KNJhKXh70/c#"EV%=0FoZ:UQ=Xg
%"_.,?&6p+L-TXJKH2c%#rlu%;+nS$:l+Sgp!@+A`N&?.k'n<I?,CeTfn]0h<H<tlE38]cnDca%Mb^llT05TGF2??p6%WI,mYRoWp
%R0n>KFmHkEY<,t-5+K0ECDPVTZL`737m;.WaZ.\>BOj9Sd!F[>,uSMNXpoiE@b^]rS#=ttVq]]/0\A90TBL1-37%`QC`'bhQlRKL
%dZ;HtOs+?8\D$lSD5<fuCn7457n]WPd:nPEE0d&`p1)M(n(@+?*UWHnUOE-u6/-;qZMfgB`GZW!r/Q?4D]&cV:Z'iqq3M$&GP$Oe
%GG"Psp97WP0d%-9.E?3rk*ei[f=nZgOWQcQ"o6&2oY8=+q"oPioC_GLW&b@2Qco-ldi8>TdMqm'i9m0EV`F[?n<QP"b>+Et-e)]=
%mLl/(p#-uSj+DhfprCYZHZq'U:S[jb8Y^Z+/+,ONmS5"P5A#I/4Sue$I_JV0r;0(;/FBdGnaYQDBr>rkN0VkJYq^6WS*S_;Mc'(o
%>3Oj:>0+_-ZuPYM\"@L?m+.g'2Qr`H/Jh?Bh1j<?<e?+o+e+Ct5BKgaGIC%)4M3B*I!_""9`nq8^$)?/VQ#5q1ULJU_=dH1RJBkD
%dXN>cs7[0R-PHHkHHdO"]Ef:fGg=(GDuP2ZHp8sl*u!OmM;L?@0(/T)Wpl@9r"8]$4#[##\DuJOWfACuWng^,TR$&,jitQ7[TELc
%e;h[+Pc<!`]c`irRQ\uO!qpnT"0(Kbn+=pjr#>Y67UL`ui#dEMn,L@UrZ<Kc2`od=:N-7&^Mc''rK+.1NW\9=ET3H@+T:5E2h,r^
%Y8dA>o/Sue]q,;uKV/8>h>=B_]Qo2<rg3)'IIe,DqrZ5nhnAn,g^O0c5#pG"VtViOrJS?O1)G?7F-]Dt8$r'+n^i*Xs6u#nnj8E9
%2u9u=RX8J_(/hRUEsT&M@=qZNH+Aosn]RpDs$+/,ZdN_MRnboUM@SU',rJc_VVAjDV/@E[.@D?p`1qiY8jP'gYLp"<gGF5/1li+n
%M9Sg\DJP]i"SRRRT"pMY-Z\goApY.>a%3]5@dWN)^Fa0+o1V7C?L2_2[cb*VN,lP\1&Q&=[F_!!SI#1_T]*UZOHU\S_5R-8b!+.r
%2G2548if%am3ZMC9/&u1&sRc+>t\I9YLO+urAGtk*pgA\mWpP;"njQ\[[0,Sg"Lm:>=fB$^4Bl,>K>"T\%)K[Npd,MDu%ru=$55?
%>kb%KV+sT#Hc77Q\,3&@[.)JMiQNY1l[b^I.I4KE]-L,62ME+;nu[%<6@H[d3,%Jrb]/O`+SsOY-@Ta6\9aXXg,lRB1Q>o5?q1`O
%*gX6DQY6q4=-nNNgi'g8'[^s1+_;!4D<'1]2[2pg9s\'Q[,%Tgmg'#*+).XK-0sMk0jaJh&@9:Jj=eV#n2"=$F!Qu)*;9j2OEbZN
%n3HS,X@5aj)fi-pWqDc*g#f\$c*uMVFGa#jrl/1'pPpW/l,&d<L1s,pDHGJrDQ[k85\q"f[_,\U&mK/V-'JkDV;"jGN#nH#G&Q[)
%15;?G2#BF^B<rJ6],c.Rpqbf3]3?)*GZ9NH/isS[qT>ctI.C+>YF@Ch0:O'9GaPVq<Msb[/!/E=VkfTGU>`W,)eKaE?<=A/lsLm>
%Z-bMZ*bj74_gJi-^Q5tH6X%ZJ$^m!Uc?V;5XY$.cJq4N+2h[n[p2%Urh/=$+c>o+dZZdIV5mfI9AO>'IJ2(^=ZS1mK?*Rb+[+buH
%fo&S;$(WpJIC$bnmkp\TR\hU4Z:o!kN4mPOh)arklu$\!a4&^_$p,V^&RCd+MtrZX25i2b/8bimRIt*YRgILq<Nr+Q-`*b00e%k`
%"<1*O!h10CB1nK"n.b5g7(]=_#-#9DI.)5^Sd-L4!k`,MDCLR8WqGXP9jP2ZQT7aig0IbF4*7O:AQqG)DB%lV+3mh/`f@#d1OC$E
%nL-KD4sgC\<jEf.??1q(6!?S3Zt[fO:s_S<51i"u$D8a9I:)H]KIMsRC%5dSOq:-i@CjX"2bs9#qLIm&LX*/[65T+8qTK_BgnD?^
%'>%DV&5\/Zj!A!7GE#E<i235BKlsJ!)r?a[<4hh6klOWIFZiJ`PF>r/3XcCb$+Q#dNc60JcHWe(H*WD?e$LO`TJAP3W5%G>l[$'W
%>,kOangFf-AJ5X8gR`Sh(mfDa(#SCDl_Vs#2A\1;]\=CCiaCdIMkCqOH\Y5!?gt(-h40]IUin@pU%uRqSQCSSK2+><:;b0Vn/2^Q
%hn+kf8B4D-($o[KL<6)g_M50!-E:sLcK2'?s6cQV1;?,PJrMFi@k&QQ6bPi?g.ErVJpoUV*5g3`U-u=t^]:V,D&jPI/sjuA[K(JL
%F1t\!+$?u&@-+Zt1"XF5,#qc_PYPGDnGY.Ph(CBq;;W.q[dY;+II+r`7;7>_.k6R0)I)@B*'P^Be0r+qKX8-O,Y4<%B"lo%4"e!:
%;ae(JQml!ZqI+gb-:-O2gCq?+a4SYjo7sXgX'oI8FK7Dmem?7g@3L;`LFI#9i/WNeeM7<u&06()n0kGZh=\_l(*oCJ;Pr]:AKt`S
%a1$$8gr;1M9rSG5X'5HXVM]f@^\kh5M66'eLV3`'$rZ?u$I&I"5kYlpS75(dg=r%D)e?eUeT/\KK*S]3F-[j)`hrsC_@=l')i*+i
%jm1)ag,Lsr&^=^r.JEZgQ8D>\X<ge(K:ta*-t=PqL"6rfaEX?lDqh'-JL1idA:on+ICBg'ZW11%0C3>QHT;K_',4-[N4U.:O)jVM
%D_3R'Z5ImlJI3HlanMNdBg\ZcY2fCU%ka'sr!H9'RH9ZALYAr6O)Bh<X\E,*7b-:>]Fu5rbA8[ihP=A.R:Lmia$WZ_9l7U^p/9;`
%1uZi"DDl>S"c4<)n8q>hXibhNV,F^%qW$7Gfua_gZD!$rR&91elsEgT=]tqA*2_MbF>u!`.Uh$u!#1\)`l(R,@4;_iWH2G7#c+tW
%Rtpu&=c4C*N@)$GYuu1eG1c+dA'B%Xe;c[mYq^,`ZpUa2K#8qBqqa&.*l?.agMZFBR:Bi-e]'T(;(B*`*GaB8g(Z=B0A>+5LR1Y`
%U.ENco4+Fi9#_i"__hP?fH/jMA5GPDnT=K\oSJTCQjG*1>Z<Ym4KI.IYD(.u/+#e-k[Lk*'22`>_huo%4eA^bUoD.`_VSR@6_p,o
%1>ii"nDe<$N1=IY3?&<B<ir&l:Y*bYEbt4WD$mX^UETiP)AiO\$Eh:jOJl:$W0W2)BTA@$[NuLjW&@1aXG]&JTI6u7fB2C/_V/FN
%f5A>S6O(u19bg^tC'\L\6,91^T_n+&R\7O=>O<aaQ:]WG&F?8_q0'!"j$\;f!%ZjZ\Xd>\ceD/Co7!Z!TPZKt9KNc,2>!,>VO<sd
%.<iFG<hf3"4'$_&R*@[Ts,V=#d$c<CjWNXfbsNuu"9WF=7R3V2>O<S%QeU1,/uta&"Z^'(i&nI-:b^JT1o3feLOflc'RdX3J[?Rq
%MrtZ(kh+Jo]VNI$838s^.U69CdB^=9VXH^Ah7Qnr\XO8[J4#E8JsObm+[p4"DL>#:H%gU$,q2;q7BE\JG"?50^t:Flf5EX8!/6Nj
%1q<]OYa"+CTMp5K%XHeU/`FLm?\&4>!f-R7e/*L\X'Ot9_f-Ri*T9G/$>a,Xl7T^<:gtlq&2nU&D!WW--Yg(I^qD7QN%bnWP<hM7
%6hEAdI=]5;&XL\"_TJhaA2B/V#)70LjY6//.1a@;T].)%a9_p:YOE:hVT[r'=1\n[(t+B"K4)/#AV)\<,(&[rdWNG"G^Yr6D4O/@
%O8CIKL.LnQ9Lai\maDC#i<c1/jT5"Xl&pWgp,4BE)\k9.XY'6"Dp5U+Q4c<%#uqK&BkqAT#T#s=`QU%mB@c\,1hV`Df&513l4s3Q
%.palt_4])X!k3G3ULcpT$Y'Us`CnAd0#=4$fZK.aKSl(`OGe3NW_N3hDUj]"\g"N.BEr@/<XEJp7u7c\eg\8BjB]fMKY+XI/M!Q(
%;@Y+=et$u-Ou])E.o?T!'j],<C8U))dhA$K9cCbnd&N&d&_pq/*$_Q%SjU:^5$>2M:1]RG6F^%1e+1`R+kQ"Z=_[WYgL(^)*aV9/
%NeV19ZtOkpmLaiOiukiG[MmsGq**DSe(Rc_hT1CF@0a;OK+%PJZ1cuB5"tQab9Q%>WG'q4+Xu]+)C],5>fmLF\41haU78,VTOR`&
%gu!]_c2c(/\Gs*c#R5$OcnoS\8''^)5D4:%qE[8ppB?Bk&!HPd-JOEW;Uq#p=A:RkbY-D)X&@]-RW9fq-!A]Mf3jE`?I]NU0k2UV
%L4k8C94#&phReR>\N8qO$SKF$h-[-H!b8CpU<$Iqbu#./05_3]dRBj<@)_@bCkt?>;frCLn]GS-@gpeTqD(VsipW+NMW%De$7LIt
%Ud]>h?'KdGejsJ&*%/(RpR?+SH]eGg$57C&Fhd0OS(NU+PK5d$'*gQ:%5O.i$qkZ`Cri_t$P``8.r/g1>M?%+E>sk+jR0(#l1lRD
%RUJrb.\KLeIe++FULD`CK[t)p(o3Sc-QPUigWbAZ&4<-XU3J72"=>9<\?1qTorj[g&0Yq1XEcG0a9=4"M\3+K(^MEGYiBo-]DNs*
%XapmWGJaT8oo*U:`=?g5^pm^u2U*a'2N0pG9STKTC)T2?XjJms]2C8b,2adg$1Yb$YXT:]iPF(kiOpF!LcMtKf!.fjO;\YR#_"KP
%R!$ZECV34u032=Mh/(eSU+-JYg\@$i0IL4d0I_5J&"e!:)KrWi0mfUe/jbX"Ja^F[1m9Ei]Rap2#7s8)/ql:eJKj33'QTn=8RYCI
%rNjhFV&SbJVF`o+d,J5iLbC'e3fNpGehcAt&-QNM":r`O@c*G2iNEfHXXq]MW163WiXJ.mg)FR)JK;l>)UW-7knqdTGJL`B&\TuQ
%S^NHf@A;nTn0+!F+#Z1C@!LX1`$K%dJDBc$oeat2+>_LOoRdG_nfZBrL(Cmj_:[FO<b0kS<@Jt_*_^6.W9bTC%XP^V[FF/D(j!R(
%VT1e2+5--i2D"qcbKX6-lj/;2R^`tR5@`/f]$j+L6F%qO=D(^I*H;Rbdbmag7'O[);"e'@@+:a!FIH:+-+:u&pYZ'4>,Gp8Tpt7^
%g5XDknJY)*314jZ3,dY1*QKKQO8!*bm6:Dpp,BO*-A=e'G9Am@*JlQXR&bc<;fag[X','Ebd1/oU*F0&0nppsf7`&rr&/+Bbeui6
%P\r[,-uNpIe--2KbKVU/kIp>#+Q@DIOMW`r<-)=geC(^12-k!o80Gc,+GD\F_p67b:4?bp&&6HPe;=G9Ui!:tN"JbtX@j^Mf$,8[
%CGeT6#V(@EC5bJ]<ZG@u5!apQ#)tO!XC=%S1o.-e#CJiDW5_NHYUK_bq3e@DFL7c`265/d4:S@s'@;]ueI\=0/<mW]YAM)/\B-E4
%E0C^g0lp0)nM%G&Ok(aXAr`@o+</naG64X7L/Z/g)K$u])`>iK9kB[iEX6;:WeK#cNZfHP0M080'b90;SdMD<bqL0#_W<8!Z]Cn%
%*#BeiG(q91juT(eH"PsP^ao#-!10B/g2KVCS>Ktb!K6:bCd3[,\)Q^L/%RX'.h`/b(2O$>o&U]kdj=`._$Jg8-7@e_>0JnD2^sS_
%Dm!lO6-O/OM&?Q\adC(uNoM(q<>k^fjL?[++M9kKFI;FF%1:SJ)A3X2S3m<M\,;[BZo@`'ck,Q*mN^3;llOl6q*11Z7V5rR+IbP#
%A71KnVLh`Hni6++K@'akYn07W#-G,2PZ;>FP\K\>>D1!YX=m-@)@HR9J<W&S8s8'9dq0]3!@JBY$GD1lCu\Y>!Xo/>'-#QXes/r\
%#adJ.m-MR!@.+AFlq<ru=`F`08aRnM''+aiDoW#spJJERD(ng09tngOqTI@26/=Xn[\%pe[%ih9GRmh"j97Q:C6][V$m;i.YikbG
%X7ZI2FbQ"o"ZB(*H\56W"L8n7#0D!J%dR+JADcV!+j\0D?UGHR77A@WLBLM84X?b<cnI_?0nuJ41aGTWIPg&Ad5DLJRXj?V5DhHa
%BFUL)!%r@=,L#'G<?gJF=OjG2i/D%QGZ(CXr4<n870ZF*1ng$K24iQOI"t)!?:N#!?pJH&,&KLKXVkLO(sDI<rX+RBQK+pF#dO%3
%'3e++&Qt^GS!O\%5.$52`\uIpaA*iucY6SGO^a"Umi/Rp3I>L.jQnqb`R$]Lo,Pc$'MeSuW6oQ4&6:7h.gS,M+ZNr`_\S5_i6Kh[
%_j_aI.=Om2:Icr=i;h2\.#7l5e?kgIiT3pegDht';TJ0mm/\=?<\<cS14qJU#G!1T0H=p:LlqVbrAc$'jqaadrFU7dqG^4NMcJ2B
%:;gDaCg0&Q<8prH#hg#LBmfUC2&YKrRh@S4Y;!L/@Q[\M$8]YE?#ETn$!n;^.qA]tc/Dl0!"92JKj8<E$u%4*jIHgj.Ja4a4>l01
%NlX7+(I0/E%"P+A^*51_e"6,a4%t]l!1[LtaGpeDd]-7[?S-UE0()@0!SN+%N!Up;RG>o9"[og'pOg)[B#9TDgu;&]#X`dClq2BK
%7'a]Mcnq#'_J!;VRSp5!Aq\7iK)h3QjhRt\'/cq>IQ^IL,/4E@(luQSdrq[B/atcir8Mn#WL+S;YJ)]O)2KdL>SC(^MX)tfXm!M/
%+EEQOJXlq)W_eE"6gHFZ;e,q"].FQe&f$e&T#fh&]Md`&pcc@N,%#@OZEGDGJ`R^q1"LtDB47c!7'^%[9?2jMlYMkCZic;a&0S+(
%Qcg/]l(CMW:UIo#A7S>eQ7LR\^:J,QD8X"V(VrW.k!S,^:K^aBLCgM>9tHi5B##+#_cHmi(r&J%(V)'4b"c)</Bi^PKiO<<bh9B4
%:f+Yifgm0b>ulIoTbrJ1$4)JK3u&qa^<'\c6,pRFj69$G$<DFh9U)QPfQFtmaW)j`g:14JPXgKCb9I/\eD/Y"?4*8MNl]CM78+Bo
%>LrT.@8r?pZk-9'*?C!l3BGXDD),&5-I&)+a(=BRLWB^Tcbm&FrkmX`mgK%/R*ACoN,>o3&3MR?7Xub6m^82;F[lXB\6BqN0CWNW
%"(<)l^Bj_qM^;rcF*B_],D:o/.Jf"5+0=3./8(+A*>hP)in1@q]qu-`'uQeed>Wkjm&_IAKtc)X<a/Us__u*`ZsI4H-KP;1&T3,G
%?9DFr=*V##DH\^@af=9[#oU).fmtE!JE_g0kYj01!CfE.E-B+=&s>skM%B]BBo^sam)1Z5!.9S_6/)g&"`B2b;V2G],T%O/E6[-)
%=e;Hl=83djI\8b:);R-F$2;O*BL^?Hp4*YVFDi:P"]#.U$%e[dZX6-T6ElF0B171XOj$];.mc2B'=0-U(2a032Z&nN;0\N0LuP)_
%(!GL'@WOf;*"c7[c=f`b2sB5.5trI=X9l2S"!POYSjH#>G.U)nS2C_&\Ph>d$k@/I=WbloLi[*>nus_&+LM]^`bDq3RdPA[#t;iQ
%jWhS"_X^;"lu]&Te7RM[:oB;*_n8b^0sf!0aNY_m"L!'r;uN]WDW5q'4-R32i)h^Eo.D.3XL_!a;E4pO+>s*fksbXdOHY$&IV:K(
%3&!o`>SPUjm97V7*KYO\8m(kZl4sH*7d$LI]p`g#@'OnnCBlJ5k)0/)$T_Z><l/II^E6K<\2>SQo$D)LQfNDTmZBl\c)mP`Jpskn
%JGehD8^)6.H/1&>kl7p3-qNk`!#"&IjtMWs>jFYjBKZML*S*=>87[Ys"!7d]g>ZMO:>fc+)6f5**!/kp4W?Xm=<VW=Rd"\<>(E,)
%df)eW0o6Br*V>";#:XI%i9Zj$5gBke/ttD-g0s.(!8)\"):8bPdbJ[nrjlL0bfE'MZ^\2FA]V;4&6:;J[Lqd/.gOH(7Q'*k3a@7M
%hB-Ya$Np]ihF-9')cl1h\0ST^5d6kGAQaT%4ZU4pJgl6n3<75f%mhu$&0mi&%nIR69*?RCD0p"f]u;cLTZpal_#-o%,l%asO[R!_
%G:h(ap"2XA'>.YPDI3EKMC9auP0A%9:&[/Wc#(#1OESL6'gUH#blY\KeeF'gSnFRWhRH9.cWq+_I&DV$d%1ej_6TF+5kCOSD:#a:
%2;<nf3l^^RoF-Ejg/P/kD,!f:llO&tH=k5%-sbntM(M12ZjL.!8utV)5eA^u[l%G58dL%S!X?F`=>AqIfMJ'/&2I4mH!h`W@D&24
%JZ]1jFK&E?."P0(IN\1g#[i?b:%T/urHN]kR6+-l$E-Qo3eI/@plC5_EL"??C\*c@LP_tg'2eHt?L#BhB<Oil(LVZ?("ik=`OeK-
%?k-uQc9NM9YqS1mmgFRM+h^N>\O)^7@7^kIK\IrS3q8)AXE3d/a2-:V!['Q]@TCR3Ol:^eACn`eq\gh;UR=oL*#;\k6.\bIB@m7P
%4(LMtjlm/>[cW^&&'Vs:@e[-*ZQFSsE,i1ds7+@+s5NA=Dr1KYk"#1?GHY>$o>T&5IEc&JT@]GjCmX8e;&IEu._Z1n0FAB7f';g"
%.3Sh+EuYq4ZO9sT+<1t5&4=c?ZMQM8U8;DlOrri<NYEc/"A#mS\Bh32LC2@JH3fZ$?V&u5fS,#>Ngh$baDpTf]0$J0X6T!oR`XYZ
%d1e_X3*o;1gXKeZKu$M!#m)*0Qc#+/",0gda^,X@"+oSH@De_FgpF.L9UlV>/GJC+#*MrV!X\PMEq`PG2)O`?s"nJP%j_:u^B6/#
%rN[t`Y!GT&dD&3^oKb[DH!`=%JXW.k3^ZN+GBVpT+^hAkK&g31Qk%id1gfX;Mk=;>4pkCKB?pg-,mBjs\JG(k_&9Tr3'>0G$"u.q
%d3H(/eHN(5V<i`!CgN20">>[?2Rg&u"CgdtJ.nTeCP?83DrTn&eJS%t!C1sF\o5a/i./6+dHAK+d2^<cQ"*3R"Kr<kOd&;p9)#Pp
%@(\P==d\g*=iDNdJ7jgCVIaTMc:tJ2C.DoPGXd='&OYU&?"RKQTQ0\m*)\GMQ/4H$QGo&-3/h.boLC(iOXC%teYpZrn?H;cE9p'c
%!'rZ;#L!)6bIBLcr.R*(>lqjn!Fpc`$gSaM#sh'`@K(45nQ2m=;gM7PnYq%gY!/1=i2N$FAH+\!$SL"#1FA>YL=(U8JdR6Dlt#h)
%fbfP.,F@%s;]oesA[`CC\QDnA*j0e)k_R=ePE(j.HWhEW2B8:82%WhN)MeZSF+&]A%e/[cak2X(<kFlWQ+Wmr30KStgnoIh^,^_I
%RK+_h46'q!QUpoaQu10X(T$>_`eQ@##Z+"['?(Kd(WpdEC[oSJ6(];s%9Sn$T`>9Wb_QB$;a"n)LPKOh*ld$aeV?7CeP9+h_V6s5
%3n$pfbr#,J@cO]lR5FL'Aj+SBpI6e-^`abQrbkRfN\c7IJp&591r++YCg2[[VR0QO;",Wqo%LdJ91RJ+bfiZ2l%pFr4G\!6jN">P
%1CL!;E$!+u@_57;DdY3'Q4;+DF:K>.V2:<6.l-QMX-*C6b@:TCm?keD9h!*BT%_R&_qB8CB*3H*CJk.,Jo3ZW(Zmf\CZK\LL+,[+
%74\Es$T`5^G5`&d9e-TA_7OP$<3XqNb0%hY\^cpa?ge(((ls[C4J0JI1e'15di;um<9C$;$M-qe9$)DA;=U4C:mEV&!Drkt0#i2o
%H60"5`V;f,O9lQ+!JF8OU7OdmYc$4fTlLPVepQJ+@)pYc[C9+sCP.B%JrDrSbR)m.PDQq4I"h`EVQ;b7FRXI3fA.W$4q8eDYpi^3
%6*-1dALC&RT1M?t+nF^;dGl*IGmcu5:rK'D64'9jGc_H%-`EXMaP61i(ORC#TtS[.Qp*Vs(]8t=.050DoE[0+`QPF7O2[$U$(+ue
%FGMf_P*.[:0TV;XjN!Ph,9\UE%[;gj-j_fL^dAW+RZ,dL8V$FF".%6?C]lFIHpDb)$YuU05`.\GF3&omnA:3ne-`RDL`IQFpcDpf
%JRmON!)q:V$]a_F_#8`7jrfOLlsMtLi(2(3.dM3HmY/7iJk9*o%E/i/oKU&G^o@DN:O/[6`Hs$?1]rr/QjCL')0Ku3%$*o<K-'7"
%;2k?-_D]brfg@m?Xfsp#Q[,5]+Mpnl_<m*WbpGCXJoMXdKfK;C#(/?A7$OGeULQeUGH9`q&hm7+R#S`uCD`k!M#(Z)EV^LUnq5&=
%XI,NL%]F[N[O[,obQf>k!u$3p;b*`#:G:sA/0(1iV2`kI<`C7O<&iW4@``G/Ti\W/8m8%-OrOOf?8)bQQ$p\sL=*6rN:Z-B)/ibD
%7-+I(o!ljdbQVVJ*\%4e9ZmED&jlJra:G"e&=#D4,=,.&D`&43SmEZCfEc)0UCt^#).5]`1[)*4H,pW2'obYN=\-%3L,:MeP@cLO
%-]ZWglF7?=-HLN9\=\HNAZc(C%VV_n&,H?`Z*H)ESG`e_K^$)kX4;i-fZ(*9<I]hE+fP%TL@cnb,Z)lCSkqbqlcKru^2#H/:ecgh
%0-b\Be9#eUPj8EjZS:Hs2>[ZY7;*,fM?LK$M+7U7&ikT9:@0n;gQBdY:QRn-0fB5$p9$-"K\"eV4ifaki^Ls^[I>GF`>#WN87g>m
%ce2"n\7p26?l0VWho*?oo/Vsm2W9<4AZd)!M1X]KjYd`K!0hH:<'ij-$BCWV5t+(L8B9-S3"_\jAPtXV=(PV]d]\uZQKRm4biY0?
%Y,`Y=o+]%\%QU:9_oOq";,"O<P:?=g1,Hn12$Qs1XGI'.bi3_EW43a!=b2ARiWt3EaXX>r2=Mp/^>8$.8s//rI?tWV0"\d;UJeYd
%p/E-V"=[&64^E1dV??o/_Qe(1Mo)0`:k9*06]U*9)IIoL_Yi5,`o:kVO$H#6E6g`FW>uc(1;+`UpL4jC#dciO1SW.5dpbfY*VNI#
%NkoLKJeZNjZ;)H^`:P#/Z/0btaJ9_FU;Gm5CL6WDfHW/2c0JDYQLFDEg@.X.h1]!G6`=l.O<nXJ"M:,E)]_e'[$/%o.4<0>=>$),
%CNun_@[6((B\"@>q[mM_lMMC9WDgIqZH=c"C2S81Q7YRETh^M9HWr_Tq2s0X97r_.VCN-DJ:N>Z&0SLc_$[80>'6(Re)E91lc8+c
%bZYhJnPuZRoJPr21)<k6)IS2F/-JQ(To(X)W#9D0YKPu&Q'0`ZPSK:%>Xn5pe8!%C2X1Mr^s[`g*PkMZUNH9[\m-&.6A`K&j1[jZ
%.IIJo2TPD#][SO'U,YBq"=RZ/`Mgbf6tPg^/31L@.k3n2%hWknFBLqkKn,p^H_q2QNpe6WB!l-A!Hj7LlU#hT0^5XP',FEW!mhCH
%V""_o7+Q$mQr8)_VQAd_8AQnLNJoYE6Q2uUV#"[T;0@Q\7XY2\q#Si2O;#r*6,6T$nl:HsY4BGNOf)ZFX'B.LJ0XAR7qZnM;tba_
%HFff/YAT^#)t!U>f<A5f8n2>o]D]0RR%o%s,UI\LK?f=CXY<hE4]+&_qd=_nEHp1l'jn((ZdT0BdQC`5#b_aaje`UXE*f^s?k3E7
%$#:H^AjePM.Z5W1";Ndm_5$\YAH*<f"]3W=DE)+IcD5)?%>/C0^QIG<lRfW_2M]X;0ff"AYj"^j+sd"(+\#ScHhF\Rh((W[YglN+
%@%9NE3]RC3aZ+VT!Af&hj<!:HoFd;]B(-k#+\56Kej^;hq+B^a:k,^R0hccY@[lCF,<_Hg:%tT]66I'5b7Jp\Dd,57*B(OE(=ghW
%299/.$9MG0>8&1XK:I0kE,ZKq2.D'VM$*O6.6!Ck9</e/h;O'TbW@T0kD)n79nW$gJ-@]QE*^'PRV=fj[!RZj%?Frl$PuMZ[!^G%
%BTFtbd=`@c+W0n#bb]hnE5^f)>%K]kB>*FmhU>42!k7cUk1r(7DMga+!8&s@Fon'`l.CE`6JrR\E(%OsE9<:FcRE?$RQNp^gHbiO
%Y9St`KS#.rgsqE:+u:,I\k8J*NJFM"&_H@E&9tf>X:1mio!.HhQ2pCa,eX2>&Q*"P:Q8#o4ct@I(jW!r&4)4Fhi'EqPEF&kMF/g>
%,Pm;OC<EsM5-XOI*hiu7A%#,c($M5X"!SE)M!ll;R9frMo,K#UDQk80`*aaeh!"PVhSs\XqXe>QB&O(O1'KR$B$`'hQik2jk*gkb
%jK>.;"0[0m,jdO<h.JgJ,m<Q(=:ihg**uIUg@801MM7RsFLW?]LkV7"PqkXu[fS^oJ-AZ9W[k.:8$'MeSDa9Ed)4fQrd[bj#-j\n
%)9s*F#fEVkO<r9N$1G!#6e=%416f!j8;e*5?*%<'!6I@oE'@SA;g_Fk'32T@dr]0%^$d1s$hWM_OX18a,Dc.l'-Zj89HHu,R60RV
%?7G/5AaWs_,n/Xl\>&3TKWG9<[@nXOlu>!Ah$FpYiZ^_A)<V.##<hSubN^Q4mc,^r4or[D;-GO^"Bo\aq@T,gh$YQTb^g&b$EL3h
%kZs*70mccCHr&q"M3):<D[72He_nb@r&&6)=D!4(X-\\H)V:\-*?<K83R7quWIc&kn^BZsn09T8YPrnD;W>j#b3G.QLcU)Af%Q.]
%m(\6Q#3UhXOdr;'LJ[(5gsHUEe=dn='W\ZgTBZRo^2gV.a@c]Ck@/ufVuY<I]K\E*.RaLn6[Yn:j]`)m6ZOIBJd`BW6UE;3F2*`/
%%E3Th#ZC8[#WZ_co_q^u,:7s/1V*>H_L2?g`IW3cPm<G7O1a4hUsX7il/@\@QjKJaa#_sn4P<4AN;rIL:Oi63c.c#9hL54c:Z),6
%N5gA;rnTM?qFNp.jQE_]I/WX%f:RJ+(O:K&H1RdQhu(CLj2V[EO+0s>j6*5c#kZEU>j7;(HP8_h%[`%6be\F\Qkbu(5`^'M4ta'a
%`kJC4>OjR3o.b&bi)\.Aa7.8B)2n5+Y,tuTd2p11@h.tOH41??#nNU!(uK>B_0M".1c<RKa)!#bJ717(\Hfrj(Z'F$j#[IR&nPQ=
%GDoWV-lg3Lgjh)roKA<W"9"d*=^8uq(u5<-+XVmHUs<%h:`Z1),k8"@>G+W@kdVBUfY-bof:ZO^T&U.[4dUf`\/#h0?$VI2")a[l
%)"H@8RhX+eo9K#9Est108;3SqR#1U,%[LUXJYWn',fb^ojH:%6A(9Zs71e,riWJar`c)>G5\f=%3,YGs?1c/7^-<i$VJsh5gDHh3
%lUF\ij(`G7c^9\2&oL\K+uTXCZbV%u@UhB@,+U^b)@*3`d2MK!rk2EnpYeB<1T)sTL#TTl0!Dqr2&hLo=Jri[pops3SF?'B1[aj&
%+,pRCQ#0Sdj/CCH3b&lF%;.UHRrJsNZO<0U9Od*kS]eMRp\BE`\5t=T5;O1$%t4YDYrONIeHCs'oO>KANA8RJLN$-"-eW^`[t;O8
%hp])5(o%Ou^VsSC]hlKNN+$S>?GGtGO'O3^TJ+<dL@Z>M`OL,:)AhsRJB?__"EuTdKV9N?]9nL%C%<l]d$n7F_-P9-dRf8:?+aQ`
%([bb,hT/+K25cqpqNVH)G@E5GKaV^`M]:0bGl7oi#'I3H*)(XMR>[sF?%TRg1E2:W:0c"C*.bF(ENu=G/q.47BKYX>YA@-+hM&M-
%is$Y:-SD9YZ]@a07Q3!5`R=pg6!Fc#$R1oW7>o$9eutU_;^LA<=<-0r&/J'&;-isS+iNFK\mbdj&5s+J@baIpL>17UbJ\P+@a"q!
%X9%,\^5nB2'3"FS2r313.cqkZ;=$Ea=AE9M?YG>5&drV/=GkiIUMm@N2ePCdO;'X//-\[#-lt'6K;07l&(n)E6;cN#XqhGbW-cOL
%JtX%=2mJ2\P_I2<$ilN_T9oWT1)<#-lj?kkB6Ib4FJZ7`M0EMZK:3W3G)W%$2)4EUpDhDqJ5>u'd)tN/*uA8Cl;^Kn9+20<Y&X[i
%1Is=3O"2_8;?g,0a&Gpo7bCpNSAb3Z`HQaKF+UVM(l=Yb!Tm12`3kJXpqfO+>]Brg0`p7?m(l."S#_s/\W@EPXdUQGLpJa-5t1_,
%Qoj<!%V`p<54X.K,"D)-!(`h-#0d>cLM<IY"`-3*&-o1(O:X3B-iuKEIPf4DrD?JJ*8h_D`4-Ets.*<&Tp?cne!Y]Q'd<0V.;!-I
%M:kicM=`eJO>H\d.e66)MgH;;m<W!T5p?>q!HC48%l\^ISS&f6Ej-+m9W_b;5"LGp16#CKE":q*:(fJ('(DIRWb9=[V#N^q)hc,!
%[4$D7Ol6(^VAi"@+;V%d)`HT3ZsQ*Wg^ko6iT\09N3#+BKV04fOmt'D@+@%iE<BI%L10hlg^Kc_kSU0lS7WVQ7qZ(/L7;itJn#WH
%4.,G%1#,SoQ.qR4(d_T]W2K,*b!5ZTTiLBC>So@;q,s7m(iVgcO.[6m4UnoR0$M2RJDu<S=;^PMRI]>PY.cR.KiXR3MleU4@A"[3
%7[30E/AP*=(J\D#=JFS..#$nHi,5)_(`]3=gh/r^i9!YVMboe"T<0\/@=1kW>j6q5'N8>B$"jDZK1d%u9"QhbQ_LbP7)DK)Rn?gG
%_PQIu>\JeQ^!#DIk9/VM/?mcXGI,W_EYf3oA3Y*;1&si.*X78d`fX*[1Bq8,]qcV[JM<BVFd:\b[Na?"N'/$.'<NA;_/LF'IW,O1
%b,8RFK>D9RqnX8rrQPl0i/R$j_A\B@$Xp4]%0h7p$csS%Y&kI4PeeLA`O`;kK/XMu0#HNqZDK-Z0X>q-?Za,_"0.803'3;mZLB'=
%MG=V\?li;<_%]!8-bU,rGNl'F'9&qT3,_(r*8`D#_''5Mi2Ppje,P#L'gDM_+rCK\ZRd#'6l1dPlbmkHmq7+-&-b9OMO\YB`=D6%
%mQqCGRE;Ui)]3Z!0PH%VGb[X.fm@*[(D\L!JUp0s[<PLMDhPZdEMWlZHki!UEs$oDbDO!aaalAd&Z9Xq#=_-5JM+bJ$p1Q_71IJf
%FDFri?r0IIT#lh?D;7rH/m_q3jQ.72Yg$4mLgV_8r<RHa_$UUQ_9g>Y'c=-=L.g#5Ch2]E-@dH.`mDa^;IIn;V1TG+F3_Lm"@i0`
%N%6,,U=>!&"X,Qr4^0GQ#7PIVfbh9H!FrqH]IDK`_8O,uW@/BG+KCYV(NB(2]UT=r<SsT2&.S]t@C]^#J?rnEJd3.WDQtuX"LT[p
%FCkQ.iJ-(A?ie9J(8>#AF?h,ahRRS*LG1-,JR]QB/IGn"'sa0rYjd03@Ft\`0X(m\NktaRhiirabl:m0`YS3]`Tu<3r>,_>@]3$j
%GbjUo5/b!]5pA#)4sE!8Kk^"HR=AY;5Q_2[0/O^eUP%%)+d@MsBB!8:qrJAEo6hh^NUI\Ch^*C(hhIu&cGf\XgrqqJ?ppf]r9VZ)
%X,TloUA[g:Mocb'0)uYa@$q\sD^q>`?G+$4Nqn:brP_fPg8O&Kqb&XEk!@i3M6\nQqjU\1\`[V<^HcM;1QId5cbH.OV1c=!U&@\3
%8@X<G=1kZ\S>H](TcV!S?"e`0">>k!BReE-)3UZk-'N0V.cUVc#I,+RSb<ja%*pTSQJi@uEa;ds7J9s/_>;=[,_daMJ,-/+CrloZ
%=<:d<(p(KrJo,?GXM=*E.ae^j02bfmM)jlThN\^%_>:2U^_GRlop7*g6<]rPQUJ.g&io20G7S)CoKrD4.gV%RUqaDcV<W[)QR?@K
%pVQcrE\Ik*lRu[MjJi[??V3<?0=8K1.bL3=r_c&g@aP*@_Wm+2m4\9UI1251(NE<<I4a;_`YY$t4Oa9b;l=p&]Y=js.2h;)F#F9S
%??gt9<)FV=#1"2=P_=u"lS!E/dnY1$dbi`Pi79o<H!"tijY'BI>)G,p0B,:ai8FKDfLp?4:AKf<;;1G)q)bLhoO.TfacQutpkuLI
%Eh<5^mhaABD'%kOo#%.[Ms_A_;U]"*IReQ8?BG+P+A,,dqMj:PQ0K/sm&_?t^PpJRh_`^_q$uJu')hC3$1\P&?ZtDtR%F#6.uJd^
%Ljg^e1S*VDOY@!jSE1RE@5XZKIN^6$k%02R-X\LV.=Oj8]!X'+Dq^_d/JrpSSEID>N&=X+d9)thI]:r?Q5p[SI.N;#42ij[(4L=u
%pgk;WQc8I;mk>W3iKjUY#!NlQPlb]K1&NLk1\5)NAJPNP%2Xb+gbir@@/+<,&JjqFpr/GQ3q^_dbP`k$QO&IUBRJ)FVtfA#@GTk0
%j-NXpn]p[J,'(W6KB!aLAhPbV^Q8XWn?*)M[9*UQ0*U-om`b2ooHjT(cLK*V?(,6T_EWRi!,KQ-jB$S$]3^Tsnh:i63lu:IC8)*^
%0;Qg-"OD#%5"5(48:rb%/AD`/,oJ8K'OYJ_Q<t!/jj0@W(V3lL`D6$*N>Ue!1r%,3;hnXlINbQ:&2_-5OH_&)IOS[$qjHYL;L9-E
%oZIoQ!n3!T+^i:4L$4km=PtW[kZ=#maE1J7qS(Y!L$2UMWU47/rF-uq0'Yap$WM=iDVg$0QWS1rI1,(4SU&n6IefPPqonY)W=hq"
%g*L4@.$#KdUB^8gL#uGJnZ7*CYpA,U$$JS\r%@X9L$"^+T]W6Fr8L.j,f+bT;(8.[/j-l[$hG)q^QA6]jZL;B0KsI7q+YZ)$)dU\
%\O\Rq1r$j)cfml;#L+nC<7Y0ur,T2G^=X=n?ii&]GiAHE3XaT+T_V#D<V?U@04'C#+>,LcJE].DZ.&V[L^DuV1r$$c2PO9A?^;"P
%=q\1\+\P+?SE?0X4"4gf1r#:'edIpR8c1JWoR1-@T3MGrfhHG\KBH=s'"KTc?g(d)WL`3R_dMn6SmP)u\-:23c;&n5nGGVgAa@5)
%b7speGC`;,2J8NjSmMeM^%2*\HH^=5cS&pfa?40[@I8$N[f^T)<$*SfK&r>Ed[V),0,2pgbE_9-b0:Tj'S9k/T06k:GNbX#>ZlM!
%gmjCKkSRoV`:45f0s&ST`@lE]<#D$s]\U-5r"sgP4^Il3pV%7IjE9h7d-JW`fNG^)AA9mLS8HG\J3(Qk$Z=ksIcg?01?\?O^,cL5
%08OFIV0&U.m9WH!%MIT>nG<"51TPGMSC?)-T"#*ioGnnN3A^LA0=q`ahm%I(`8L^6)/(XM^;I"FK?k@s7J\Y#I)i*mHsuX6^:R7(
%q0'dY#F@)'(e@YOVXc%:CFtIdQet_I7(rqM6U=t%Hm-G$%iSf&a+t$;?UVh(o6VhSm@.`XS\u=!E+Hk<_j<+JS?<R?]3>rbi/@C9
%_W"tmmBQ3!RD9WG>l-(1^DAsM+dEl9]mCO%i6:%NR<Xa[b!m=dO;Zie?rLgofPVie_)k]k[[;E(>YVmmEA';lH>Zg@?:#]1cKhjN
%8/H'&6]mro[nupd[$M`hZ2dsr]r3"iTE]V_?JJ&j7_!*N?JZ)Mc()"^GFpVbH:bpW%+L]JQc3i=:X7P7OuSCV-gNojEoQ@i>F.BN
%Depf8Xf:\U]qG+-r5Z9f81.Hp&UU1@=aGWf;phNc2!&f_8$>jK>o7lZr;d*e.;XBcq&0CL5p14,k8d;%*;mGLpTp+-l$5QS$nZp:
%kFIJV061C/Y2$P)Ml5V4R@8?AS=(1@3@(@_&Fg1MT4rSKPO/K'0Dmin+)l*I6G'WifYP]<WBeo>L_5?h%TZms.SdI"g<12#;_7);
%)[(Dj/9YB_Zf;<XC<ruo=Ql]PK9[7mBG$4KM^jMFk:`@<n@4Q2$r1-ce#&mfT<G=7U^JP'm0c$qE:V/Y&>-30_0h1"$RbDK/qT9'
%!iEbbPEu?:H_3<DBqk.[SWfBs'\kXm3I*hC;BD/&nu(R0AY]fNj2/o2.F\:AafG2Bl&1.[;)o9^T/h07F+MFHS@iCWi9A5&4.Rk[
%6HP-UVr&S\]Z[dC8lgVskSmhVH*o)uX;m9FH3%G[Z,9k%6bS-_SbXKYGp@PMN4^]g`8+]9Go=?5p^BVu7Mk!k"X>[q,L!$W)0qQO
%l&<7pOI0OoaEq`MEG"8p9,523fKq:_Os?ap.j6Php/RMlEHdKY3VPt`HglQU$$ci(`/5Uh]HUj$@hJ:+-g<Em#^K:?!l$Q/Gu8'?
%+upD<:2QMAU#Q<Var/$pr*[i_-#n<EADa*E9ZG7`$B%ZLNE8q[D6C!-$OGHB10t8Y'eF_VcQcJtW7/u))s<WK=4':!_Kbb'(;$u2
%NgF1US?@7P#kYoZ#s-r%qCU?E=ZMZ.Q&O>J\=ADbO5L5*Id/Cd]C>;V<`H@r>[I0Ag0in,4tSB4]E$TH@7lZ<mKBCQ_:rI8[5.o'
%pO.C?J@B_Uf_*(4&.U/Pch+j%M?E]5fQVNVQs3b\]4;/;qiuOF"Ae),EUmBh5h4F$pF[>WqNZ>MO$,?g]Xotk'<JgX-Q+S5]*+mb
%M3lnDlqijFp9.2lRb2d9Pe5_^)YlF,ggu%_)N/RD3m-d*[nA9fm#,`t]12p#&o>1Q&T.=]gFaICUt:37(EUCVk2P+6GG*J><4`.G
%E9@:8g?&$!Be5ua&B!'Lb:]e^O\6.Hh1jq;`NT^e%T)U1JmAY/gD@UWi&e(67?\+(&"K'r]5D+8BeFG^VX6iKD=#9_Q!"oGoYd[i
%qZj6IG_aSFMio"<[El4k@-lh60$^KOHsbeSeO;J0Lnl\o\e$'M(7_t?X-4[__$m!#S/HI#FpGP/$$DBbm*;dBP6HUH7Jl6flo01G
%3U<EgKn"bq)f3)6WC8l.6Dcj#570%!krU[)PqM";Ut7\,klM0LG^V:1!acCl5)=<3^IFUZbbH+Bm@_jt*]jlJ?$q\@/J_V="RprX
%U)T6l+OM2>ikKHrU3MfLXE3T#B2]3Gh<=t$$\L(;&]BLm&]FB0pOM3TlDtAG/u=s1_4[8gD49Wsct*bOCB,=g]%eSP@E+te`NmgG
%?Vos`fQH1ITmN;GO(pl1M8>n/M?O,g0-%Ra?sq3t3HU[ZjW<d6TrVF<X]H!<)JIpXUE;@D>Z9?jf@5^eGJqDua=OpO_[]`\h&3iD
%4,#;=]uB$%1e=k=-`>HW!'&GaiYI%3S?^&"e*!GGZT&cp>aB5-"U%Dg42#er-ufueF5uhac;d_0bGPHID\nVL6(WEKR*P'/[,BaO
%;5GDj-#SK@K6]-&CG$%*$lB3"^O%5F'J\UMd%FLe5%plXQ@_/!F[7h>/FHb88-a7qc=IAWP2OXIF2OMimbIL6_O\k01AMEM4'/9&
%@kR1Sk0g9NCemGaRsV!JSI5I+</Wi)[^%l4:W8YSZ=#'bFY8:Gg_hr!`AjNHWV<(2j\;#OQuc2B$PCUn/6IF[]eJVIb,N,O@rkZ1
%bdg\oQsCNj>hXqlamCk\h,"R?>R5Ru(ZntKVRUiJc6`;gY%1Al;Itf7A^7-IMAI)Q\JX705(bjsg!2@Vbdf"_5kbM)Y-RLV/acl>
%#5D(Lgppre@9%r$k<_EM0Xu1h;J>rm4-s%WKV<uZQ\$EagoYlLU0X1.OjhbeDip$Oo!j93(Ip;8`BT`2J]_@k0pm$MqSQ#3,q`Re
%ji!t\abuk:q)Sj`#'h_h3#B+A%[7?@/u22(a]&N2'(,-qc:+1XOf&S./pZ@4ZNbJ'"H6mrF"RX#="__-A4!:'=UX[`C*XW'cCE($
%XS+Y1k9f2oCK\ll-jQnmE+mi'mK/G_k(u*"=gY:^k$6bePLZ>>PD\t5?'o[Ve`E;]2jNM_8C!_u!Be"&F"X6kg')OM&*$l5k$4K<
%3?RTR!sHsk"4p:UL+Xh@27R^oi'O#^8=_m[Ve9fjBQ4^5e"p=&F-4XWctj_gh>7NPgd?$mcX"t,cV6]f(@8Rd2D=.%WU>['QW;W+
%Jq>qJ))^elE'ORUS?h96Toi*&3to!3b_[''0TX?d%f318BI_q0m*9<dq-+]'(Z&CpMIH>bD_BLkg2o4-p?Ydj-f/+V1N$GDaIA*]
%-%nbWk&P3^@f*fd8>Yk7`4>Y8$Gdk1Kn))/KfBlH6=YX.QNH'Z<Y-_dQtS]?kONc5!-I@.Apko<.8-?#^<cM,3>Yu'GZ?H\Op.Op
%s&ai?Z54usQue*qaC;I,'[P&-]Vom+r4)RSPr]`@(9<3%J]1Q9M`R1;-HIji\ND)C.>'[JLd*6-K/se]_:T7[>[!rIaZ=JqD,rF0
%"EQ28EF])01$:1J@a=(-218,%FX5f[l/+,;\I`Ou3HHeU9W9Z,>TP(meh_A"`U'R3c5$$+E%YE.>%FVK.s3IAJBS*#FY9=:,0>_0
%=c+E".sEV@_L2$mS]gS#6Dp=fQSX0<IceqPa-."l%+9u?@pFTnEUFum/gG7/i]H@]_YCZ9r[4rL=dDMINY?94.e;%tc%V9U0.f_9
%&M?P_qnec5.u(;WF*@Z+(Lul0rVr-:f7[H%\/HjtGq^i1FL`X)WB@NK_Ah:VD)r',Jh#CBX&l<+<(Wf6_Vl9_6:DSA^5Grk^@O[U
%$WoD;$CiL\@5V"##6QP+J@S>>R3i_:i73H+(GW^B/<3u"&>3.h6BMW]HK":S@`ZO_a_`3?OGiQU/\;STP%rY37e#F>A.Q&d\iX;T
%l"?O-gmEg>i)lHkmTr3JF`*iXS0[5\OlHKt"K!Y_gO]D1MX?oO\*Vm`rCi+W;^93+E)p4]`OD+$M@50T\rC?m\>9J8YUFLBGR*3D
%.Kb5%nYn#`/u6QW"sGVE"$HH)`%=D^csHNe$T9-K@`(WL(1gl.@ZU^O9D$A\><*)RU;CJtD3i.o$g4.`#%o,b`&m6MK8W&8/^R)t
%JF7h1;9OfM&44`e":$Ot9sV'LaC<W,V\]PB<,Jr(S,em\$1M`#rt`BY%'_Ve/Kcg:>6V!.*iKMN_Lh\$`[&$T5BDQ&gr^>#;r=;Z
%G1#/iYC4'fhBFm3)1@\9//UZuM`.C)3)eZ8Q]li94'$')PKpiHi@SGJ=cBQih^on3jLS*1Mc[\sj=sJa.$HP64IfZpou(1Y$is;j
%FY'OsVY3Nl1>P8&b9i$_UR4)eDOL%8So\P5>Ae"Ll=.;0'sUMS>J,pl6?3Ip@2Ag<i"+JAWR[ZO7C3j\pVLlB:6%.I_(GEN!!($0
%077\J>j6)K7)a2NgOc.%"ZAYaM^p)$]3SGtU=MR9"LTgTXusj9[RCL)IE$%q9Eai!:2:7&'?hY5[Dc>M0(_JF$R(ZB_.a9T9Ea[6
%dM>7/]r*BWD/du-UFj34j2DmQnJ,/_$_].Y$#J/MZRre!,FkY8[1lTsB/Ws.4g=u^Kd8W)\%K4e;,i7+GbMES\HB_@4Z7d%5X1'@
%OX],`Q,XU89^)5DZ,LnuYlot:^8&:%6=QFbMR=7UD=moT$JS&Co8LL$GnmM+Eru&'HTV"<0lVu$37HKJOH*_5\RFT1^=:8?&TNCo
%G9O/\XKt\-GAUnCl9S\`AN%Oak1V.GTg`4UHpr27=q$:WY-bTh40YX%>!"^4&(4X_R=+'OB._1OaER*;[0TM35qVhdhEBD8U8o$Y
%B<g!1#O"-MD>&R[.p8t`1@TH<Y$/l^/ui(f)a%c5jkcL"+KEu'Z=n"?/)_*WRT`+jkD?#Nj-Dbn3(Y\V533YPD39ek'XcWGmU2u)
%nT1a4Jm*[hp:fa)iHmEKGV"#Ae3Rs93BOA96*6'8[W22j'\p&t'3QK(iMI?A!q)Y$diq'AgNEt]ZEY0Ik3#$*Ms.jq^.7\cVbMW*
%'-M^2)#s,CDs1.okR0C&cjCUV_+bkJ<C'?;'\[6nb"N2`*X5XVe"T5M`bb.m2D7>.d*b6H9`[YQ4CL!Tkk-_+hY$3PpLm^B9L27.
%4=+C._+74.QG$T2Bq&1G7Sk"n<7$H;1CG6=c]T;bZm1E[-%p6N@5U"\/_GOm/p:(=6AS&TW+`*tT\rMNi9c3W]F`I7EXjH@G\BqZ
%`4/rRgE85LH"!Be6Ub7r69EuS%!pUpfu=C)/HU/qFW2%_:eE_".;7c=Kn2.85sX1q.Q*#n]/.?0k\#GbARNK2,KY0:o%E^7bWQo^
%TUtNl[L20MmS"<2i`Y2OX4V)#i,,buJp+RaeG$g@gO2$@+J%m0aU*i-%/$>a8!FmmXk[:5)/"_gZNoG?TR+GV\gV2']dqf#MBNIY
%(T3L@6E3@d?2/#e1\h10m-kINJo5c,(?-.=g#8O.PKf,<EB;]fjCQY:ZU'`g9XA7(?9ge53un'9jd@-\+:Xdm=]FSu/@/`lc&,:=
%,dS3IZ8cILB]MT:M]s08OUK(n4LUD_!0[8nI1Ld0f"'jbV3_?1'>dGZ/j$aoDir66D>FGq#Ij&=Y0::>72A9KT2$qqHf9G!(LGc;
%&72`L\0oj"#-0:iDcii\@?j7eP/QCKmn740_'s`$j%Lm`,,OO_Z9r>tTT>'MJ"`&0MGnW)U6?U[%geEO?C_Gk67*(((%Mcf'Zlql
%0ZaqMh<-R<=YPbMHTHC^8N"r95pP,)0lg]bm=>+]9sRmhi'm<YE6+J5>^R=pfc:[eSdl*1Gcg$\$kCr:30VE)6F"W"c@</k9R@7[
%fU5*m#TFiI^')Sop>d4a,T)uEHb"1<!aOXVfO##Pr,b+h-]j#iP<C1:UbIp?9#XTGZ]CbHFK,rZ=;uZsNs1jsYW[n,(>1RnKfaKp
%%g(c!G:XAqgk3kNA*I';*JG\@dSgq/bUpm@$D`Qo!Fjbt(A_bXa22Uh5jli8>7k+6q0:p2PcQLq'SW4I$@a[FKq/en57>nAEcTC0
%3+JRb1CntWHg,n&f^HftbPeu=qh*<SFmQ?jie/8-]S!h:HpWo^16jE7$EZAcbL9Z]S;HniP8nk+9+8@KTM&=fq/cV34#p'b"A8(<
%Zji"Fr`o2jcJVK1Vh$3Bn<>\=Uc.]V-%HZX3M7c<c3+Yro@23VhA)J3Mqt9:KuYB/D)^Ch`V$%.IH2]i@?c?X-ZQq3Yl^pUqrZqs
%7LJn>2j;<nKuGPcoCLo&i[T7k*mVSCaTo?I,gH`:V<4&@OH<1el!Wq5"A)1_VN'=>B30>Ve'Z/]E-\^/2XPgI!;K[N0Jq[sSGNN.
%X2aPYWGRd@``PIJ;72O*?9eO1.FC^UG)?t:XR=Mk`u_@9?d"G%pS4C>S(Y\S_d:oJ)K^142JdS3N`b_j7.1lO8^$kVc:ssUb>.h*
%RVG[J6%U9#ms*<,@qk"=-W1fVRk0!'R<HB$JHKep#o%SoKOg.T3:.njF@e2oT[WEL.6ri]5#q%-EolP[pk=(6f:jiERYYg(RjtB&
%79L%;+5uo*P[<!PJhTlA(#1id1-l]Wq_iN1#&M(?83C3'45?#>h=iG?gXZ:7*T:-hJN7)T=JI.D]7mN2I5iJO!f<XD\,]H6OQ<+,
%98eB&e!GME3o7'FX5XV!KAHW"o=96X,KLP0AU#%dHWt!C7>3Pl[@Z0VgU@U/j<6+7_HK2K&_+HReKQ<QlTc#9;:#Rphj$Pi=r.*d
%QVETp%Y582)=uuPV+S%NjenH`67eWK8SHeOHC6pfM>NVP:DA6"HQ_$hoATuBe>_g\TV\tQ4r:6"T3j:k/8bKg*92bULm^W?iS<6$
%A/]!da"^dd3Om[%na]rd0-7&T*,lATCI`u9Wm`$sKfarD.m,"D8NS/rNt@2hc56UpJTq3q_B61!]16bKJZ9Hle:GLtq:NC9)[Hr$
%MD\79=].(600(eTFTsrqh[.oPf<el32H?lC8=Su5<)FY&S=X,Zq,MME0cHQjkifGS#OW<dkJV+]Ui==QHGQ4/q'FuQP<95+)`.:r
%J.0H&Y;&`/[F^ZdKU@**FqBOL)PL=BJT\lu0"`p1X@!(Y))6>L"o*m_VJZC8-'eWGK_Zc/g'o6iMCb3.k9U.pN6EO9T#_WU^1$0m
%a`p'B;@:rs)>L6,*8RrVX@+%-IKe+`BRaTL;+YkC6&:rN+r*2Rl5m1NOFCecE&/eOXkY>n"GOJ+(tcGKUNn3+,ItH\/Qc7jQGt8J
%H_RJK'..lGjJG%!kO9T/`[r&iV2\;F6*;Lna.,gK6/L/bRAiCNK/j^QkQ$"Lmln8&O3bK]E[6ZN4TfRK`JTug,J`[T\1Quj7ZJW'
%@Mf_gX11;8bGQIsojitpf*?I]HjWESEs+)rX?%Y<T"k?M#N^J;)^I*T1M'^Afa'Fqc(BN?F,@`>GZ%K`BFlJ&25uU_k:8hrL;kK9
%VSd2f?S/<W>\2Hp-n`5S-:5X[6eRC6H3@LoVG+m[]/4S9jurG6h':_^0f[/#*rK(F#3(>'+DVdlr3I]5:t\/i8KT'`FW?3&BWj]g
%qm_Gh0:GAH.in/U*P01sA$.jOqW*ZES'u:Qic\Dp/R-eWLtN,F;4U`=[_X4p6gMq0"JbTA$8X.>DNmK5H0u',IK)&<;O/NH?bbRE
%#:dN0m&W?0J^0EHA\b0YR4">5f,;-J.5rhW7&5WIJB'q6it:Lj^']Kp*:2<!Tlm8li"0SI[sF2GZ1KVP=tCe`:gAEPC^U^`]Q,+>
%i`fZ=aCHj+gE,+u@,(Ft?.OmO)H2'n//iSWK4qi.(9<JRDStX3;_@6n6,JL$[UfDX#N3"D)X\)&909-bS2pf7i/Y<F>hPg:h(ud#
%imN2qb&('D5J.LA\T%RLD-o3^frV&s%!'4'\qV[u\c:"&f!!dF%$Gf/%6_-0g-]ud=_j)S(8)X\`pKAhH3fj)9KsM5<P-M3$j_4G
%:g\8'<qghs=PVbT'3pY%'%m]h>?GdReLeR9bkYhP=*n/]a5W'TfR]A32rnG9-9Dd76&5]OofPK`Z(K>25eJAln!engCeBL#6KlJ&
%W@=p(h4:;*Pl6GmEUY&cp@l".WcV=0`V1qDK$A#kW(3d_B#O``o?Dekiq]gYSEt5<2GiIDfjd-^CD5I/NOs.HWD0!l#ZK.5+E!Ec
%9uK;Q$>7V(AA<Xn-WpnAg18ga`2p,D;Zt-3EH@rEL>rT^O@.s#BA>JB[!0Rs#IqoXn>9VK&jkUa3'K&&,fm$M]hT:%KDq`S07de*
%;$Uuf^aB\2)@52nYU/8)Zm?1kN$'N%$?:,^4CNnO@t8i0>_W-eM36DUd^qE\drANRYn,5&(6LjB[*+s,XtpAi&4B>KA-2@J(J@ZE
%QK]uff]rb[k@G>1>;;qRoubNMQh\?,47>/U4Z(kqD2behGSk?:dcQMD,V.q%0`1)pYL*_-(g%g8Vd2P+D:>Sg?2?`q=fboGKW`6t
%CBoKBfDY6im2k5/6Z3UsKR#hA0-p5Kk#!QD:H*^:/FC`BNp=?JML664kb/0r\OJrWW;WF\#i@mb3d3)@@[sp#&?]g#^DrMQ^r:#f
%%H#C,d.Le##U^,7Ll[?$jsU8@%&>54;(3#OM)T".+e.&jjY*,ClLNY/>>!"tiJ)q]!rC9.i@5JO*)eGGlr@S)%"&R01M!t3So`:;
%hdF?)D@>FPiYC4c]M+?>7k$g#>0P90M-s7beUNBT'1%Y\OL-\a0TISO2H;)%MBI\M\Jtj)^PL:-@LZZ$hNVMi,hXecF$D"t=&W*m
%^]Yp6B(;!OgQ?Knipf9)d!Mqa7J!]'TW94(KLToMm%b=+.T@<"9-GlA#p9M9-'HMc:5cRs$)bL(2rH4GLkBrqic>ce(u_+66]a:8
%!BnZW;@X2[c(QCS=LUqtje"sd">?@UIH#K!ijjE=#^+KDMguo/mYA:rJ;m\oIb9iZ7&$0\DD7imo2?C&&F6"?$PtA?/p?CK_aNR`
%![sMp/c[A@m`YS<C%^O(G:+i^;e\4?i#3Tl6f(8`PQ<PX\FfaK2URHDm*9-b*k.(sKD<@L"aE"[$b5!llJ-]r3,BmBhZbO9&dGTV
%)`4o6EZ%C.'[g8d,LB0k639&83pn0q"p(bH.B)bD+D)nedZSj%?6SQ[-:l0c"03RO3&8mG\2FON#Qo*j7hs@d<%=WH>[R,ni$7PM
%&0sVjW_N/+R<U5e[J17+]Sd],:P_GK_5AF18lonk&d3k1&M$%hCKR(A'kbnV)(5FVHItmnNMkE/%F%C[JSF(3q1PSYZ+tp>p#+?!
%!f#Zr)3+3Q?LETOkGBpN2*erKiJ0]WE>7/aULB&R>><3fcC7EES2jZKUB("m%\69Z7P_WY>p:IORgH,b4>-M#@%#O)4KDT;+;cs9
%#EUEE%IrAgffWAr?$>]_&E![j,VpGMBn/OoGU#uff+Se1"'cK#dZO``//)oZktuk90?3@JO#QX3GEnEQD)4#`U5:V,\<W*VJ-`lP
%rLFP(6Ina7H<C%UZ@3D6!Q,ihQ>,kKp*V,u=4B4lHF+rF$W9G$GoVo6OGN=RF(bq-CQjOd/LHLPXXKPViEXc*1<Gk4G&n1!,(eQr
%,ViI\b:Te53sBU=OKmSKQF!3"eSABGUqMF(6k5L:.?iHl'!CBt09ICb<cqOrfRPUU1m2RN1DoEn)C1p?EkEJ>qlrL*BjL"'RXs-'
%;@u9q,ptOeIBsP4LN_74iWV0Hj9Ch7cKoJ,jq9W8h26g!%$DT-8.H>OIKt;<*J9Vqg4@)l^;a/-gNLeWLc\N;6PZdeQX]64CBO0I
%Ff8kX@u*3n@!lcb`WtBpob84,%`cZ_<)qZSP`iA:at_"l3#Q$)$Pm]aNLLTXbngG#eBFceYhrkuB\-sN1Nu7*]\_]k;Li4:^8_lh
%>ni?oj#2.c4P/dXO?r9XI1o+o8NtBSP/ZrsM8Ek\PSsc^;i3:]ih3Df)Z]?Sl2)`%O(KVh`d5QX?1Hr$<J=4_aLFiUmRSP%RXIZ+
%J9s7$P`qH'X:kWEp3cq'R2fJ8fZ;`)-fR">EQ0`oCVYt&8&-2hH-u]:fM;`[*UYiS@3Ojo>oTp\D*$X(3e]dfn<_]m-EVUgpi,\*
%d$h+^UlC8\h'tmSG9;0U:f>A/k-Z"i//U+[Z;cSJ4./oeJ!K>W9]uIm\$'onE:i9sQSVI#@>kZQl^Qa#DU&\`Ki^X:5YO-F`M?61
%SViSI7BA/,k_OZ;!D(k>*!u#nWBfYJ#n0(*Z=Rb"H+IN$C`']:"pf1WN']j/AN]_lJ[g1Nj4;`,%e%VIYfrm(fIggHIFWqh#bK:u
%#=2#rD2PkF_H5:KR%DU@0q&8Efn?-"p?e7l"3PDoZu(]2#a/I%;H&:thUGDs&Gp?S%YLJsUCuR0Yqr\>On==ga>+96`OUF@e3`a5
%ap"c.]Ec%`An=.aQ#lX=MRC3;p;ITd0_[fb]i"loF1FS;KUCG+$u2@Bo74r)D1gj#,YF)t2Q%T]_GY/IFaGBWa2tSH)>,VVZu.rd
%gC9GV\kt:uW5H0^&WLR(:uRQBEHc;\;h_M,#cD(O9iOGG_R+[Hh780$/lBgp.1sA&CUpN#k_n':j'3cFI!4GsC+;%FlBF9fG,M4u
%3`*F@HLW1S%L1L8\pSN;g%$h!kd;iZ`B=AJ&KZ?2dh(2^"tobT$;&k3a`iF*].Y#CM8$UjdfTmm4<DrJ4BcXU!<t)2iI[bNl`NJS
%--@1p-YE`[IE/=]jU?RKR'-\%+Ee4nFS33b2h-3R3/-jij_[[/&dSgp7/6_Ba9hqR)#='h^g?%)@0`X'PaPU;!`6*&\e*m@_u^O&
%l'CO"ddq:<LlMI#V.E=c/@t`7M_10D/+kl`=Ys0/n!eXQRl8=^!F3qV(R]\7`38siBMkH^c@NLiFIpO(Z\^IBJ<WY?Opf&2PSX;T
%Oud_<Q9FLmf&HETFG>B@0(?@9ltWHYZH'UnP^4qgU[j=_i=K(a:W^T2G\\T!_Kr2KC`B8l[F2-Zdcli!1%8Qd-g&XDFqX?0;hSl[
%2U$t\ms^d'=Q!%#/,*ukW[')[5JWK+\C8t,9ME;Zgk*DaN<k-0<#B*!9F*)1JTQf..>lI^-%<T[7O,!b)'M8%(4?soL!V45]i##3
%:m;u>,-4XUD>)35_o9a?9qc^"d_9*Y@HNb9C.5V4)CV,V/rD,p6ctK)11K%3JP"XoBH<l!A+T$e8LNOQRh4J5Bk:Rj'5\)_)pFjr
%*rp[U,Ho4pGm"E6jVp#'Rq'gMG&:0/HA1T+.HdSBK`Mg!K?":;JTE7^^8X:,P&kM`QXu*MRK@3Y[@71P0.0M1cYRFtOr%t]pKS!B
%I\=<%Pb:"*2^Tqr'sZ`/?WgVF1Ok1I3>DfFXEi^d_=Z2Wb<:#.5c06=$^).(#TUM?F/@@_p$GA^8UBeC%Ec3.%S:;m&e[>W1L.P8
%j[hKeH]FA%X+[o@-2*M3:3!Gsj1lNH2lWi5L^5&2?c^:<%Q3BQ+;?+U.3[XQrl%NtOjT#^J$gh&\#V)#Ar068ZDYN9M80:Na"0Z6
%bphjCY[b86YpmY(9kOJdHe/c#-h2;3.X.8J*cbj>$_/dO?*Jo>$M1LKM5C@u^#!9'P!:Ub!:$@Kp96%Y\m-t,X5m,F#b3ol2ueSb
%2@Y_H-chVIlcrpE5sg$4DH',F?bdpBGiPOWg3BVfN2;?CN_t))Z%T/t9+44C@a?_j-]se(3bAta,i:LIbChr(h_>6%XMgFo'Mf7U
%F"P[JFr`2,%(@KjrY2kL-8`q<;POqc/IJ@Fh&?B7fs.[_-e,RW]#DZ1>O;2&Bg;ediV\+3NBJgcm8(jAbQoRfCUfRFctQ=XD"6on
%3!MRqmYIUs+\q2"6aAg[+hdrHh$>+IE=IGhRpohF1LS_SYn]4B^uAr>=3&5=#0VDt6a^'1]7cW2f/PK\3D"W2$1G;HYgkc!g,/q9
%(#^>dMAo+G)MDq";HZ,l_>aSY^7F8^Jg.L^43:S?+X$(M>EqE$j</iiGs#kEeZfLg7]`@tW"F+EIDupNiR9c@PDb3^/kVMd!5aK9
%>4tQK@;\\%RYkUPG`[gpA+$EbT'.>Y9DXG:pgY2q1I*Zd'8f%K;0QU!B.sb711Go@(K(BU7a`u-mOJN>*qA[B@Vj<bNmS_7YSlXj
%jhJ)_,Ohk8>=^HP.G.$!9&QW2<3/c_MP%DD&gs'TTQ<iE6`Ap6N]p4c2^Jnl#P9@(>;KJHRU;4-+-O>X:I9SS"U8*IY%-9C,g`]=
%'A47bN]>uEpC:*g4uo1Z*,e20V:f;[4l=LTX!roW8RPV/MkRDV0!4o_asqf.]loF?Ag1G_QZsn3N(g;&h_il_X;aRJO_\Dj>#O%Q
%:Pu/-(s(Y^W4%J::Uo\sK@-R-Vo"uuG6`.`f$SDrGlhZETdCnP!`ar/FO"WApcF#E9o24\jL^1F0me`@>(2[\<jfCWbYcn=@Lm+S
%V;6cg>YXdpk9/nj>,sk80#9hWCR@8I4bi#g;Kbp'0Ngt$aDd)%EiT6CTF/&%_'_6-oq2<K0f+]Fd\D<t`G*qo/V-.5%#2OKQDjp?
%$cK[GDp/>3j*fb,[33jTY!n#[X/3TS"C5U?&t67Lc(;QnMD^pJ"(2UG70W6N&4M0dBj-Y:+3m?ZJPpKR*IlStgL7r^UBe/QSM?$>
%Ln+WCN4`4TSXlZA3)r8-7i4E8dj9T<iJ+:*;:go]&DWi<P2b$qWRJ"ukGHs,RAW9"]$=TQ=9:I)0aI;\LB2P$&P]MPa[>hg\ghZe
%XCqa@R*jTi\p["K(l]Y-IPHaHgq1J]@?g,`,SL)_"Jt[1NAI#2pGt7Mp(6oT@SV0i!r;8aFQ(o>]g?'n\:,j;U/T.;"Fcdn#`o1$
%ibnr*G,ogVAB9D8d.N!>J0m-.\gUTF_Xa&h#pI-\dl1`Fnq/keg9F?Y!7+PCQ2[k^g857i4>:NZH$4iG1?lXJ74ma?086NK%sZf%
%Zp]Wq1"s]&r_U-`EG56$acZEnK=A,(@I87F4Aod3-ZT=d3,f/-<.1\4Q)<3PEGtp;Ze%1A>?YC"<HaDa5%9l>imaL^@bIo<"dhD_
%5t`A$FWA>)r",eP2^'fiNN($`iFbA!3QDGqR-bcE7.E?/s4A(0(%^TP"Y]Jc79#%-9`(D1H]FgD0MU\!`7]-97kFt)9gX/WRHHGb
%(=(`'*Zs+<7qD4PbVMuZL&61K;$>:>01%d#cnrYglghA2frJ2IBW(?F_L4.*=l!uEf&;]EC6)27oAUM=gT2*)7kp)=c`$/4s3VR)
%5sgFh7LZRXAK)7@Cj'YsIN596J!R^g22j@:G(Q4,;V`@7_?)o!\5`"^d$M[3_MI^$iZ.=M=dP&51tWru8tYk/dr\0Ic)@`lSi,=d
%WL=fF77gE+hQ)Ns(Hm>ZmmosW-kPa^DXuE51h0I3G"Gde)'E:n'Vc"5EccVjUTKo^S_g,IeP]]#XOX*<cri#&ZVn1T(5&E.+-W^T
%9uiicVIUmG3&T%QW_=)]lagd"68>Y0rh.55*+9iP6%eQD6q..pN`m@4AKcAUgIm\BQ*&9ZmK)RO%$UD9KHT`]QK#,:.(abZ8paQ)
%6N:KcrAD^/<`Z\/Z((kJ9sp>+<QB?uDM$V7:PF1aPCH[e4)se3'BpMI<36b"%o>$VHoNrCW4PopZ'oE_*c-,@KN[GL_28%,TGrH[
%UImj8n46*75g)Mg`EIZ0<D(o]9Hk4j-!>o.gdtN#@e%ClJ=q6;O[2U2Me5$f%uqf?[ciD0r`"oh@3DQ^[NplgD[f.V>;3YjVBY"o
%/d+`Qe+3iDPps6Jc$MuDGL^4'Z8`D0,d+IcM(#&.Mho9,r$)FQAG/1)OX`Y5'ITZ`JjLcdilro4&iYADO,?OAHLWd<1YChH-+a6o
%Y]gb3gt5CH0?c]QD+Pl$644*F8?gnq]EpJrU#.J0Au1ArEZuHRQdhnE?J)+deeKsUi\]o3P$NCKX[S?m[ZbDtJnd)S&:JXUqc,;>
%J^r.L49QB9\nG*_1D'8k\L:%(Uj=o_Z#_kC*"QF*5j.aK.09#L4LnEl<NsGH2Jp;?o`bm/o_n3cm**\mG8/etAL8sB<56:cg:U1>
%%Tm=OJReV=!\M3eA07rV_5=?o_Q)V'P6?$]bA1GDfp#[^gpN<$LT+2F20>8..rFCcX!j#/*tbeshgDnl3P;L-BgHJb]V,L8A_si)
%/LaE0]md9075m(LD[X=`l75U>qXc`h>j]a=S#0,(dhk]?]'6!k;0>3]#RnV<Oc6%k;9E8Nm%Nb_1!Z_Q(^X^f<f/a@p.6;fY.U9=
%R#K9e&F0eA0;=R1YSt\<)2"uI_9!bUSHRXID=`#!j?ZpL#Z*3<DEXoi6kX%*.O2^";d"V0aDiZ+:9ob&"ZNMX;8ejmEd!7iUih<;
%"+b8RX/>;rUSR`;?L!Ks6*nNfi:Llr\n_IGg'OTP<"t0TW`2)=0g)PBig\4Zgba1;0eD*H&^Zg=%H/(C5FMrC"H-(&d\0N+M_@0?
%Q,,j0ZhC&i/M(eO*^MpG*tAh-l9`?E$"fr4Z'<WK-O9P\do<@)*]oW8?O!LQWDk#W#?D0PbI,DInr2=$'=6Ds#SVLq9Miqc",:b+
%lah)'6Qf>H6>OO5j`;Rk@Au+h$n^*(<rP`icBEd4h/-tSdVJdsRfie+HnMb\kU.SNbl,0[FXms+V;qn&DY#,#Jqrh2Y5*E-8[++I
%>uBEF]R.a\i'9jf$4Y/hI"FSsqnY$#EBXg@F;9gV,GM&-*:['[J<67p^d2LO':<j@,TN#6e!d=-CZod_8<]Ur&a;9Y+PPZ48A98g
%YpXb%n!U:-?fLWZO-,+t@KM?,A@g-]+:H+^)3:Z"HVds7'$mS[O>AQ4S5aMQ@mK,KWqrQpU(#A`,fLYoSB/`q?&1`\5g8W#_]o8'
%`K>r0nU&gO<NjC('4_j*E'H/GMcc3I;mBZq*pua,,S7<F_b9UViSo6!gA.46fbYhJ(M/1@EC2Q&-C4=IYJ\aBR,-N%Fi3@=+RhU0
%W5al!T,_FCFa$4ZR/`4n0[tK+&Du_^+k]iEi&gRO3t;HV_0a^.jVQ(dV'st]V9JA<?uafJ'Kl*7[,Od^Vunclb"*enp]>qYM%Unj
%G_";lWKpDI/97/;iSk3iL+bT\l?g&rfmI=h_>Zf^1I1=E(.Tg?Ej.aS\356*HJOA,VA,0=WQ`5.`ZiNaf";,">B;O&*j"\2,-\&>
%I#^002?8\!C^BU+KJs<iIO_7m,)D"=',UeI!heOAr%acs'sQ5qTI>/FY3nSgP<JSs\i]'0RkK;^]9l_BM6/s'MY">3aNHgl11A<U
%7.6jZi.t.&W0L:"ihka8Cs@AF"`%Q*!<ku9%)bi3PMk#mAg\g@_-,!'FX7Xb[W^,.]rbA"HPQ9hCDJQ0DGepEWr=/&<E3=l;5/d6
%/[27qQ\frp'YWXmJ$17Pe$E2f*T8_8q8FVaTHi75,:e.^"B2k#"51r!Y+bEa7=`s[1PV(A84js&##fSdaGF!NkPq0f2sZUt\C-'!
%"mA23N</9r8]AENY/HK?\>Q]!P,AI?)FUQl'WY4AVcY6Jrq0Wg2<)l7Hmt3'bYjIJD!%_<aB26.of8iI;8R@ISH@sXbqsCq%qH:i
%9E_atcn,W]#aY)Ekr!ujjtOV&_J2:D5*;Yh8mmVlRpc.K7_rg?+Z+HPX94&p^b8LfTZXc0OFiO=b=Ll??8s)5aOUQU[Qtaq^tr;n
%#$rfN2G./j6#6.&KW?KQ.(Z?K^b$\Y'j^_D&d:@,8Z\CJAesOCL;XZnR&^C;("f,_hlM].XAE:iV?F=q0JA8GRRj*o':EYkr6<H9
%0b>5d,_Hc@8/0j[+G_Y3ZN^1-n#7!GM4Cc'%28V1!bZ9.NDFilH%8[*2(Tk[KUeAG&/[#(BAl;"fYL7A$iOhuG*LABV5=^OY+hQ,
%A0jXm9)UVXYZ!k,0okRn"PQZZ2Zi"Xo"`$`/bE$sCJc-dk0PL!q(fI)Lg"456mf-X9ts:8BI%S__P\ST3)SF/nN2Qf*I]h$GR267
%_pLn'\)D-o_h+#5;if>G/5pifG[T>Z$t;"D+9X>(k_Toa^alQG-ENqn*WmN00E`5%l#p0P0NnZf_C*\%M'a\5AI2TZ4"KY@omi`'
%RH?C^7?_CM'#<]gaLTIiejPD,+b2AhWJfcN<9]MfRkVmb;X-;pjC4bjS99(cdG9]&QTf3S:8=B$Mn]a/DGJMIUG#L.+gH%23MsB9
%W6Z0(oB@$@p4;F57`*_==`nhX,iCsg&bJ#-O\7C#:2q'OZ/$T1(PG?m$/Q1Ki=R7K=ZAfR&Vau;oItCRpGWr<W'%nsOS9Llc4E\N
%Z9;$M268R-#ht%n0H_/aE/mfh./m-Z<?[b7.>Can;\)aSp_$7&1mFkt;!WdrRY`e"-/O9cJrupH0?BZeMG@PAD%K6n6P6Ogn-:]Y
%T92,!5j0NlS<t@(9gAf2]n+TqQ9t3(CSQ(e-lm=1?sQTB!jZ4P:]Vm+X>6Lkqa/2n_81%dYQn:M0T%;uQ8@#-cPYh[)3GEOASU]I
%HArT54r3:B%_4;n<Wqq#?p$.@Q3ln52<)pEAq3EG/&WmnBEuGZd:u3(;.hE4]F@)4cjnAafJbPaU+uj.;S#O'<D"j`\.aT[3,Zj.
%aUOAalj:8T+;\8e$k?_%(oBsobJK?8[RauO1')A]I-r\q_ZJhba&G&K67Fcc^6p6LcS-OUJ=T2Rohp2V3)8\X'FN$OL"m?T+aO_E
%q/g'_5FWfm:rt\*I/4sn*Q,o?<YT,\,%s*hNK3`WBK\V8X:(i^1Ksm7X&'!<-Ha+6N:O>gnGt3+M&R(<8*(X@poE'W'`P+s7ftLp
%f8u/PU'=_u*@$;.4C@<fTOV1d56YoMLhW\&eUVClC*]<_jC3pZYE(eLQf3shMK-UWnnC<O6]k9J%1rB\7W;97$)hAg`>(g[/l4$O
%j&3N'Hujgk'?R0g6;E-S&Ak+UCp(o^h-m,d%3Ydk6,]R`h"*K[m10l8/=mG(-=D!lnul44VCRQ>pf3:MJY./9(Q#2XYn6Ps'Kc@j
%NEdolN.OU)!&eIa@V-DL*n0'2F_DkM'"X;;*!d#[bYj8'6>3Z)JhmS#)8jK=VDMr:hC<<'R/%fNU1buM&^4aR+@)\(?R1s'W>#np
%+<oI`j"MJ8/NTlLV;F[<!6?#FN>0U^JpLXi@4Qa@?!^aS)]fDt'ifD[@PTmbMS`8U_DAT5+MspsC^7EbQ5B-E;5OEeJ+W(5Kiq#[
%jB?C+Y7EZ-5^)gZ6&D$W-;M,^/m-5AL"V[b9s39&H'94"_e9$qP$:aD-31#4^_5$ZNWjtn5_G6\I2PDZ13jRI?S^a-TJ>6p9V+of
%_]]CXLmGnq0rk;&dZu86iV:enITn?d?3pXWcm=_1<lm'G.nNKu;b>@RD!MWB`jcJ/+_!^C,CnN6AQT6#W!9[T-elE$,%mjt:Ct[O
%A(2iAiXk:g'1A6Pg#O?]>W3"pPn9\jKIqT=0`[7Y2g^.5Aa!9M3ormh3kCSspB_)X;5Ria3'pV$8Tlu6r.#Q;q=(In,2<GPf@V>f
%7F<nj/%"b11]h0Lq,Tuqh8Kp3jaF'K-F.jE4!6^YbX'4P^(h7HjIH[(7mQ[T"#Q@oM(,#V=Pk6:;W5j9E:+FQ*(qoI!G)=EmONRY
%(!@T4ql+do1'[gtd5*.@k)c*:4:-$.A1i#E'ZV3C4`Y7sG'h<L,1'1V0h6bb>S[ZU%KmD=7M'Y=Su#[32#'B2=TQ\RQ,K`o=lK2\
%,$XQ[_;']u=+N#[ZGOT044;O"V;./aQNq\c.!U$q(tL-ZH)G]B2JVOp:sR/D!<.e13YUFl!/,rcIg%G8?7K*_r<<VI=\C>-E-^BG
%BuMY/1IB$"12_B%-[EW^LDX>c57h<c`\7O9rh5l!'-74/3@Ron'JHD8Q:'ps](?04*2>#h=b/-E;LG`k`,[9,kIf`<j/4_&.n<dF
%*NU7W5U[Md.YjY5#cJ&/H"=9O74JPKQ;=q6Q%SXp);:cOoV,\RfT&n%(unt3b#@9/[Lo;TMAUW!@`-5&TRjB'WBc]c1N$mJ\f?Hc
%I:?Rk/2:9h*'>DH9#BX'TNj8N'V?@rSf-Vm6'6[oq=cpp2C-_51Rc/%1!8*F!WrY-jrjF*,;a[XbDRR.2gktFD@0'tg-R&%nW$6P
%H:D=2B8kXOI>#C+#aHAn1VRo8Q`,M5,EV!53?CLQ,d1I'H4!2L&j(mQNuW[,5Y"j7EgR)tFISqcf0Y1q'oX,rm6'Q(THP2RK+QVp
%"RY#aJK=t>a!)[[.*c5]5TuK:"H;-1jD?1e(A&<Y<IY.0*!m;f>:*0lM7%'6+pU7N+jgIO*)n8,JPMlZ/!mhK,]Y<36L=o4*6XbC
%?#P<_:1V<1A@ulS:]a!r=?j\0T+`Vn+<uK!+H^01QW1u.OZdjh6s^aJ?ZF/`30_4?6R#-5h-NCgi@0?8&dWMTaqTE>(5]=9!Q]hL
%:0>=S#89\k,^@hS@5q+lWAV"$l@P3?Lr%-*n28(m8uQmWm-U0*O+Y<.%OFC^09K(F'R1TqQne;QJifR6&=:7oa"!5i_iAMiq#kh&
%E_n3[NWX_:>-.pL*:QV"0#rc.*l[UrOQ2J^Gnk?>#_H.2iBY3m6n-(`3%i`h"`GAJ1bkJCKH!FJLuf=Q0\%Lnh[7poR/6?#9sDXR
%'8:]>!]:H2CO0R%YU[1e-U?]XP2$1R4Ko\qEQ0.J1if7'LD^>h8?`_$hq/p!Io,YB"rRY4(6El#11>*go"ksuk_r8YcS0M[o750p
%1'!8cC5@3_pu:5XUoYu!(C/n/!QleRi\'n'.11(Ra%inYf4;p>ZfT8MO:<nYI"EmZGsI''[J3fgQQa*nj,/I;J37oT.kX@JMCOWM
%<6$G0=Q*;NO:t<-d$YHl=!5K@pJ>E8TQ%!oB]9Al3;?kMp]qTjZmp>V&PcTr%8YBi_;g10DZi`rOL1f[intBd8<sRFG[rU\_M5t,
%7UU4tOop>hG80Sg#\j\j%Kt.B'girH"B.!@LdO9nA=RNG`IR3IEF&X`4(6&<QXipH&!(2i'_Ll3.0O>l*Zh.-R:(dP4F(B9E&:$R
%Y(eo%%`b(TKF;ALE6p&UBuIO?Lq[,.'09qhN%2CK)@f"P#a-<tiA%RgC]YIa<-^\_W#Q)/Te=^5$G;4en;\9E0J8A?`,R8X+o_]r
%*.XOb=^m$k#DY#D?')pU?ig^4Gd)c`5N7>$M:W?,E:CjZ^+Z77H[1Ms+Q3kMJ9\n^&KWo<>p7(uJB(Fs_S(W;#XULMW3-!q+@%oP
%XQ>7oNXtP#gW%\9#l03i2(CRFI#T6"Sid8@*A<!eK7c`E@:C)VK>Yg6S9(gBhuG1`Uj*"$")*:cJ:/fFi]RGK:[EHBU-VN(d0n:s
%24PA`<A?ajUQ--P,']7j7`#6dlo1HOJTHQ`7ft^:'2pT(_f"Ze(:YOC`!urg;#'ECi#md-'c:n7-7P4<;8<:"m\RFB9)K+Y9qGaC
%(GpG:^cau6)pXaL"RsPDSLFP`ATss.J"m(p_8"qR`a;DGHcM99MZ&OZ(d<[Z%$`#g=-12M+K3*5M=Tpnm^EfUYhr%feF1Q"%`.^*
%CS]4G5f8Osl.'As:b1OL-ObO_8eepVVoc+DpFXF+K(`J)/0HJHll20@N//.KDhE4/#5.Bb[*T&3M\4N!iAh%mZ+^[%e,$A%okb6T
%'>m`cm/%Cir>9mMdCoY+JKEbVg,Fg:M1G[UBT8-4'^OK[JG994)g$7FOpKK[72_EnV;MiWBu)H'E5!LYa9\`R71]bXA1]LmOAerJ
%3"qZtOJ#/3&X[Khi;=4*iNZ!tVGMdLb-smj;$uA/2?W8V3SMp.Q,$5m.E&]*`!/[*p5[QW']9pt)9"h"ptcS5K$e34n*M,Wa9CB=
%i7'42Es25\;M\/R]cC13<bQCoTQ!%[p3,em'OYhb+%R%3J.]e`D.F;^Dic7o!gGub0Q4\PHnc-E+a6jf9L6@W.[]'(Z%4@TK'A9\
%`)9gcMEm+;W\R4R/C0/T$KqpN:rSe%H@)nN$D'2p8RVP-^j3g#3/FH0Gp6@?YoV'C=(WM*jfMs:,Et.*d3/T*,]Ca66&9c:kQYEA
%SF-O%)tak/:m9fh#Ze#>-:m!ab"1BoZDClX][m;V/uf"`@Pkq6aIDHHQ&ama+b#fe-pZW+hhZOl'-M5']6MF3a;Z$1FJ]%`_nK'o
%[LpS"WL.'9E85Qh&^6Xn&R[e?E[sE3E81^t7DG4gXpa97j6+9ed:U22cP0Wb38P4iklf1kN5lc#jXE^.j*2e:#%k"DN]4t3U>nd`
%]Fc881G\b;J.#n>FClM2gaI?Y;-oW"eGC\R2b)@@Xtdh=@n]UrV8IOf'?f%k"$Rf;&7E)L^j'A=/RmTmN&SZ`&P1sc`Z'R($(I>k
%]Ib<Z@i>NgGf'P.&E4"T2[4'0gek_8J7&tHi_<NRTrt&5>Kc-7'ZD$NV9"KB.,Gg:N0`l<N&Qh)lVh3(0ieeCV]!Jn$$bS[38XF)
%9WJaFDkqo76?0YhK#[d=N]0W?Z*jhU)rf0u>u6*b0nKa<W?[E^Q=#qn7FhMoMij'`J\8hAJUk'OO>iQgcs/+]hDJ3XY/5END+1K#
%3M:WK.%/m"if1'\lknU+:UM\YhGqqD"i))%H"^e*$u_L>#-1HQ]HIRg082Z9=3JsfK&DXPa,GDK!8_+-V&G^0i!ht4PiU*ah&*!K
%WLRRUmtM2<R):K=h*<*5<!MfGmfg`*mb$?''TD*W6%oWINYm-eaPBr=SkrT\jDLKr@rD]7`=,fJ;s8,?!`%,pVT@TD;a)0g4b?Ch
%E,cc()iMZ_C=,njJa++f)snQj%@NdoZQ"hD1UrK4G$>BFY`u$)[=e[:<\V/MQ&4S#l'U90[cb1T/_7?t=:.Md,!6V@QU%-,_<_@]
%jb5L$2\MceO$Ik56,:2rA2fZ+,>0/knJADjJO"A\Ko2U"+M5IsNKTGkG%:@QJfG&,2b]&ON^q0.bSe74Cr,Im/.;SL'?k?!,g&(e
%6+`8L3Kf7.*B%thY(1\*!XB&Q'@:VjUJ\[B&ed$5:^Leo;Q-VX#hk8([1lNXT\W]n$K;!f[2Y\j$7)%4G#Ob[r2QE5A&HCOU0NMG
%>tIuQDA7Puas@.6CHScXFormAqK@Y]"tBeZ12Jl^0]bc3]9,E+`CAX#2";/=\JMJMah/;BDDYTA^RO/)UKW?p/:uUcPX)B"`pH5&
%!AKJRh*f7*,=_+@c7#BQOLp'/"ZRjMh,rJ;UFQJXRhQ+Inn.*bgi;aDE]9859O)_)1712I!eT3eHB-p"GN<WM5A.]_^tfj$:03+"
%]9,F(@0H!f1-=YCR0>C#kULI/r[*1[N4@[Xo^=2rQ48o5:un&GPeJ9fr);BgPTL4QT7OU_fdI\8J@ioS_C;`WL_CUq.,VNA)Kap#
%:Op(!<0A*c7"MtPetZ[/DDJSDhf69U3)^"IV#P+t.S4]5gPs&oq:\9rKuY!.GUL;_TKl=sY*;-Pc&!'B&[r_<mOUGh4)Qu\QDlbI
%j*&=k6]7o&G2"E&PXjMH9H1mj+MmHbJrg\u`44VOqI<BT$#V\b;,e7bDPENNEP'i1L-_R7`bZou6%QYa'hR)4!o.W)/d.(_MDPUK
%Mhn8i!U`Et`6>$QcN]*Q$ZJ%$.-uBag^W=D(f5j(Ta[9\:uH5cT[R`\mY2g[Wac+c%6dZFIP>Xu\.f)jZ,:a[9,(=3"L]77*fuEi
%+uf!Un\]M1DD4&5K:&WgUdYT#N8'nTUa_;-h*<i6q80TG#R">LT\V'h;"h%*,kgs\A9S[;,g?s3>tk@3'3@e-]P`8$1Mg>egDH/`
%O!B*4a]OZUUC+D>aqIj\DC%ul\iZ1n\dQ:NMSTbk=HpZ\@WgkTfcSq,^ucB1><Yhj\s5f/h)TI#XakKq&r2C'.7?)rQ8?f5qG4rG
%NV]FnF9@*Z'TN1Ln3(fn1-dejN]A56cWpr$r<YT1QKi19c4)0]<%F-J\H2;U!'s+kDF@tEAA:M/$kgpEaN3/i14J<jbRHtQQ@d9h
%KYU^tkU6F`Z64@8<:4RKi#hed!FZ1\L'#L,":R)V?udW\=VR#<CoiF^/s+jkDXi7u%?P]<2_KX98I?jR*]JVV@`H:gNZ4r+@ud5a
%n3*iX/7@7m5\@D1(3^D9J>'KhmRr8g(`PiIa<s7.(n-=>rYUD0SFC%m?l3c`?**3K6/ffjiO*h?mNedYK#%lu_Mk5r"?-euR&2!F
%_bq^<&--SjTO:"DD[Sh'_J`pbA]Pm?HgIY_DefYl_;<Js`"J_[jUMsbD1JX^4D+lTc<MneiO"MBb+-7bQc('Ag8pI7W1_lVNYq@%
%EZ<t+,ln?u8rtlL7bfU/l7rCq/qWUFJD61:JK@.ogBLo&Ho<<jgXWOE;:)a;mm_L^K5Kr;$.a9t1=S5?j%(&&9OKAe]U@\o=2CLA
%Qu12A<Fhef&<,N0qLor%)p"fWM,=dnL#N*=N>e+uBD3=j&<;HX?NRPCPjB6mS*E%"S!s9YAfKT0H9DCC]*8IW&<q$.N::LS5doDm
%&Y_][[W,]ba9&Z,&-t]IZ$YmI#b3ku!SKpNKYhuq<)h:<\b6?N2XW'WL+p\,*Y7lZ$HP,'#V1-&fu?@P1(,k?K8`>90*u09?#hu'
%WTnn`Cnpe<dDR@SgIT=L$j#$.Z_Ynf;B*l?<;0l*fg^<*7Q(Ro2Jb2L#(p^o)C?Mm$-"m)!G,RE`cbFF"_4%)HKBGch$WL.W`V!a
%Ob,BFC*$(nr(bM3N,>=,gHZpL=GGJJr*&/3'8ULm.7Mkq`&8T&K#J@YD3,#P,]3[gh;r"'Wds\uR_M+('<F\I+'FBO*lnbpN<Pp$
%d3fL[5f!`8$,SU;AY<on#hp-RcP^kUYRr!U(tm1;@2hrq"[WO42MN#GMD-8k__tHUp&neCEqKu+9d$kfBoQNg3?Pq4&Z7(l2T3X-
%E<&rU5Ql;thr6`Y8C*]sCSUh6\[fLkU\tIN1^%,(.<-).S#DI`M.*C9(M8m>]Jfa9eKZ-o[E0\/BIK*pB+3H3'jnQg_*K.C[NV+G
%%98"`>r$-@$EoHB7?1c_41[<aqB92p^-iM8MV]h6f$9cl3<@\8,'$Doe]s?>/[3r3DUF9?%B:#*JnK-t(9h5`e-<iXHtFafg6l`8
%.AD"2P![HEg&T3K2P:(H)_(n(:(9]P1PU>q2P\'j!Ql8t1e'<=J4)c;$:3-9?E=qOVMu^5jJhQDg.?)V0Tn?d1VdZOn^1*.Zk3\"
%Z*c<R!lG`j_#i(S@2crn]L9feL*-g[/dd7ip^>L5+pcmg@eM,Kg5%Ib.1?f:SUeG)>Zp!k6`-6L.==%,H;S!&ULur%5:1jfG]o0F
%L^A5_KI7omMa1obFZ1?h$@[Nk**-IR+[;Ak/f6H-&nm@lAqO9@=gf!^CnOZ1(an6/S/%LT"S<TVYmC2;KZfCGJ"gW0OioBg?UM?J
%.9*_k>S<iK<&d_GAY<iFI6f7D"=G-85ujj#-9Fh2F[=-(">d'#21f@/6)P9UCsW3aPHaD^*&&T%BS=H]QNlh$JrgGF;eF*eN(o;%
%Kf91V#*Bu83"%o.$kH.D^gf`&<^@"U!?Je0RO@%G2+m[5`l>0<"+`sYC^?3D-shJE#!>R9A-aqK6=tNePTKd>1!W=/Yq%mY'G_Vn
%noGfe)]^I8UEQkoiWE%WC^<^%e)LQF]4@mq_4]F\E)$QM]8G]uKZ"'2&*8]so`>CuK>_K!lK#Lu</8C]1>4hn'&+Tg0h2VWU_t![
%AqGjKjGG>lJr,K^>DP'ZR+PGTgIs<+LE7<I)^pAt-(roAEWY/5'H;TmE:3oD)u\ZFJXraV4@2;dYQB]AiZ\^L!fDt4B70+M(40?8
%lup9j%#YQ=LZ,h[*>Q1eKW%^@C]GBhqTAqs%2+D,N9hT+"V)^J>6uE1&00jR+W`Oh&%uKe3,D8/Anrum@982j(6!%7>DBY>KoLU"
%*n*i[+[BujYd:!2%j&@q%NDg5:c]LQWcSeW+CNi8:6dZjNbFDA<ItHg0Ph`!%il#sL%E*F25f=W=/B;5,DD4HZXgI'::M1XYVCic
%.Le0N2U4Epj\c<#<ltOR)nnm'0`m(=f+cCa-l=k`?\+A_7PJX$;rqWm_ZgI$\h+U))b"q)\/pf`6(gTp9#8@KL^P]79MjBo!]P"K
%KoKS0#09Wn<_LXB'K2i'+A3cLY`Tj6Qj*S]!<p"G6X_3$`"\^J'K1iDJpU3qLo'`e7D]6975[c3YYgJ$C06(AD)!Eb;lDI2!Z4OL
%.o=ls=M'YU'K.AWPkZG!f]6Ya_IOl*2B$$9mmNhQ;7!"&*t3m`@!$slgVLrAYmcjB_dM+&7TV(5T[=626!Tn0@:RLhg>3YT)[W+0
%Y7hYkMhK/76=GNDPW+/eYT[J0b&dq(2RK/HRm:C,[O%A<":?+HX>jBL\-AAXO4`+O%4[lJV![)c,A\,b_?QQp:=01N)m.eH!R+*e
%+Hqs4+Ag]uKcp9H":CW;UT3WVfGM4k(QtJrOb0!7'.@[S#L0tM@2#"FU)bU1X:tF%:8"i=-83I('iU#ACInS]NER`=]oQ"BjJXoL
%6Xf!`#f2+dYe_s3&0`>52N[`)#mqX=B/DT&_F=mdQmPY^5UNEuL;LrRZm#p4NLa9CFRDuXW#-,rNF7`4P[WO>V!.2D_?:<p+>Xuq
%qudmR"Q^Or:_[.g_I8(o8HqLukX7';3:)2O_I7Yo^gX!18>-.pLFpPjMM>scdtC'J!%e0q)?^<brKpgkV+5nW[Bf!e9E>!XW+HVO
%2S((])f3I/VD*DS&]WC\m,o$%Ci"_Ro)o>g@]Z8`YQ/*qXb9>KOPKs(?A5G5G9C^T:c7HkAfto34s=<g!+FnnP\>]S<)Fdc7$+X(
%OO16_8D%T)6\(=+&iSI3&@=`rY`V7**'n!XJYF8V-u@ZBoV2d.2S.hGgbhH-K/nL'>:38"#U's#%@RoY^c@pqJ.?9BNg":W:tQV3
%ihQV[Z3;Tehh$QAjqfQL5Jb2@1?,eo(,f'0ZNLXT.2ZAO_8=250nMs#YgE`/7FD>I)soI/Y<ZNk"RNWF#TMM8b=J>2d;)$U(F'W;
%-OUVH5(>H?%Y]o.<d\)%_?Mcd3J#$O$AEX0'K3D9OKAg'2Ni('":CXF%?'UUfGF]^AQd$[5E+tdN:$#s]hZLX'FYpD6B4M#%Yft?
%EF=&!L5iag(d9Acf-#&UZL8J9)q?Q&:od!C#X57$-:ld[b$\RYon]Z6j.T`,!oARDJLbZu@Z#g*ELlJ`@Ba1PZ%A47?mdQ^2[.#m
%Cj&Yam)0ZRKto="F"p,!/o5W/'PgJ1n+bL'No1'>\tG=,r#/uZ/,",EI$uMX2<<"j`"liij*?JVTW]NS"g-_sjD+c?<oe$%3^[L,
%@+('6K."1\5U<."L:mf;P:7OE)LY`<Y@(Zuc50C"CEQS/N_9X$+Jc@&]u//>Q8n(m"F(AE:,"2'a&kcc*q?BV70>8k"n#OoW"e[R
%97cR=g,0"\J]U3^XteoRKFi^G#(3EcS8038l=?8t0,9u\jVg9dVQ>;QK4g\o@uPC:Gn4"X>;33CA"H@:Y(;D#?9u*p&um>cfAI+U
%HJT<cCInK)Y/=Ir=+dj]5"^oIKD!D8i7=SWS@W*4UX?=B%W.a^'Qo"D%3D8ui*&L4$ps4cX>Nt+^emj'XV5IQ$>L%-6\K3j["aUg
%mPf^(L/<fNi:)DA!m,YhG!KgK+N+@A_6\k?LNqqbc5OQ9n@]MmC[d%QGWGl37O?;U%M!1!)'H*c`u7-L&Y]Sj2(4GX6kF-5,2n[l
%L,F>fleG/fXMKF^.3=jE*&n^2&?I$=cuC5f%U]b;-.$JJYJq]R89T>:IpmRm-%+pZO`SO4JlcG)6QiiNqHbo+U/6aX>n'cWlkJMq
%"UYh!l6MaM'AR=RNT3V)5b58pE\hI<(SlWhC,Nr"ifbd`eUX?PpkaT**>qag!a1MM25%K6@W`A%0EJ6Z!gnqDGh#'u%"*W,"s=kl
%q?^=_r0gX\C=dA7=c<Ka)FQW>VA6%EFJH#@<J/Htm<sRb%5:(mkldm;F,80WV:o_T7L#iH9GG?#AW1BBNl*9N&YiN,Sckc+#kT[R
%9+V@Gc8%\ap/2Mg!3-(H%s``a;_('/"J-N0l6u1cPE;FT5$.q_m1Nd_#r]2TYX*i;#.JR4AlQu/&M!&KQPt7jpgaX_2%Ztp!l7br
%WKfM1V/C;R!>-_.Fcc46R+)`Df.&%g6nUJB;T$D'*bYSML@^BGb6]54KNp_TH@@.o;fYDb)DtWtd',]"UTWg>[0m/5%U96FZ)BIT
%`3)@&\(@u&dP8f^@JSFh+DQq)S`3H^eA7LZ:DuY4`eC-`(PH+$"ec,o(9EcE(t=945XD%YMu3q]1rjD]r,e6V'9#-B,i*?q5+O*k
%Uk;Ha:o.VsUW['TH5[eUP+N&IS"D7NSVH`E3H_Oc:.$oZ@SmEt1`UDa@-H#]7jMrMK2-b/Xorh"M3K-Ee!S8'=PJ]m%2jYPE_fQ(
%!duJ;?$X0;D83U!oa!M$iTc"Q*RWGG44ppVr.3d,^nrQb-2S01%H^fNW>2XO$qN6BdJ,7$Ga4#N.01-_RODjulN6sq<sjI8';"K>
%2BCGZVdRu*%B!=Wd4no&"DSkA&Hp.r8CIPS6<0m#BKAa,li^r>+@Atc&X[:J![6_WUJ(b5F,R1B7E7l:`g?tN01L$i`&+tsV*Ilg
%h2.;1b]\:<I791=^sPu_>25#C03p+r))2^8I&$#cdaaLH@Yu`H<6Q!fD!<FG=ThnH@!48KAqDR>/Q\5P?ti/%,MO>"K0Q#)DuqOq
%$5_,+=R!\j,)R-FclS"F0EIHa%"4i!`;-<g.BS70UpNr5;&Yu!=A)V4U*23.2<bF=1^"MVKnu_I128A68b\8jR'][)9,aM.C["[D
%=jU:u8CA&X*<]^f*i^2?U.oU&JKP[E#>%sr`=%QFQ67Z.N6[RAW=o\S5kq&tbQK(pUl'dI8AdSgJ7QW\/s4VG"@="55'7!B1mZn+
%![(bO/rT7p$Q"L1r+N/rTAg3*1gjdUe""g\+g_r3SdZYL0r2=F'C9DO-PP]W7))-6*$[ri7]W*^7mj^#'q*=884]Rp"Z@:/NFR$X
%7u^!<o,TY+^K6q77KXJd_QurZU[)#8'0$ukF!E(g"%Hc%U5LOHd=@%-2DfuCL=cQ":gp_E>[?Ys^nM3(h?m4=fYf41R?=4P5V`'`
%:p`K@.o%o0$<)9T-G"L16Cu%^_]?\V5s^@1OpWHWd:5Ze,J&\\=<O=G\]5Bo>.DHa*u]`T$%eW9T`M8)(/n)&F("LW#s'n2-Qk=G
%:r/W-#A@cZX3Ynl)&ca^#j9@Gd-qph1`7)j)lY/D_ErlfXDfXP!E0m@!#&1BE3^X9joc>Y7EXjn9PDeZ&U.2>Tp7;tL$hopKhdRI
%V3o2o*a;@1&l<8?Da;:*=fm7nY%2B>KasBb=Jqh=JBnsU1!q'JHBUuB&K2?5a(Erk$O3^A`&IpR#3@FWTgHD95X9m?!XB1-\-Oi?
%B[D:h7&9r%$p"bMq#CVi35eIpTM`nU[UVTJXK;.H:s^W1=kf(375IsiB[iSO?3,W^4WE?pABb4SLa``h&.kghJcZB@?!,HR:nSD`
%V>:Z']danj]Q;bAImK_d@6:sts3go@ZbQC8J%:$J4WtsMiTZ[ff3c"<hR0UPHGoG'b9,KB%"J*BK.gTkh[9>LamK&-(Y[J2s1#d,
%]37C&UlR_sMpFTb^b!5"jhhVsnc,JJct;g?m9fnJBYQ+8ietd*s,U;FCL?r;Rh%`.e@)o)rdt15$7K&mO-t7(67cAEkB-Xu7\Y;/
%RRd$Nq_-#+!#<aD<0j;/J<g<mm29A<!Pt](l_YW:5MF@X83tE37(^oM4EPMXZf?g<K@ED5n7!"Be^$_'MD'60SKD$0:t?q=P:7t?
%%dgiK&(P=Xf!f_/=<Bg*qK(p&Mr!?a*'&kYPRchAr(;Z@4M7VSf2<9i7qq4090]?P'?+ADqB18CJUX=YBMC7JkSX"]6jF5N&i#,p
%I^B+$8"qMeH9h*2Q:2]cCgspb1:GTWi#D9O9nokhV:S]-(UHci\VCE+j-WVa3fZm.\E4)+E*#AM+O8A@'V5eZ]V99T!*UNX!u@g?
%IYX=4BpoG2/]8jOTa+,g+JL(qRHV(",b\kkNLP`,Kp[P'15g.(/"L%h4r+]hpa]YtfOsT&\%dB:/+e9]!1tD*T2>+.<Q,D83X1V8
%$G?YS-9h%iJn(KpA++\rLs=2^DXX.!2V8Q$mU-ep&UfcF6n?6rZ(2<@NaS<M]4S\c)f`6QNkoD,8l("VU30IjNA<.!9jDN$Ghenu
%N!kD>+\:RO^PR/hq11(hdtmcG`"7$^g%1cDQ@rU_gsf<k_!+Ho5_J3ekc%`'g,SB!^M"aE:cCA%i.ME*/>j/g?M_XL,>?&!6=Y`k
%qPbs!7hU>PnY$1U)]D;)BsDXd-NfPVZRmpW:m@29<=gi&*N\NPFB4PlOnNdjQfsg9e]`ZN@!d)c9MN*(D#D79QoNmR!+OlOd%(nt
%PBCTA,#*bn%-5bi0j-\Qm2Y@o"aX+G0mN7aKoU/MFMpJ,jC,hFdWL9-QAoAnLV<8R3p\3]aR]M=A#J%p<]cgk-3i_QK&^b'FSZH*
%Z4R9r:@qdk*^&V.lYT2G#\Q*QGPXorSMqjP^LA8IFZU5smIA=<:a8biSrMi#NnMHJ?g4Kg"QBOT="s=19'EG#KsFG>=:d1j>Yb?Q
%!E:B5TbK]s2CHp?-4upod&H'FeQ3duSfT!uUmc8K[PY[QlACN$0J'_<S#gSZ,fGsNoPH(qTC=C;$/L6h_FHXg*XOluW1Uj9iO7\g
%oY7JBc8$1E0VKOQ"kYehP@9B//TU,k+!0F@AnB5/"VPeV\jT,H(f<XZLp>`lDOUh[4knqW+LXM`I?L1#[R,prZ#OU?YZi2<"M6@X
%b\]T0NB@@[Hnn(u<nTZ)^bE%`==03%<8,nQD4+Tq[VcjiERO0qcpg2BYCraN:?<.Vf%_?$T"P_%'PG0t8Yg@)nsCu8;]/))cF,K[
%4ubI0iL`@K]b3*?6]gNQG9Be0%Z.%%e&$ZY>keT%^aeMaRK>\^/k9b`7;=a-GgcrDLP780aBsHjG6[AEE2[J$K9ZNL*cI?g+a16`
%c:/)6jH_,I0mL:?)h7C"gr1UlnW1,tl%<.=$F^P2#ErQA::KjOElD9>n%Aa3VfKc!<9Lou$k0Nf+tsPd!_!eS:.uI)id$>DZCH_2
%-[^)bXhlJbO[8l5#HjMigk2Ie8E6YX[n6?]>a`KSHY_/1%-BpJT$\Ra9bH<4N:X)/&+F%>mBE+9%M)o<)I=*B(@lOpfX]FeP;2:j
%!%-F"A-U_L=%YDlH!DM4&?S?+l0Q@JGTo>-4Gi.lQ<At$.Qp<nN)o"orp>tZNT[,E=1m)bKJ-WX:p!:#i3FW&Y9K7iA&Uj,)qq?8
%6%]OhWhcHf*G(La%K6ea#&B^tcP:/aQ+;UK`0FJaY@pqp$cP&Q7B7m8Z;mf@@'MI',N;^s`%N<$[&[Mi>XaOO50No(an$a<9(KtV
%S.+_ErZ^VI*'aBeX+Y@7o0+kaHTiDrA0n+7KfD[Zen1=X<0>4)Q18W^MiD561H__l#3sMcH2/HA[ab),j3aGXH"?\Bi:(9/Cu0I)
%NK$Pk-Kl'G@0E.0AU]_7BBa"3iZNPU$S/V)Lekr#8QY%(3^bgT8]tpMLk,W<Q5b`+J;H)QG%KjoE9!3F+FNK)1$'Z$TRoT#X>N?U
%Od0/&e]g^H#:'MS4Wq<I&p"Nbh`sDo-dA_`A'C0+@e)g@R70-SD"Y[_Wg=bXaX7iY9is]g/?;r4]HOPU15oXQ-Vfp:JAOjDM[#:O
%9s,ZaJs1$+j*nYWl6W>3XVb,+&'cpp5mtN.[]`QcYS;=RZ+9uY3PLan,(WkS`Rh20.j',JJ2YQY7X=L)0<\gG0ES-\e4iCjS]U-3
%!OIi%)=W8"Jc6%?3`;']3%+9X#]3#l5r^Z/@"9sGQI!42mi]B^Z*J$c$A"$.4Vh-\LPJ2",&Pi4F#YD]>j@gs"(un.h@=$D=cGVh
%7Z(MOi%8)rTl#r%AcPOIrW6Lf_FC77JSFF;TE@*k8IqQC>-e2!i`'btlS+5r[HGA:1=@nC:Pc#u!'J@a0ao'MV`_9+>,J7B)cRj2
%[k(EORe386ZP>h9ejgTW*LX/2<2sh@*U-[;W&!-G#7oYe6++Vq1a,P9-oa@$WQ=aOD]/WiK:\sCRTMK[2_STXCKt4skVm>%VVU(R
%9q4rZ"Y1dc/1^u9qSk$JYop:c_Jk:1;onP@<nf0_N.pXCU.?Yo/=6!,<TW$`dXG-TY.k][h4a<?]f(O`FIq(uU120jH%(L`Jf82C
%@Lqs6q>uX27OE0J`$87W`)m1+oVjfq'F)g)g\d"i4;U/5J[4J'k=SWV>*2;g?_+nt?7hKt]<4Q-kR6NOk!*i^>[=;&7!>&uX_-cW
%Yo&<(5VeI(7!UE%>1Zf"._LT<JAS`%DlH^@XdZ2',rgQp)P6h$YF4-X&@n$cE-F.1i'[k;)Lb@OQ*0@B-7Vq+`R:]EHdJ,gq761O
%n%;<+=6lF@j(EoVF@SXFrilkCpReRVHRLP"hsCc_FLn:jr<Y$*7@ZP=35h*/'E82ggD61Y`%f<RFAllmJ]Q,p"IOmOZ*@qI[M[N@
%N-.eS;+H.B]!R:<.P$29\\pk/Cg4iqNnCs!6M;C:kZNBL1\&u!'Wp/&J7_[aCb@!_+=NC$4jFVr#@^SX@T:Yd^c`F1:T1iHZ"JJR
%9pM;[;Cr=\Vi>38@7(?bOI<:_!.VUY3nlJRfmehqX74BnaM%eq/4+e)*IC_Ic=R;W$1pUo/GaW):5J+LB?/!c*^Y$4[`CKuk_=4U
%iCk2'0htQ8]iaQ#:*?G$OL>rK<[R@:6HM*ND?*]aa9\9n;2NB\I_B7ic%HBDI!.i#W?k)mUdm,$`.'7YN,)rbnS9QPcGmmmO71)[
%40tmHMta:G'a2Jco(!FBJ\4l*2HJjI?m8dCq*9(FX4#0[4nHht5GohDO[RgA0O@BAI+cmR"Tc'3U'DID+@2GrEI]M_!>1,KAlS7p
%ZtHf<-5JpukX@Ok[OQ8X"s"a!=&u4J+qJ#eh'^a6frYWM0/cC\(*fQS7`CrMatD[jM\Ie&">Vpd'S:8rldrnWTF*;3*J7qV'02!_
%=(\->KVGuZ1;?5!cRYiIU)]M+;]nD[/.kN&Z4r6TTB/3?3]"+<p'r2lBe30CqA==!E7oi1iRADB=#5ch3a8o=!.Lk1F''T9L^&HX
%M.lO#!*tj)YmOle&CmN-.C_D?23VN^YWdD7>e,q?*l[At%TdPkPXOC'[;V[Rm^0aOOO#$fAb'.K&tlRV&-5%qG>DqC,^usp#bc=Q
%\:XT4npjf+Uoh#b(EN)%M8u\.5aMOE1o8.W)cui-l.Poa/jp;"on7MW3YP;r#Hp:p8r1D8NAE^alXMmlG,jj5QmUCn9%@/<r"@C[
%jbmS9$6%^8IX^**VtMsbli\J`7K"1:>oCO>4KCb'QklR:1VC&ake]`OKgU*2h#TStM(m=ZZKk_!K<UQV#9"P>4Ae4dB%G!V%PMR1
%:kd7&*F@sBb'R8>T-^e>7Qu(O=3j5Z3]AAd$])NdLi%RXD9:M_kn&HdlsOMq`_#CQKs5'1IKpe1Q-_[LN!)aFA>1Au/*Nd[k_]qR
%C.hCWP`7r0mP0hUH18c"]=U7]/jKWXe&M*\]5KeZcnV*B$&Es8&<AOO0imP4bE(".>9R3$D)lbk@QH*i31^:]?"tB@R#Xk.'gRDU
%V%N2OjONm)5:EeLjQSf'Y*FT(:GF]0q9<+,n-4D+'j5tP#AGT:+UelD<j\,n#DBuFTo5@tTuJ;O"&&\8X%]cj7',b28a77FN`ec(
%ONs%A^BR)V22rS;l;K(!/<?l0Da"pG2*<KJoUcIR)gNi;:=;^WNZ7jdl??d/66ZVnNIuUpNb&?[*6E"n_j#S4Z&^K:%16NAKVtJp
%'pJ!1&]%/b&.sefD:QR,g<p@Z22"ucl=Uo_RY[>I5l8]IDZmX.6<%h&=r8cNOMk-sms(=NB3`gl5dU/&lNqhuXA_G+.`WnN4f/(/
%?>UIq\p6j,P9.M.brlbT),pg!4d(n8RneZtE'o"!k^gWYP?fX]k`81#2ch)Ja.C!)OJu-SZ0-(c89(^rKN_</O0o?F'gOrgQ6V2\
%O&Ma1G9W6X6pqjQ`8c[Y,$"j)]A\Z;:II`Y-[@jR2&GO$#LR:&-Jo>WCLolH)@%G]ffCX=Jjc3O"TaE]R3\*R8-RC_"QEI#F68e&
%$3b4"&lJR9?siE@"AiIrWe']gQsgJ\5/K]oKg^)L,/t=BXJME<TWAf^7Y8U1o`*RWAIpH2kL@jkXJa*REReaB7+c5GjhQGROJYa1
%*OsCf=2Tdd+9ibj%k$Oi^s_XuSh'DKbcY$=c&a;<LV.lT="S&?1I*F'd-JhXE`%*,6/cD0430k$M_hA^BD!'/&jD`)ETp>S_iT!W
%ioh)/o^FDk'1XrG@j`W,ni)CPDfI$]Z?Ca'PFe@:B*@.RXXq&:\,k)GOdkW.eC?j,4h?*!p_spn$GmVmT6h\!+kH'!7-Fh`A9_F;
%kd%kh0p"@"E6C?F^ro?]#huI#OTWs,!(bn%KS]l?7Vsu]&3[&o+5,o^[ZDu!8E$FR1h"3(,(Ak)KBIjkJbhrE@jh`/ILcR6(<[*:
%K#(4#+7gD'O_;oM@\BKT9nLm-7d!%G=mXmF_a\u,?9G>E=D9=TSgPm@GKU=$+KsnClkS$FC:emDY]#uLqF@_HSB8YM4km]fNqXr%
%Oog35N#kD]m@dXIBIe'.m+--beQ#bo`0sPrCd%//Z+1g"W3Qoda=Cl&Q[t"0*1f'gG/Ns:U>.^cs$c(Ki&8rq#]*QBWEMa+ci_X_
%(%cQF73'8T$`:O%i5VQKVH``.7nUZAU19`%U]]<^UTYV=/Cg:(N*>4+%HODCb3hcK7fl#\na)@>p@#>#4D8h!5V]4.Oi(01lCfPm
%)--&J\p/lfp6gd8PXVn+'/:b8Rpu=MJfl(DGjVKYZe-rfa1fAHU5UY/_(YjSV%ARL%tUFS'Qej6bmg[!Z^iJ,W('0cZHT>u6gUkn
%,t*'FLhN=mAnRYG,A5ClZ>'"RZ8`:=U)6^U36[b4G9TXi@i4*5?O!r@%D=f!][mFo!.$./K1sNLN@;Xfa-A<:X<\R2O_`irEQ:Jk
%Bk5f]6gqkD+AYrl,)H&rX9rrjWKX9X_FWI;L_Aqe0Q$SQ<2L?BY=*L!&qD?%[*$0VYE'U0'a_fEQ*HF7=IGmQgg^d]iF%5-"<Q3e
%BP>]%2lNT_WJYMTnt>D>3G9sZ6UCMtCP0/aqYbjm"1'Eu1_;(6gAkD<fq0CgepB1Pd9%np!4ZY[[<s/Z<cTBM\nV`g'AI)8BH0us
%jl[2T^IM^RK;OB7gSJns5oY._&4?0>/Ok-Y`RG+p6%<uo8UZd&hSuj#:e:p2-flZ"b0NXO%dnuCle%F:eV<JmKLK$5@T"nSmAHV?
%R()@RMPM)fj/O$2glZh'6Ft7m?"D1gQ*M_\*"-nG3He2N]-^0\e;AN-8OS3bh9h)B`iD_pWeO%EX=+6$!+rJH/=@cDP]abtS:kH8
%NAbfGT-8_c'e.-'@K@'<E^#c.4Uf-1n-8Qh]Q1rTA\aj:a/j2?e:c9YMfFnJ$q[7+1coZc<o/A\K<MQNO^Si&!XN'Pli_l"+-aKN
%EA#WVd2lJ89HSq2T[u:@quL2eH!d@X+==Bl#q&&l"TT1UM.6tU!q!KH<DFT!P'UA1@rp#l#_8uI:;jE;Hl4UUK5gb02Hm%aRe9KV
%+[m!sZW6\NYn;b[15c7q48'nM;!s"(8oa/E/aNA,La<$5_&!E*alH.78kqid+i?qjWNn<#M4ec?+Sd<\';F.'UKUJm?a=RX8bC/=
%%l"I0Q`*V0XY,'SP0'>K.-2)MJRrN%#K^rOl)mkS08Rtm3(FOA#GQI-6]WC2>hG8.1-bGf)C?8jD'2qP:mSr8Q.6A='33Jd0+EAi
%bo2.Pa-bLdoW4a0!,g^_<^j4tks=C2+9raW1ZSN`A`>u<8=Vq"IRLO_#mRJspoe2q7Y3s(+VXBjV$DBJR:oP.G=<Jo20L-4m4HVa
%\KY]dP=+3FWfj/$\=Ut/.FU\U0NR4F,khV$7MJ/1e(s5@!BM!<i#XYs,uFT-<<:`fAmIlS14cU@\kDqfG(J[g+cMX5(;s9XP0.!7
%4[gHmaQgj@LmV)&pUF1B@*=C]S^mfa=E#!<M::FfE(28H`!5V[$9(>!NqO#EU*lmZ`-*joB\Ki\;3QQA478f@H,Z!;Sd3IW`a(6N
%q.A#ackb0`+a`'iaUps$J!K%R(<%%]=.gL;eNsA'-DP+n96+*L/ErTGTl:Q_+`o/B(fm7[/;dl4EFL"%U[WO9l/q4"Uh1rH2L"Qi
%F:HL90C/g7K0%;XRn]?/n#939%RGK6&0^EJ2_JDrOl7QO(g"lN6C4-e%p:]3]uG94gfVf+80N9q!!\qS5-H;SS(4%pai:CICQ87b
%U_I#AFlFI:,d%8m;Zt6T<NfLq&n*#Z1AKddOYJQa7^niAiPAoR`DT,U6#<Q"To5k"`N-s:B@O%Gp]3gYEYR$,4W=lFE>hPc]k!R@
%!-K'Opkfp8<IL=7?dYi.;-2Uib(K!rafF!CG4*RBbdlo&=k%-cWN"<u-S#co,dPIeLP/"!6+1/].\a^G!rs7%nh?Kl<9PJs>#/__
%g&dSB7,GLk,T'ln8!`(E\S"Q[*$0O:O_bb/Qq<VRGDV-@?UtCpclU+HA(;;)CTJ*n\M-No6OH]Y8-Z<66+jV%=pYNQZMljUeU#L#
%5_P!BHcT5!%SG/$l;@='=rGsnLN_(t2Kl7=R;s5#<qLF"+R+4YJM8'/.q.(*mt"'!Ik._?-BGhsQ4RT67SM.9-$qN`HaXCE..eRd
%-D.4(f[#Fs^u?li,"W:gNU*7Z>L#alMioBV_$Aeh&gTLf`."GtO8uIe-;^O7OqX;r.Lu:&;qXNFLIdR"8=.OMW;)W(gSS0IhNo^+
%N#:ub4UBDb,9tR7dXqZb-$CX:cZbQG-s6r);A4UT(P/8*.skPQ!Au?RQ4/71=Z]"[*W&6,A("Q]B=3WuJ?pj/%[kdKJAE$B)f(EK
%"*c[5ZTl9Oa<>P\H%Y`7+n'XU:?Bl!qD+eWRNHr*QaBq^hmS</785FZc:[,+jF[0J&iuO09k3m&WJ/8.,HINAS[7Si5X\0Z!PK*3
%#>'/n!Xp&_$N-q7OsL?X")NKf$/9,oII_K?)c;8<6XmOIkfLjdE2'pV,a`8>];XG@PriT@C.?`AfoOqOg^[STe9T9N:^'SAd>D[O
%'%DX_&()@CPhDdQWbS0)\lN,3TOmD+,4%3"]ofWajG*b&Xc]9C62?dR7gDS(U@Dkj-Oig23>au&`Y*.SNNTi=E'baPICXr0q8jSu
%$Xn@I(h3m>kH[pF-Dh\CAeJK]aeT\?+8e-Ed6,Ip@Jq8+FWfuY`h(t,JXm3ON'3K.168l^3HO5V.Gb[M/K1lo\/lc=*C66D?ZSjP
%LQ[HjYC5?%-A]e3R>F(4s"uOdV97a/Q\t6'H'V^P9[kb&bc4MbS(OeN`ENnY7m2/.eFjlG`S=VR>&:8Xp6i\Q"!e&56HTrT.k9TR
%K9Khq_(C0E)+GeXZ%hrs1an4kAB/4@5k<56XBV(`+V(ikEe63"72mL8"!r:OU3?/J8Vd"G;[8l)"/."K;kWRB>O>SR-+^A0316M&
%$pfj"@NPel(PXYD`MGj*LK_fP$FhP)JY&FV"Y8:<Z0dYRQDH"J)!)3f<C:kU<2%NMmQ8?n.56?U'sTZaN-PCb!d[D;jJaEjU\\k`
%M'ia^"'Ihq;.O!'_8k>PO+X_plUU$#i="p!kjB%nO>KouNF!V+eSomeU!U5Lg`B3;%-,kVJe"KG5nmq%XV(RM7\\7%7NI#hMD3FY
%V@]ionbb$aat=X=+[&0D@uh8CfAK&&P+h(7o7.jXqFtK]+BJ:iPIoufXD/)s_X]%h>8iWnck"7:XHMi+4EUE`EA9p(=;JOinSs3l
%P@_fIe=GSbnr67cC%i2;e/e.TRQJ@sdN807iHH?JHam[5a1S3IaP&\t\C>0rj!C*cPY%h@hus;-Ek'?Oq$'EsQD''V2[-6f5,*jj
%+=C]UacMU*\5V4]NoAqPi#!`>,?@6A8QCQj>eAD2",-o9A@Qu0Q"%-10<1i/\0Q4B5tdL3YS;ZX.$P!4L#1'C&pjc3%=Gq]JS?:M
%YGJ=O;P><e6.hMnc=)P6q*@seWA,aPq%79Pb'n#e]5p$m![UGak1nJC0*W\K$8+%GXV<XV;"@)N),fTBJ!(_nF6ElZ;Id$Yda"oA
%#-h=RMZdo"U:XA@FC#E]Oma1F,E?b"RY&rEl"DIrMhk."fJ2_DM.Fg[(\FA=SFFF02-S[2oMt?'anm%0"rUQ!o,J>pZOg(G1T"MK
%VcHL?P@E=/rutSnZ,`_lXIoe^HB#JDPZp_tSrJdSQ:-\%Ih&A%$pE,>\8^^s'EF)\#gCT/(^ImM'WW`%#M#iA+V.,"R1JE1jIeI<
%-^(;<+^A)"=U"kRM<GZe!XlJY%nYS#R!h>]bCI[lfTHS0Ku;'hZQJL@4"3>5)<dNiLONp5QQkFh,e-0`.-7oqd#/=o@e`62oFTA&
%!o1.DllCl6-DN1*&2!,5"(G5oJYL"TZ@gLUGr#bE:KUbFW%P91^4Uhi3N<WY5A*soKbQEqDhPW7P?0l,%Z^Z;Uf9#rSIGX+eX[]E
%klIOD3c_tJj;<R?"m6qQY)ebdIAm%F=W!1ZBi<MA'F,N'3Wo^qPkQFKeJT$bMA9*P`&t+YY#[*e(j\inaGs=tiI'@#AS[4EOu1h$
%:_Z'9/)aT,:;Md,]QPA*oFU,T5oc@mTbl287Y8lVJ-.D;&Wg*;)WBD+4@MCXf"0jBYZd$_Qph[HC`^`*"[,MdA[r%15jT\t(6*0%
%[r@#9VY#uB(HHXb#7:d3XepWM*&N#7\,SiXG&h*s%hpLILb->-f2t.'DA)6br;EQ+]Nl2&;0?BI.5ECC@0>YVhSgI7oDhTA%TBE2
%P7bK?=[R<<71,cYM\RWc1=ECgd"pAu*B.$L0dnTTqRo#;)8_G'HPFONBW:nZqQU,IG#-deFAXRD'H)69dIp<sKHcX5<_O[@Ln"fT
%U>$[LS1;5+WY--$H?5t];;t5KJ$>pd)Xdle\/FQ\Lm:<4@<)mSE!g]M&`Q;f5]qaHDI[Vm2c4mQ[A3L3+G-g?CsD^1gO`V>kX"Q#
%^e2NHFG-(P6k$U3C-rLf/666f/P3]BFSa@gBoRpN?\T?+CZ5NR)2`/sgo'pEm:W\t&VHf0`Jtp8^ksZm?Jm1M)HW^&4!b7NcZ]X*
%.=XEm#R&"(cjV,/)X70$El"$:OjB>43k5LRT4/babUOPdX,Lj372]9@ET4Kgb>^s\4P\%WTkD'F\7SE6@6\^AD^g@-5o3)'/VA>,
%6X35$e.TUEK8,9Rj8/0FRV5Qk'1S?9.9ot4a5g^jLI/^Xc%Z55Z-cLA\-Ii$P\E^TGhnYo)[=,Fgd!`sG)(d8--$d:L<qC<NbOC>
%;$]^PDo-m.;1q&i/=8Yuft6UTL(Z#:M$_r@29o'hF\_gfn=;Dm'l*$`8Lg^%5i`3g8Q5i4_.oJ@LY6)5Z=J-71+-K1ZiaXpe\U!X
%,o4i'.#eDd+DR91%7?^`aGO)OOURBi@@6q$[#5>pn==;Q3,t'lm_RAI7R&7R3XT+)[V+:#O,o`?3shoC!dR>T;t4Tg!g/e0&'*1i
%$9`\E&*8I;`4hM\MT??GLj#r;J).+18AIt%'-p3S1b'mCSr$n?0KW89JC*JY4\4EY\:j)/8f?VP0PI&6i]2hu`8<4bPl]&@Q`cK@
%P!k/jXb9`LKgC')R\>k77_TXskEB!nLs8sQ;lg+$"a6u49Y&^'#s4nS<YV#kYG(M?nYnj$'/TQf<l%1;dZ:hIdgHD>9Fi,^L^[?c
%^+qMj0\3<3N7O<OK-W?F@S<W9S`MltWMiYQW+u#?VbH%GU5ReiU;a/Z1K"MAWOuKq[18u<'=%1+e\qA#lu,1.JjP_;X.1V:&ZAX%
%pW-hNALM_XN3+WM^rmcE&JC]Rm9'F2,J>ob)cVg9Fjbi>BTW]Y.U:&I!gekN&.F98o&N?\01N;+"*qgeU8f\?71ra!Kq;D2!0;#0
%&P(&@JV+m\aVK_e+*]Do86H!j"^V5PU_Sa;W_khH:3H]6ijaW8(?)(B3B=,f\qaPQ9Q*/OJM(nl8EV9K3cg6blaGsY8s3T-lM6$O
%.>*Dqr*2RYN0BkINXuIXMT<NVDA"0$A#L#Bj]NUW;KNiF9j<pYRW'I]e%3=7,t^&#=W3-;5if<WM:kQ$bG_6;;jPW389?.]e6]Dc
%*"f<E`SC8g%cibG'f2S\A1KK^I^,35j:TrA6p^K,NPr<^]a>c-=YgBE"U2!KlLNXqIZh_7-%.mA&W@?XR2FZYPVl07^jOHu>>jL<
%DDYtXEXWe,CF#WMp]W(4)JM:O8YOQ]c`[<l^`51k*T)'E"c4gg<;]#%:n326$fiJTU+.PMGj69i9hI!'O[&<@d**lG/nE0beqe,h
%8J3G<&(EUq*>F\IFaq1b06tbS2P2"hWm_(7'M1EI:8I4\p_HQP3u*(#o#)j"Wl\"O$mdUcdkn-i=_YgHKYlM6\:\Fqok`13_G$+r
%\ggAl_^i8&9A)qEc!2_D>;BJo[h@YQp"KN]6WOd!MoNjU,3pl7.L8UDYl'Gg</N6"f"9^G>*FR:A>:KbUl\-X43Q*k&m!Q:PZ0&]
%*]h4LVgYq<4gu:B<j`/Es,ur)7Z;XqV,0a`WdXs"E5NNo7Pd"!>Ra_10N`@`"`OoCnTC_!l$fM(pqt<!:8EZ<R5(O&]O7?%_S8oM
%=1WO&nN."Wa/P)0M]lP/@?r.n;qANLM>j>p0,s#18O=C6j>:7KU9,>2*.'4qT8<0cX#)@Nhd@7bbTh:*-Rb%XpFE0Y3[Jq.!BL:-
%\tG"U(F17R>md/OCkbD8_,%%p?3<QD,o%jj()%6^lCMPX_ot*7.T*;Z+rWV\Sh8S$fLStN(eg^a\&AsonoGF=Pr+4MERe0'*<!*n
%Pbb$N%k::NFZE4%i5Rp^KiJsDcUPTg_aTHIhFHnL62`6IQlb%N,)5!L)St?'"F?3S(*b1GU0WIC#]M.,BG<Y..8=K%:/NoJWtD/#
%&L.12Vlnu)17StS/BY2PlEEidZ%95.n>G]"m9/UOg7=Y67`bX1[/k3Zf]Klm9WXjoR-tRp73e*2`p="-A$i)^CCMT,[sWj(K?1<_
%M-tnbm9oT9_+\0XBF$(WJu;`+&P6tC,j>A8+$ie<F-l=2<MIV7P!TQ4.OXa+?J1-#:M!3?cD2qU"H8bo%`5d_:IC<u&`lUGA'[:P
%aCA7Z=4(K)apKOoKt%0mF+PetG4E+&kJZm(#t48Tke<[-cWGE3]BmSF/V)6QP(?T_/HMLbHM)ked#QHRK\/u+5(jS<9QV1I(?gam
%&piMI9=S8tZ90J/jIh@hZIXSG:,SE4ZI4DoW"R<NP,\nQ*PF?8*?Kt8M^&Yj6a&OVb]]Qc<t2\Ai8!D?kqiOT@9p>Ukok9T/e1b<
%6bO;RT@<7)7mM\_]Y1a`d5(FRQ-qO;7<1hZ.%W*<@MTNM#1I]T'^/Q0Fb6Xs0sFEQe-,03BL#0,@_:TU(4,UQ)J=1#/!T)J,c536
%V]iLZ(Ua>b.7rIki9ST8>OjVi'SG\4m#H=Sf/fedK`\3Y^_#U9U?_S$FjO$kme:f],YCBL!YdbC/TQG29YtSANN5o)K?sW:VIMS'
%iBJ&l#>NQHSM$'*L)2U"$?1oja1&C"'cA=#+SA9s,eLf'-$81_'Z^[J"H2-!qQ4f-i/+rr#6ouao-a>V^FhZ&BFZC+8q7t?Qqt]?
%]fq1"koHUlGmn?L24glgncpiV68L?:;5ZPbbWp8Q6AQpF@N$<<drW=B,k\t\gZts\b*33Seb[p?fRRkb(/n!i<3N!',t]Jo-l"GK
%-JbJ&UaCdSP"M-s,)Tcj&be#KFF('AO;.hNhF+<Z^fF.4M5'<G)ctd.oi4s8FLB)Jc,q:D"h28ZR`$Gn@nGZ@)o?cKY&T8KCTIM5
%IBSb^4aM53lWu(083S:GfOuCpNC$m<6D'h!Ljqpd+GILp1b5I>3CqZYOF#N([ai;H\7n*A"duZL2@(5!,r(&k$[1L_(et8P`hL;h
%/p7dqJWd5E9+8`g#n<<a"X(,8hE2kMfRcGn(c(&)PLmqhCrKZXrUEhm;Qlu[USksu_8=5H+2*:IZ9Iu.L?nf.NW>Ys"^E+A:F0V/
%;hm4F9Q7a/AN_isC3$@c?htojGt]s93^SCt^bJC&+F5Or%I@VYCE7cQ&N9nGfLIJ.@G[D_gGrW*fF,F3ShoEW*9K-*+1_o%OY*nq
%%<Li/;_&b/44F_'a8rgHC4sWd47Q@HEVacM5CLG,+pr@mJh*OQIL6@')Gk+ZES7[<)KK4CPups+$O*XEZ$T@,pSsH##a-oA8;a/a
%$d@th7b60;X2`3\+]h">$:H.^,([hc/-6RC+JPMUKFoWZAjsr%jR1JK^GrBhUr>-oPHLQ[K;sTEfNp*Z.O^qVTJe@-kZW7cUf!*8
%%egr(..#Y):'S8%<llSh"6+6l3'F((DT-VZHt@b0ZDrH@rH&HF#V$V.!fWIGjF$F7Cc5h-F<ELs,!b!Sm'\b$)SI#IVE$0NIe!OR
%P52eCA.C+N;G:ulTf<5FA(L^TpT#6l@7/XZEAC4,V/r28:_/_QklheZ(&*Ci8eZ1MYr=/X7=']UW.:nqD4MZaDPnX,'9d@<KO1dF
%BW?]O^K5t(Hu/,^kiUH>,HT&d.KBKPlNB6STiQZX`bHtW>TKm,26i^b`c0HbbfOO;_=Z?$U&b,T'e$C)N!27TYpFFaS17f-Y(`("
%U/_B%&Xa9bXd'0cqIIdqN?p;O&PFuB;&'@DA=c1,qcXV"&8Vtj`11`0VuK.b8CpQ28ln=qmq\do1Eq\["#`U80OjatPZ`%tg)_MR
%\N9uGa$>"!e@<*bki9YVs0_Rh5CN8"o(4Tec^rqK^O#GCg"kKTp6qsVQ9S\\:[&u"j8/W=CAD[sj9=!K+b'?_=aUFriqL38pq],m
%T39g#_>eo_.t%3>p94L5ZsOSWn\sM&s2Q[^[4ct.9q*AbVtaV#r=boPAU4l.7W?>To%WE.1.h=WT<@..^M<e&3E#826U7i39i!N@
%34bZg2Eih>HQ*a9G!,+PE0Uhsrnj=W*?(mEa90@foqdjJ=3.UYQ7Ld4#9-54b@&G*Ir;GV>;UTq5aB:9C_6VSR]pY_,I`1]5!'TF
%rr3lZJ7'?DrX)_0>oQU8lN;84D*&5L"0$eIq)__Rr/Fh1LZpj)c\)d:F=C#*["6`ANPkCJ5N=GK5m<%]Ci=U9E@0;i-`hK/Y?/Sj
%<+jst_rG#%n^YGW2P/*'*5Mj-FIX;J[!kI$c*bb7Y2qa[RJ:L6c0Y)sG;K,7aR.tMb*7UhHL$(kfct>J+P#_i9baA3SSUhA?CTU`
%qXCQSiar]AoA-3V`]u1#dq'MiX=N0EA-3-.leU]+Cnc+Xn[l?Jcn!n,.(:a:+gO)S:KQbi<HXgPCUB?h=eM%ZC`rK0r;DRb\0/R-
%6BJe^!G41to[=QOj>>l?CE0gfPGX8FE?Z>l_@pI'@.?HDCg9&[SUcmI.K]Ps`!fN+&A3;!g7I!e)P-c9,aiB.Je^"jda834!?FJq
%H<kF!O;mE9cfMo3m]#ZF_>6Lk'Sfu^,lC^\RHZb$g$:>\hoBB3Nmp<lFle5^&P@Ep.](..qWS>-2Ukhn:8kgk%N?=?hLB_gIJDXU
%c#7`7eu-L9"[(@1doAFKGsQ6eVmVd"C3<iiL2HSIZ>Eh.NSF%$(q(K>oeBddG-9TNB'WVel<&<PIE%`S:=e53_V1&W]loKdbC'@O
%Gisn%>8=F?i4%+3PMN_S/*tP65'o:rh9AifZApM!Acju\17@Y[%K7VmS$`K4ZC&$"YDsG/P(m3&keW%E$_-5Qkj@?fZ#3ZsBg9Q-
%s7GrIcYi28^Gs!?\@Ff8rH7WP5l8W3nP>e"a,<a-]t:tfrc.JUP:)unTAO"(F)uO0NB^bI)4H!]s.pM;DH3BfY?/S_p^I[h!llo@
%NF<'O*Nn>I_n-rJCL4JQ03n_Gdk>XB^MZ8Zf7*29,GsK/3<&$W&&*FJJ$Xn/q!J+[gKuTd>?;nqn;7,`-M#:Q?^uRjo5'9`T$Hj`
%J,49Wd6FfeYM1-@[/o,jr,@.pI"enD96GTig?/=P`T=G\-*;r,I.I$t]Db=qYIe.K0(FuE=_%Ff/EkaMkHi?YDY;2lZb%#XR_cn&
%XkEcbh4OFf1,"q05JFXs0cOi:X6IirbWfaaj.H33KjSIdiRcm[iT>pq?(Tq:\[fJ(eqWt\B%r1R1O>)5r?'W-GHYW&D:3`3Zi'1Y
%:HuI=q;Ub?IIm(`T$<W;2#?gV&apZ7]XtrWiVmkCID1+#>0sb8\/O)sc6i2GWSB+5h-\IdMpcQGe%*3gp?pr.I+s919^*;#qsNHa
%3ThS]>463Hm`i)L^;'O0r9iq7=d'aCn*Cd6CuUq^ou#I`j^2qms6m\X]K'oI9)G%#B%ma\lXoWuNkbM[9h]%6qWmla-X1\4rT4R#
%H+CRN]=YVEYrBA\Y0Ph32tsfEbJ2l)]mOg>53#Al2ZLmgG.m?,r8N#As-V*LmJO\ggg%P*H$+*cn%-00;5!"CjoKl#q==@@e"\D%
%GEY%eEr._JUFN`KWa%N`EmJ[MRdb\"jitcFUGB;u1.PpD4\fn7%6QmeDMF#3W663(\YCd$eE)_%gi$/A_F)c5AkhDqFLap0!GHQG
%-F)b1>gmed/:Uu4If&-kg!)0?f9O"5W;\r1GB/H5r9E_'kKBJN3;d9@<\QGhe\$@@]\iE\rD")FQVtWVcL,&Q\i@<NZ@-on/N;!8
%DU7ILok-AIlZ;2BLT<Yo+^:R_4nbIoh)p2dC3fQBgMjrPr@=Dm6/M0*O<,R6n,2>=k4V#gH*LXnRCk>j?I#ebEk>VJ\J];Y=802M
%cd%m7StF8sd%pK"-2ao[]R%+Ns6>'f]fALPm0oC%-@LAhG'e7NrT`h;HHrVC^Tt3ARJ@Nob<K@j>VFuLK)I2)Wc0dXZMhNsYL1*s
%/BY_NW"-jNZe0JuhTjl7q.fj\AW3g20!=Y<k8B!Qr;MH@/RR%,Q5^<3k]q,"J_;^@hTH%?BsN"'T>5pEbb=8`Ds-672\%N/;#=tP
%g%oE<7r-Bir1#eBh9BBJoDI&q,L0g0@DD!0D6G:-Ye-CBg$Qc7MlYsq*/F)N]o3KH=oK0irSG;KQPXjQT3Z9`&<Dn4@4K*3A*JE2
%qmOZWrF1'Lit>D`+JkY)([YZ!a*SiG1!8Zbag:[Xjg/e^4-/rh1M3u^p:sg8ZKFM;J!d$kPFJ&b-b%:\^Lju#+*nojI68_bqY':/
%`Vl;IQA3$*gh.FiB60Te#H29!PYe\(F#Y#/m%"$!a8Fu2adY5u043L>hY]@nOkN/[jN,@7SrGl9k4Oi,!Tt`J*1>En7sfIdZ(qoh
%HI))-*R=W?6'fOf]&3f5"oA95j(Fpa]t`lS"NEg>lOQ%cIn$C0!Ts+%3.AV,[sr=7etG2g#7aS7/OjA`#]nH.G+=og7sT.c+LpEd
%)9;#MT$B?[GoLY/P=^-X_h3.'ip?MfH26juEd9jpB!hQ&?-ViE):#Y!TATKHG5U'AIdu^bjk9J#C3b7%`S&FeHucC8>'Dc-LBjO;
%8GNOt=KMJM:B((O$0+85aJ[I*Y;tV!5IE:`C5;CMm/UP`IIXf\8-](QF\H8Zq:i!af_=,T-^jTLnNLR;$4c7Mc^;pD%o7I71JI!-
%`T?3o#c,Z"D<U*#p$uogjDr_VcbHuX'7`,#h:8=H/q5nYFdlJh]lnU4[kmIn[G9;sB&(#1RlRe?c!GJdkI3BOF7'GpgXSE(Q`(M0
%GrB<]SmC,Wr&j/joVO]3@5BO[ZT6r=e7r(6\A#MFZSPE<mf#'U/X*jc)XhEE1IRjTHLg*'i\]LS_eK"=WO=UCi"&XmDiWk/g?hkG
%34lo7RWZRJr4YYi!.``DPo4u6(l@h_kA^E^,#RJrk"s8<a%2GCZHpfW=aPYMO-(gq&rA@KU[.tJ;>r^9"8DM,*QliPi3=[d7*>[h
%7JXj63X64SErM/0;<CR7(lNEn7JV/?2TJpa4k"Q1&:j=*@o6iX`4^Y8+&XZ4SB2b.7"+:(.'rVVhf$P&NC>jW8?jRa-?CTEr`sha
%%Pahmem?&of@]1k*]A9"X9c#i:)k<7`SkXOHQC'X8+<2@$U=Oce'AU>k34t9&09d-294^#7/GRs@+fl-`ni.SI63[],@>d:^6Xe,
%D8m2.q:^t7*VnDTn?p$d2Tem%HW]:]&iTF(eW*o%O3Q48_V0VTerF#&aOU::>]'*=4l([=Hf(-"`Y/2UQg@!u!0>aqmB9AN?DAB2
%E4eZ\CG\%-d4F:9!'ZkD2mZugL:4^W`r7ZgKtb:rkOS30bHkQJmNC\4hp1f[o'0g;+N'n([p30&><]g3hHkGJ'%Z_rH$8rX/-(I!
%mB3>[l6RS%]Qm[N>ajL.dQC2S'KZPViWt:EX(f7=dPrGECdpbEc!=N*:RtY@f`'VVgAh2[rO`$sVsP"QpQHAu3t:7f&7>-*1jW7]
%rVd7`mV_$*B,)=LQluBRe+k5CnaB#DG[N_%RHJAC\_13!NqP\/roWM-c)[_QIW`Db:]4%;[S')/,-s@%/hk1<o[B<4p<sMtf:4j;
%$NljA_=(2.QnaA5I^.!7_LBg>gKmV:@!=PbZeLDM(K\el3NVtJ?H9Nb_?]X(cIQA5lA^0ei/8-*OZZ$%`*;Zs_#si\1]<@5hkU3q
%5Q/>Y!$9q)Z[DEF*es^h=I8+4s4sC=i9:3s\iE:\n'V14f$YdfJ=ZLXVBgHZq<k6$AC'X-8"]7tkBljs^9t1$pLnt:'+009H<5mg
%fB),UbqF",g?$;70CE"r8*9lb3Fd65?eCd*3^Z6IGlIX?eahe`\nMK&F'-?62g-N*b[BQ,\'LQ/1&"XBS*rB+g\7&#ccH98P\/8*
%BH^;#lt@P(>0)^>Z9P4?lrYl`T.OT[UtVT3ClceNUp#1Bj6^l4rFqH.Q_1^qlf,sS:Og*g\Qn!>HFnRul-8VKoiAj$d=/M32HXRY
%1XH&CEHQc?Xo.,<>"QnCS\d3n3m5_?Br:iFBY.b1c0#nAd@LDLghCTIkG2d]15A'7A)E[$6aj'9N=UAQI!G=)H/@V_g\7!oYToe3
%N)RbQIg_1kqH*Ce>4H;+o$<Xs0Rp,0p9,GF01Wq'dI;05]GqA68&NNbT/dl#08F+`@5A9/?J#U;p6VQ5AWJ^qUZ(<O$no5&Kb#QV
%B5\2Lhm1+?ck`D^#;ksO7Z"f;YroBeg@oJ?g*LAmCp8aV!!2s,2DJhS8$Ii`Ll"6G:$hRJGq\84p,lf's51l?Mn?1=0"0KgO,r<B
%1UMR[*03WaqscWeOdPk;ELb@*p\nHG9251hhSpcAe&+L[HAd27U+[P7QZdLFs"HE$hnD'sG4Wn^8BjNFb+F5GFj/"c)j0(:e(J@J
%ML;jlLJFRRrjfY92.mCTWi]a*rOs>"cb44f5C^)RKA1@WHo@07+53:c$Kq1Se,b$AmQO<U@,H.iTbbg8C1n,Q6aOW,l-1UJQ]#L_
%6IE=!Y228+k=k$WEaBTI2Vci)*n`M_3cjAu*K#L@-8A"5gn?k*8$c\F_3Q11*?uTl(^Hkc*5!;e49.I_S2hSV(ji=J*nm/Lg+eV2
%N.'HKUE/B.a#FVl`ZI]<]/uJs62&[uZfef1kBCR*?f#&3$"Kk$]l?3BqjgFFr#J<!lt-kdC^12tCNFpqmG5b;q)6^b7!jZ3hd'L4
%8thi`hUU]LJG*7*?[^J-g!@!:2)a=AUs.j:83K2-]itF.G5;1+Qe1DA<4J4eqg>dm3nlk#%F&@O8"cRM0rYB`1h7ZR-p2Qp1IlW"
%flO=rr:]8f%SOTL]:-jZ"F`Dk5&K,F4huK7,7_CcfVdOCJ)1Afk^==t^:V/YiVp-bojJaB*ut.!/?sNYeaE/;HEp1BmFrq4*=\id
%[/Pgpn24u:#8?SaB/4fTmPSVaa'c+LE$]TljQSQ2K0PH/l0_8TfqGqi?p[@fr*e7;B*9.oTIJaq>AWiAPY[@Ogj\L.o6B+hS(l2)
%3GNV*D=4@I*OWGQ2YV[.\J\l.6eCHA@!L=$T0"$@D?^Bd!U=_^Ap%)9Np>CsSNEiml^-_3cHX^di^6W,AkhDqe@A*C!@W']-?3#L
%p-Y\RYFD"o5Mi!VH.F(K553D20[(*)O+7YN=&NZXclYdr\:_he39"EhE?u)+=(6rKHT978h#M!P`Ya-W"?EK^r#\..St5oRl%2Gb
%0@.osmXG+q=f/T.GJ@J0Yu5YT?(JTq`M3t+*mL5$Tj4A-_SJ=T>P-jTRr_BV6[V?6TQ\V5Q4@4Ed,W6cib]4??65Z+DpQaA#m-=A
%]/jW?]U4u@I`Vc0+2*[`Ng!]G_QN#[A(S6Ck/kk*<ahVqgT>p7=0nA.8b20GpA*D;EpfWk2Er[q^M=aobIAV;]/78Vm/o:l><h09
%Sc.m6l@,$P:g<@&A((jnU#fk_1t15C[,'8sn-ReL-I;Q%T0C$*fB.1H6h\jpF!/O,:AK`2887Lcb<8A;@':l/[jkp80[dcG@9Y)X
%(=MpQ=*?L:)3:SPp+QGnH#pZHWsSL'*/1,^;"Pf_U8(ESc3Nnlhr02'MB88os"3QUn%$g7*oiLZIs2C)@)QIm]4X6R5Ku2q5OIrb
%c'cI-@$ShRr-lt#>AV/e%UlQKJtKKZREWM8D@U<g(O%O8QF!7_&*ejrBS!ee%Fk:T5$hRNI=6:D<J<P!NdK!spAK!$1Pb#N\0#cO
%5)t!9JG9%KHqR3/pbj2mgN\MijC>I2I2.(b%kg&8rHPN@362d'!&8jB<`SZK_PJ6HO82*%&j==)Db$>NIHTZmB<Ac`0F\9'_sP>1
%Il@6u.;te0rc?@2PD4k.kP+u'qHNjjX4N$#*OKF&H#rl%lgEJUZ\aG`*BdAXO8#7Y\'$jTn/*%(*WemPUDX^#hP4Vo5:b2XVXr?Q
%.3E`"\,UtE-6?E.h-1/"&+]-.J<L+@#r&@IhA\<EK5d%p^u"GV%C1%I4<L@]4`8c.Cr/QO70bJB5GWK/cJ&$=Qa_IX\D<kWA)DJ)
%md,]h]6b+?8[k'qil;B*hmqmi8a@C<PJ>s]T7:pDCuc`[ZH%6!((^A2rU"jRG(%U$_e3RWFrD?P.Lr6WIs66_rTa3K8d]oijr^,X
%j6adl]pCe;3X=^g$m.=,h+H*ce&S?A_2u.P/h`8(c>PkL`t6Gg'4Ud/7du^4OT+n*hlV2#Qg89f$jgV[85I"5\c025Jf$k9R/UXl
%j2L]dQOc=Untku2J,K#lWul43_<H)lGB\-,nV:`HfnUZ:`V7,ppqcoa+8gW_0ZVLjneM(h`63Q..t%3>p94L5ZsOU"/A>6ap]$W"
%ZdutehnU>gD`u6'fZ1DN\B)55`>+LTI6,>C[1&[b0oqkO!doTc\NY26p5aK=6;?E;o(#6IA00q!(.1<k4uNWAU>Lfm^.`$MT2&Gl
%W?bhT=-cGI\Ocb/J+VM8IVJsH*BqTDLRrH_dhQTSIh%D03WCN#H8U)UO+"59^M)=cGoY:ng?2mJmF/;HrDS-7@ch6r74H7!:\`@&
%HWac=9T)-#ek,Ll8Un_C!gh#"MHO0A:=@hBf5\7OIId>XQ5-R6fh['I,Pf_OY2Osp>Pr_mp?\L[_Mdt>T$0\>:8o8.]:Qf0KIIk1
%[;-!mPm%ib[hA)JpK,h0EF[1$dc/CEgch@Sl4Zo1oSJ@^acgo<rpeqP[5BIS\8eQ"H*q@c-_FpJ2L_*4i9CO4p()qP?ao:9flXar
%pml4\N73EjnnC5<QRdh;otrOi%65KI@HlB`j^>23]ZH&&Da.S?JiiFO[5KI.[l@=\Ws?jeCg#IV<tEsW5$&9Ik!!54-3pWCY<P0e
%&,k<`Pkid,&P1UpiP08^_=I:<n>C0m^6<d.:J]`OpZ1K!En]^q2"\Q=?T_gIi_NA1H<9"28*AFY/\5hS%`>$#YO,o:"o[MOjk1s!
%_ndEB*Ro!\0*lBs4_K8V]m07#QG7Gfn3T<mC\,roMsp[]HnP5Wg[snk$1!?cW("/co%io,#F@-jIJ"Yt.==7gSc(>ba'prUf$ht4
%[stiIbBOa7J%o=pTu_B7c[$bqF2&@$:V%0ebU;066[amYi523%)RCsBs4W0?J(WPf?&J>?)m702^=P!Wf"T`ga&LD'<lD0-Wa4<.
%e^#bX\Gc$a%]o,]mc%bYKd1Ls#HK4@:X[A)PLW'ealh3<ae)R$ipUgcC`g9(<J$+V]uX#:OE8R:opj0;Q)(cS&u>@F]]PHmNE"9]
%k/l;tdf0N^?t7qCP/5^u2ol2mgTF-Rrtr89H(:B\*mSm:2Ui08n@#]ZTF&HVeI6rualKbl+5`^<k0meJ-_(]lQHsq<pb3D2OaHt(
%*7oX&-Z,(=DP!&1QY3ej030/.]D1_=^F+3=%OJtb.$$a<AQ0%(HsB>!F#YB3EQJB@rc(YLs)GZ*cf]Cuo4)S+qXeqVa7[aQ1]Q<W
%(\OMJ>heLH9_rJ<4S_/99Y]3"2719;&"QGWa240R@Q\q@q+@QG20m)'%QQQGfG)'H32LQ.q:LEA(WhF$\4t9.?2*_VCIuGR_W09d
%=R%C?,A<Mj>Y)P=S'U]EoX">RbF?+^QKL39ce8Zh/C,9`g6k)!m-fGa)1M>Xk4VEq!U(r?1]-P$LZR"2ra)5*6%'-;U7V(@9M[4@
%bkKH7(Xp'+0itk0X[832Nrfn6j-@Zi[+1)5J@BYXY)3;8kW,C".s)mlNSKjg7*CWq,<B0o&UjOp;&\Ag#1VH,j(*aT/qL`njC1J]
%&CEp-?fA7=\I-a99LPM$jMM:GQRpN_Ur*Mp)Ae64S\sdDL/9AQ&n3rt?=']+)Q&<XCTPt\P5?aI,&&_+Z+'B!252nS'!X0*4T"MS
%X/*6Zm9H7Ae<XLEXcJ2uE$Yn>`jR9d1eEZG3BResqZVlX<^_TLMr=`bPIJ'oNG*aa/361&2B[as8s[T$jgk"k;m?1YQftr!)c7eg
%F=o>R4[n/SHRGk[+#eVWn4&n?X-VLD=?.*+\"arc>G>C`5&4fuA00?Y+"u>H$gRs,A."uQ\!,V@frcEFgO;21qYWlJcnM#eF4q*k
%G'1q^^fgrrV8EPhZrLh`8Xpn@hbFk6oHB^4;cXuH4U((iL#'HUEX<m"F?UTl'!5+X["uc/dBY^9T7M0-B`m+[6U(WH:Y4E_Z<&KZ
%n;&SI[*!%#eDtqj?.#jla`5GJ0sM&ME\*+B,4ZUajTr5A,F,Y'?ik,sWR,KWbQD;tmTe\7<'D+<di!sh#)F<f#]#F+o?p"%Yr,u^
%RE(DkX.A.T]:4Y^e6k\/"X[VrJe;lcM9Hj+!6)n?P@\3^M2CVrFe)f_9,l=Q.?04:Za'"k-Kge&(g)==c(?&Af(!,#3kN7'L3&$_
%)ra+qhGl-d7WSYDCUK1Yd?Ghj!j&[q@XnL?"D,Ge%=+i$Gg@qJi\cJ`1YFLbSV'O&QQ#>U-#':1<8K5@7+,m^:MUt+SK$E>g980R
%)!$rl?uf@dSD0892blrJF"k[#"7VqEqB<>iZMh9[/&qXC?AAao3#t0nN>/\Y$Pe)Pb@;_.*?8fsb,3Hq^6S322K[3ePf/MC#OCG[
%>FVNP\$jI-Rl?smE\J^:K30A>"8\6,T,Og-hn0EQC3"/nI.<mIptH53o*N=9Yq:Kg`ucqI/S1T=\m8"j`m3#=)r#X]pdV`V'&g*(
%'68P,MSgL(:_aDAGEZ<,@@mQX#%D><iN&+^m1B"gACFInglCFu35sJ=b>ak]B-B[oOTUD\Br,fqga!`nF.7tdg<kq;hq[q"b0GMK
%J20RZWpr`P6trR9'\I>3P0fR+8'Q;)9&hh7a<YehQaA>3gDmL'<4]Q&eQq&>GT/`&)#iC#]*VW?l7jAjnfqD[`r47BgdDNNf\p#\
%Y[IT9\RpT*crAHD%1(Y:\<:R<rOEB9nnj62nj\mDoMoW(3Kc>T8Ie&KR%j=q.nJf:CEGib`dbB+jN=n?G"(W?e)a9=`+f6M;lWJn
%fkMk>q#R9CCT!/]lB2OtM$_gtVZU_n\lRNKB=%cN43/EtaCl'%E?dMWa].#$[8a\h'Z`Se('MPrm_OMmLC9XE`4,=Vaf&Q;0Vj&[
%5d`jpR>m>O>c4VOV-:c@N1.g418i(4Y-/k-PKi:QFLK6o[YtW(Eg)BoLJn1.=(Ai/(p=6O.)Zl:](cC+]_B>bI2dRGK-5:7!;_Y!
%9#P&jc8fRc+7aOU%ZB4g7JTiV2b?%B?/E<(@F::Gg<LuM*-C^#McPkJF_A,hq,KLu)3,V"Li&OmNjCm)Y0,J9RO-CK/\UYO16@b%
%^;d\uRe-re%U;'A?Yb"FgN1mTWWu7E_bqg@MN8`ZLYt5Hehk9TD3J/9/$*lUOPc(q:$jE]S]epgh;4;b^0SLn5rX8#\G#8,i6B5!
%5o%ZJfVa2YcT[coZT5K0b^h<So\.U^Bp`cu15g40Oh&5U[WqK)m,`8-Ki&,Nrp3ZZ1b5cm48K\>H\LqHH8O=&K(&)!mO[p,&i><;
%[9(H0o@MhkI15uNA0P`'^p8PpBq4uF,Sgtog2H.==ak][n7C-=q=T>T@rgRaWbmM;-=.q=]rg$s82"Z>g3VN2L;nt0=#OBHWp#tH
%osVXF[Dc[*)m[?tZut,fFqFg3b2/QM^6$)ALnuGDnP*O<$>W1+WDo9S)k0@2$(`?9")aQDU.;8`on<Vd4dh\lD`)*/H>'B(j4,d[
%9$k2l%sGSE`R,VbiKZqr(Lq^EA2eA\[^_EBdtk75iU)24*l+i8<FgG[Hf9!RhCcDHmh<FJmD6k0*g`c%#MR@;Xa\%,pE_TNZ!8;8
%NR'`GeGdS.-N/7>k<TL*#L6<`jFQa?<7"a0Lb4U"l0/\NW!;\@'J$62"L@`PXPZb,+CtslD]Y9G'rV^]Z/e7o[7;ni,SUU>N(YEJ
%Z)p>SH_*VNIAPQ`eSC\e!NcH`OYr7?(bGFtg5t$IC--`WlkQZM]YqOD#.Mjpb62ijj'&.pb]hUr)(i;Q3STi-poB%6YheC@63KjU
%S%dT9A"-7u^X@dF?RrJ7htXNRk5K1I6V8.#A9..:m$3:PN&MP2YjLM:>*]d]U^KA7/.pq(BK%-!V$LoM.&RIC>Z`!dhFZIF%@ZLr
%D,m$>X$JA2b,=6("K*)WV)sl(E>c7lUk-=88L.lbb8CAR+642b[]Q.gWkp)"&fk;Tp2dVJZ!5Q)rp]4b4iM9"F@#iYOspXSCnp\a
%e:O*Jq)%:c#*!nf2-3VXV`eQragIo5`p;1I9,KluY9mh3#1[U,HR^qp024]LHOfJM`km8<HOp8;gpZ5]5ouoP&34,"G[hCLi.<h+
%TrA34m9CU2nQW`^?DD\Ig+J]b=4cS"2s`L&mZZ>=)aFdibZeQadi3JF_7C-&',bYVY%VY9#/[j46JHp.L+QUNIe\#+mr&b(iCQ?T
%0C3/$QQA'4],9-Xd=Y+ui!;Y*coEZ05JWTnr6'uKbMFKuM)==Up(34I(#5K*H'aLt"Z\?5ICRP40hV#!rl/;n1A=j96mu)(d',-R
%r`89'Nhb+:CI`)c,2sfRj1/iD[gDF9[:=#h[/Y<il$(=#hL0RZ4PT!Z72o6#c<tTiiu7<I@j@6t[W->Ddr?+]B4Rgl*3>#e:>Zc/
%?P[(ph4!9m[%2>VO6N*uO?;QGTG1YAe)=Ns'`HT549pqr0HLTKL3<rSq%0!!C@:uFQ;0F\-j<_0r.s0&d;Q_P2n(omK!mC1r!1mI
%;S-7qrb!$;mdJa\n*a<'S9_SVcG'"V@0k<BYT[R?ChW.)*j'RBHu$W.lUM';8L?q9.H;#XLM;(-eg^0l]fT\hb[+!rUOTY[c+WRu
%oipGE$iTJYbPV"j?iBK/bO`>h,14NIG]J02lG_b@Zg4q>Qa_mVDP&M!5CV''(\H=CZcgOM+":WVRsru?pQL;<]Y&U(p]`8^T<,M=
%%t!VPq@.4Hqj"SWWK6b4YC8[IPV9CRn^VbdjVO-3-SNb_cYq)](QT>]?+)sMDn/%(Z/BKPnBGl)/q7c@5@-J7<GX0M?,PR0+7FLd
%\#e*"LumA-(-f]7j8[O,+)jeY5L86^qfEN[Qg!%Lqi>M*Is_&;r#bt8Hi38>lL<io`6Fg/^['.uF@otdlfXK:rQ.B:j7LG[rWC@;
%aTCL9m+`V/f+Zh\EF@F@F]KkTD>8I9&@_Y8b$X@mY5LN4.R<c<E^#)G)@X.ghajA*6,;$eQ/R)hhU\XRh]u+"]i(L#TBhtRY431<
%:*9Gt`Qu`*J,As"`@#$$3Dn4/HbOr8C6MFgfRcba<qre?+>0f5eE!g']S2CS\,#XXYC1bAG5fr0^@pXSe]%@F41@.5/RSN(LEA.`
%]&gq]?HGlG$W$YQ)Y+jagVoEeq-9`9:b(2Y_[dM)%=Mr^>5N;1<*Ob@p"A`g`d+-1>X,j8\D&p<f7+ZMqhB6@mJKt6qT#Yu?[c<f
%J+\aM(#q(C<V_L_aN'Lc3;UsNUB<#*h%9S?/A)4_-8<co'RR4\r6Jh(9(!.(CKK+ga7C&sqsR`/M!-Vo5Bh%Wh8ZaqM;I-tep.LH
%*^s^R6q1_0OtDQUAD-T'GoeDlZF-gV)YU.95OPjbHpCBI61XG)?2&I8lEa._(l=U\"9LjHrWsqM$3kSJUU7QDT7JbuET'Cm+ujqr
%+/C(/Bc7IWs4^'*r#o8#)]`bpGK/hf;ts_P5=mLPM0$9phlQb=BR#9OaH%q\FI\VE,^aR>GPX=2AfJAZ7sgAd3Cf.olC#9Ki$476
%@7g^<Y%]rmO/u`uO#kIDp3f'tJ2>U5gs7(W%b'VBF(jRu$%K[VdD$ObNC_Vk2dU>!I_0NI9[='<Dt++Gq_*n5o7qhna,Ao`;7cSs
%#9rHhcbDPF"(#oap`j'LH.5iZkQbAXe_5'0eS%$DOI7(p/,XrIF53?K-5;?P+78G9r\Jq1$>X`(W&BO9*KNYpTk'SG>&cY<%!ekU
%6XR_9h7j0!HrVW**)a!)k\&>^q4[^AigG5j_UN_J%RW&eR0q21b!2_dbJEEcI$,GW_e6JLW\"F^/o6ZV0+qt1RVN-Y_,#?5o/?T@
%*a;E_&[$7lMlLYH0Bt;&A4BoFZ2&'nr#toU#36>RRMf3ZkBA+@>Ur10S@FhASoR,l[C01:6s5pg.W*FjNgQOJQPW=NQXug1#?7D%
%9p113/_4'W,X,:GB.1(p#$emFK1h?.K8Se.5>&DA,S*-cM,rd2?_Wsb1h@e$887&%2M[JEe#]q9+&*2S#2Ia/Y%Rl!bnA8h]9a>W
%3mo:E::XE)]W/=`<fttR)#bU10-8b2XM?M>*_-t.*k/X3**.(C$E\]pb6GG&,"F1&3_;'hM4nX#:b4Dk8/=`6G6X8'_*'m?!#\q0
%erO8`DJah;kmT_Xd7=pB>&BcuP\Aao8!)8o<-V^#qW1YsBKD;&cO1^-(9NV/b,>Z]0XQ^1(ot3\ML&T%1J(m7,ume-WlifM`bA,%
%M:4a2ilsi:#]@pAJ<j84@5:d(9P[&mE&`r8jHNu*nLNXkZ*Y<?Ba-/)>W=OCn?X%E.;R^9;EFG*cP'KIen@r^B,.mMQaSHIN*g"i
%EJ>5emr:/:38!j>o?p)t='OO^[%(Du-F"'tct$[k^p=H*4$m+O1"oYBEP#5Z<'3oe@<<A(>?blZJp:s#S!,?ZVlJb7f<h$#$'\W+
%-^Ci[W3_HV0tNWOn=dcB2%@<[e*Gb$LpZ<)C>V/9p'BM)F5E7p/=:+2*qG-`4e[P-h\3XK^f]e_SZH2lOC3g+]A6N2.PBAJg"):Z
%_ViPK`p\`m)])7Ne@moM\h6Wn#n6nfJVY-P>:)M2*EY7FQ03d2N&fqcAj+VgFkglQX8#j)]sC/ICEq/u:%BL-9u]A+D43YXL%PKp
%lEs'&]h[3Q:+K-F;qEY/Y-J3a''7b5*(jpV?n[3Ub;r9b\E2@*"E\=l;5+I2VG+DfagWE['MhAa7o<DgfUoZ>/=>tfU0kjQokVQ4
%b4&7h9"LJCF2^3c))YmdRPuRUQ"WGB\P.ZuoSf3Q&X6FV`_)+e;*o`o9(NP$#rbj>Pr)[G#12;O(*pUq1W'a?c:\/f&9`$e+CU$s
%XqJ=SA/,>84ZUufaf(RHM/r;+<.P:cq'guD41Z.Fbe)SnacIDkgot5m$.(Q(Uh)R];o8A?>0/W;l"#ABdn#^X2c8YB#j!KM0;Q5n
%Niu"QnX?JY3o`eP6_T27Tas0O,s>spXe)l;Wes@#'M<P(eJV;g1nCM2LDL.W0FBGoA[[da%Dg#(.q+`c0Jbh<7ctEX6:7epbA4fP
%d;Z,d;TgZ!Hu/M\FBJc<<#(iW`Ldfh).qS;"`I?Y*B;>PlZs0/FtB0Sj"T(%$5qna`YtEZ/7hA>);1iEkC%,:T4B!Dp_N%Adq-D$
%*FU"!`JiMh[:T%H'eTE&96B_ma`$$>b<9aLE.cBgiSJaYGBS"Q+cTU05lgb%CZFSb(OdG5b3-**'$9laH]XD!YL-N'SB>3f;AG%k
%C@G]p2/YucM>ZaMDOqJ&I1I+gA2+FT1=%L%Mcs]"Fgk%t'!#X<in8lWKH*k4M&K+Uqo'm>P.d;##H^%(?*4ijVZuSI'Gi:D`DJ/4
%2VKqHeGdJ09I)Z$Eq4KQ$:cei0T2jH=.M.rT[fBe!-ZtCj*u;SO4=K%f#:&-0^OH&?Bh4cL6r&6NKVRfgs,UYY;JXZJQDpO-^#pD
%AVjF8fn77%bnj/!nMk5h\<S'6_pPm)RrM!'#qmW[cFQZ:K;mdibZ^lFOAKS(WPe`SC'";A2H_<KK=3qDHF0X91Aq<8i1aWS`f:#W
%Bc#!Fq92;-NU3>mMR`e.LJ%=lae_nRH<mdnA]"J9P-%^Dnrh:a]MJts)&go./=c0S!J]@bYs1?J.mfV'(E45/aY(I_bb=r;rhEH\
%]Np6kq8JM2<\Y^-keHY@<U$e)iu387iK"UK.%./IC!l\t6.s?STS94JUdm`!cK(?rPbJW^5=!)BQfe;WB1pg/1o?`@lR9JLN^fLG
%Re_;Bq>Tg(Bu>Cbf]=K?6rNkgP3raSrh"qk8^)[MAqXm.#fPBpnOm7[m[U/bNqX$=BD\HVe)'#)+L0u;QkETJ5a$/,b0RC-q!j'N
%9B#V07HRrVbH+Bad@Xf]Y.\UXDdGXfq>0:4puMF.BbIC!I^h*!E+mKfo:Q''&(SMT_8XMAWSH@hnE4K^[t`!@^&)`q_6)OGD//RZ
%O*OW+=u.+mdq@I*hrn`Wr*Qu_rqh=gDDK@M?[luBG2[i?><CkhB);Q%L%+i)_Yg%@cPB@NhdaKtT0kYS*:EhGYeU4?96C/DJ?(9C
%:tg]>^Jb(Zp<CUrDp\GY\**doXaIGGc[UT?rI4ep5Cl>bs#"lDR3N9m`a51uFSh]BgS[8bCYi@=Igb[]Za-\FPAsIoIZ/Hbs7e/]
%'8lcnFANcj2EY9p^C-[CPrAQ0oP0BgWbcfd[k<'tQ5fAG^Ibnd:\N$3C`Ur,H+uSt3IQ@hqu,NEoA#_TO8a!<$>,TeAq(]$HiG-Z
%"j+?*Mg"HJ:']OLD>ah\;ua<GF(O*o9R^d%-)DL%r)R+[)i_;2(>gCU-aoI!^AQAdHTTZ;mBJl8q)Q0#:6#f[a3+qcG5[$$Id:hm
%mC#/rFO9Mrml7bgZeju;SK>4G%8KYga1M@//HRJAq<kY>*mjHSnEdOTrV5mKkkq`u-\m&$dnslgIV:QgPGRTrdGS\[gcF-E5MM+"
%Co/?rFmB_p%il*mEef-A[Cb0mr4b^2Wt#:<a/<-sKB)>7p$g=PYq0uobq.?oW-)NT/hHmj?(?AMn8Y[1+OPHp]4deEiPMm7)_NZ]
%gQ3B84nM1V4g7"-piCD[d2:2?.UO0V:.E9RN`n,4[T9h\:Bt+9Hb61^K&$;!FL8`.[blBgU:EI/DJrsu0TBIdUbfm@;/::bNnajr
%ktM#^Po)LO1@,tPk3;*j7p)+j3g+gE-RrnZo).kHL_f.W+!p_=-JI&n*.0siHlob&*$1pa4PA#LLI^THDZ9D<g/.Wel$m$o45:b@
%]c%o^m@D2(k[aPFfO4&PSddC!Xo@P1dGC+ua]^c7+DEq*m2h3i-gW4/15j85$+Z&ChP7n9oq&0**O#34puglC0pM&I%L7?JYt!ub
%`$ULsW7ine>dq%_qF]MgcMHhZhOYh`2ksjk#Q6];S!^"@K7hY/(6-JpA4j[Pj)I\LG(NHL`RbRYSR$&nVhZEs8m-j^HpJ3&)R5>e
%6F=IYHa!A1kq(u2bj%Z-`b3c[e^5KtCJp5keiWeNFF43AJ)K]cOBVM"0e`C65H-]tqm=iW#K(913rN[#[sQ%2AG/Lm8^-0U9gh+=
%hJ4I.]eCV3CK@(]d;b+Y^%^9OU1fZ;3fc?Zf*14N(.8B8+ps[DUJ.qN*d1g"?T!-h;>.P)3#dj:Pg(\d):qqN-X9,#d(M@n)9_'(
%d4"m>I"m-+Xff=hp`#u^dME@Zd/;/YP/8"G=L6eA&X,Pr3Fn00pmC0B<cN'q[nUZ45]S-lCLt8gPiGm'Me@`jIiN@6Nt;al,%A2n
%'BN'`?uPLc@OFBaO1)!^5NC*b/U'lti:pi)aAJ>f(F@H>X_U8P*A?SuKtl(Us%QtCEd@ckqXNOqqSCHc/)gKBb;7QRs7</u[WG8'
%W<@mjTXgA$PWV&H*aVh*A9:\*mBb^)Rq!N]1cFCtBc?r6p5$VJ[kB5>F*96rdj3paZB4)P-R\*&5F3B1*/$,d3Q8qhJ'J*5m^JCU
%@lIc(2qkCCUFfq!ZjaEJT5JPZIK&6TXk',`N,^$C8&pBH]6b]KIsN]R`^[QFj!&o'P/to,ra4i*Whe]!a'5.MWO?tGpBUJ$6BRe.
%LnjG95MKC=%1[T*g1$'2qYJG,qh*q$-PPU>os%*flsrMA'ItA)H6dJk;ob@e`/(m6Wd@O@lK!&j]e-UY",(*O:)ClT\RaNg;talD
%$YSqdpKMXEI3DTnYHd/q.6T^Q^3EqYOK6u/+3Eh_'1`:*.kdKKRo-7q/=jM$W7:6!8X]8nl(,Rjo(;G8iYG/6j.uZqg*q^pC[iaR
%.[&cFXf]?A^#Rp5)t+)nJ)B=6PB@;Sa)#puMhau^d;Co]?!Qg<Ge$DsJ7<>:\:?#EO%sl5+&"Ip9U25ScJj%#9eMk)_K-(p:4t?-
%.-rUK6c6UtP_[R71-@[lBg7==l+DJ<BMcIP`!^a3iT'>!iA&bE%AoZBa%Pi^@drFIpqPhAH>508p+Bb%;XsMTq('f,o%3>U2RD$B
%SW$'ig4]_1]V)/M_kXp(?g"X@.5X.H3Hm&RU!qi2L6=BgQS`,tK;7<@%Ti/4%^:o'=Kg[m-Qt`tecOuC_QK)^EDBY?nYa!sE=3pS
%i%2];*$.V60j\s^e@hg-nG)K8h3H1A'X:<2njVZ#PH`FBl\.c;CN+ZAh?5a%LC5D%U\*g0KK3jliDe,#L=VQqj>T[Yo'YMSBhP>j
%URd%dp@d>HgeS7t*UashSBLb*mc817lq''O[SEd5%BJ?m,$V\$HTP.RrM4iqqE?lM?iBRgiUBL/lcB<G#R*fl**baG0*f0VkhpPH
%7g2\;%-XoV3cDB%C35=h96+L0HFPtuUJ4Y1:?2:pibI2\\9ZP\*DbniCj_gTo_UJQJ*O"5`8_Q<j7Iq4YFU!(meHA;@61fsPgOCI
%@eW)WHS7k/4/5WX@7V1ZPCN2'2)s63QM#<9l1.gr<h%C>I)VEP'43W_''md!Y"V%VNS=B?l2Dk7`6FA/H[BDLA.O`*s/M7r`pZ?7
%p$9UHF_,O)I3.E:=&:e['qS3&UT?]OS[0Ge'/kmV7n4A\j9Dh_HoXf\)%GN0_>a-IAYinKk8LmYg"!p\l.aV:S))IVrOHG0#G'=J
%KB#ge%dGWi,&7eNJD^5ql^pC2#Ha3+T9u^r5mt#EMnek)$D!kJ35LY.Gu8K;>Z/"7Y>:N>rV&^oCCpL2n>pb#*2Re&cl-ciiYQKe
%&H.V?4hCsi>q9&KG?\$d+E0UEDk.r$cu@LgAWu2J[5X39rk`e-c-bD9;!tAZcA"R1i:V^DT.hHDWS,fll\J=9Xi$^^T\Yg_ftgHp
%m:agJ_1#Aqjl,atd7$ZJ@gZRK+A(TS&qND3q);p`e`cm/aQhZ#`c?AT]t!k"\a#P8qL\L^qY;%t0=lGA]:ZNVW[.FfG;HRpj_Ro<
%dTVc5fGtsR?0q"CK)Nj`/Jk1ll8ptR+iZFEYSW)%lM`hG=SemW4Zk\Dr]!*s+8';qM/V`+=2/-GciS,j+J780&gDhEWh/PuKWFH\
%gUTW8fB@=AFI?4_:B"d1RL?.LU`nE)pcltB9O\kjVDlOj<jT?*/;29dPMp]i!)$sD3njLO[_Hr=f\Q-4I8O(W;<(<(D+4U\\mdg8
%D6g,O>G7HuF6:!;JEaB1K=3WQhc*<68/o"jXO?)QT(:4Fj.D0q4J0s1`&iH3]>u+_0Ljc&K>/SiP:mh;3kl`hO@W:#YZ/h+WfH\B
%\#E4u:Xr_!I2fZC3XgA+Xi!AQL\pRg:#CQa%*&0k?5nCS&nPkedI2,-R7tnOgVGJPC&;>M_EXUg9PV6WoDE[tf)O=L=PkHs]t:Ti
%XRCXWX8K]]DN9tQ5k4cYQm(Rg%+`?8e%[20B$A\A8B9$Fpi("fg)p5M3^3@H)Pj;WSDV`!*APsjhjN+'+acJW]u[PAgf6JfhXaKN
%j88WG>cB=gi%l2!hj^8"Mf-L_b9cF90(.k3rEr0bei50E?[L]s*`F0+)jb9-<3kNP[r,(miH!ani:P(Cj^!A#m;-mrf;l2Ia4Y=T
%`HP$@I")%SSV=P22sq45h0lB-5G).d3aUS@1&q41dc8kNGAl@%mLIqu=3^&$/*>"Pdd+:G:\DX$rhg]2Q]BCHG'0X+>$]=Z^63%T
%]g$i#mq,XfmXJs.?<XjcFL$#ZUprqF/D]c%3qfBkT.YVCoWl6=TLTsWh8KW:?FtXGqa=`gmIsSRmB']a[ia0rH[gELefX&BG4lID
%-_9pidiWcTQn)gM4am"jnfN3;O8uo%P<Ick9'rX\GO1fc+$Xm+]BqP`CJE!sIpQ=R\b^ScrhR5WVg%mhg$6him2`3]a(t>eD9h"`
%kI5V[De\[rr6Fkoe*[bD+`E=\\*L_9hZ(!jnF4G%+[h;Rl$iI-jcKJQri<NB]ma[@Y570nB4LAPJMcBB@/Gn_WW0JRB=K]J?f(/K
%csQ5pFKVV/GF"lWrH;hQHfOd6GBA$*_4/JHIbZ"T#=%b1m[]W6rXYthcgD8/na=qGo=J?ND_LQbH['&gps,eD:4M=#06H.'df%3N
%'NJZ2^\POl3>gW*^U*_-r]RmnBlVbYHRCnTF$*^Rn,/^%"3G!?n];^g3I>7Hhl:L>I^aZB5a.^&?+`1AGI5"q?gLE-hY43*Fk7G4
%]Nr'PQUmk'>Q8B>4L!YZ06\2gCk%s.[]Y!i\do:R;3r>kgK-'\+3e$]nc2&M@/8t;1ZoP;S*bZjJ%kK\GAj^)IJ)$Z&'(Wgi.isZ
%Ko8bbg",8-c2Y<F@!0<a[IAA$M3RJc?25hsMYG(NXl+EVSHf[+mM<Kkh\R<,[u1Xg\,U^HKkE3KR-6\?/q#TVCADj__WTR)r8uuh
%PT"8Ub"KpkY<:U9o0(UcKDB$0g$JZWVmga9afguGi5X;YZh=1V_P>u>#G'*]_pcnhX2Cj+bsGhFFR82b=6QFH%kI+_4Zj+I,`B.:
%>/0uoe>g4UnKU84mgjb,)_9Z*UdTEGlct,5pYX+EJML63nhn2RAm)lq]Xi34r8Y2VJ,8j^cVdd2*ZLQagNW*;+4af=8$gnAFQi["
%alJ$f<HJ2cin;T,hHmpd4YGp^5ASrT&:.`m%[ZU%SmLi$5!D-!*6kbA9SVEMrk%2`^c'$XI^OA]j$Rt_WZJ;!]RFt'qnp)CYd0NG
%h!U/^O7-\U(Q8#T94UH-E:haC?Q\IDjqd*nX^]I;C%p3YYQMoLA6,aj?i*V[cbD"q?1%&BY-RuIf(Nj&HiH6MdOFdl[_-5ghaZVf
%[(lBEq9e>i`N_m/2:RZ6oA83ICEokFjT:g/b')q)*_s.f]\JVJ\pM#3FEspin(cO@`l@*=qT7\kGP>Y"0^G8+pnG9@Ac5KmfDX+p
%omPQCYARd24h\2spqpTKlh=2ndhMb,Xab]bo]u4"BB.b,hS%aaS#\k`kJeaqfmJ,@IHf#=qI"HBHMNT$=h'ZtHjV*=ZuYp1=g<;/
%beKp05H@k?5CZu52=O)g)[MqIrp`IMGidqEcE"XRgM+3bK1EieDeT%5a6e'5anq&"W[?]g^;/?s9mcha\,U5"DhsM0f6]TM)daL-
%iRR5Yf3=SjE(>]b+,jlKQ!7b5qB^Xn59#b5q><.-e[<;[]:6],)T\7`BoBa<HKW,=;>b3Bj6k>]GB`fC2EH$g75fKgSiiHG?!&Oo
%nZU`;n$`h'r8uJ)CWh'cZSpt3A)+#kHFS<+0>6&MB4!cIqC:D!o"(U!?b3gHgq*?YS$-u39DIfRXn6uq)f<habjXET4q-'GWi#TS
%'P.^Q>R#uMnsB8MZdCF4in$Wu4Oh^][Oe48$ZiAWSEmj<^4&%F6'2=iBTrbM$["%re?_\:W^2>5)G?e"&&K.W\HnYqK%n5'5];HT
%7iI#O8tXK^%+$?*qb/SB__fA'$&tNW/-"'/)G"a&#F%HaO'fFB&*%=q@C/c6o&0EDQXLF`GXt1Z$YaP=$pHXpIXc]"`b'h&)4M'1
%#icYVF%:JRRNo,ZrJLVc;PEB`fEeLS3M?t\/\H/&72jF#KmlUqnXj]q9jJgTYr5Fg+8Q`(bP95&]pUleMpb\`6%23;A$8c)q6Y,^
%gTjdQ(rjP"Sq^[ADpim_Cecp<bJ0(flK9L3^gu7XVY3;\]Nc;+d@%:OmY<.'#])npWp@nZO!W9Rh;M*IEUKR[;9'<b=9daqVK"uk
%>hGg$D_^gQ\3X=)2/k'QR4>uESH"a$#^s,C9m_ZJq&d`c_Rag8H+!8B#q;B?NlL-MBCjB3K@Qe\s%1bB?!I1u_c#>JM8jT0o%LtG
%f@/"!9D>b/QgUrfH2#D'[^iGqNfdu^j2\+**#:BV%AM@6<5+P9hX[*F1f'F^%FPQ$I@PT<ZM-TU=$,^1e]3&0BQiVM+!7GMlL8e*
%=6Ar=kh_MY^N<Z(o%-b%e\T8kcGo,FrlUf2]pm8RpK!XGCIeBJn`j.;Sk0CW+#e[lSp-N.Y\)q&Y5QAmcnQ9h=gP;g#%I$3?bbmY
%:QJlU*Zs;=2N9u"I.V]toAo:3kg6JLYHRn04*a"NFuj'h/<_L^e.,!,pA%4:o?S/QEqlC5W*0#ooB8bakN0h*^"jJH8YobheJ2Y#
%'ph.VIp/:d<2+-Udo'GLkaWX2hfYNopAT=6[Cc<k\T`O9s4VZpI;e:*/.]HtqeH!>Xdb5`PLFJ0p-(uE=O<)^s'5j?F#t3K*q[1m
%h0LJ,]MoEUOTP:T7earopYC2.%i4?aHo6\ZEE)a*X1u=d:Wq[1krcV'`)Aq/W[k;/oO[F%24Cm_esYRp"'P&3+1uj*LP&)Z*]21I
%8Q4rIUF0@4de96^DdOU9]s[TXLJI4e796MSVrMl+?FofDljVoTg5<*/gWSI!lT8n#[9%^oXmHkVML:qJ8>q6!I9F)ZF4U>rX'\'J
%^9Y=jE;$ED<ps+=#qXlFHLG?TL],9:04-8-Dr0qIF,#4OpX_GZT5D5DmG6Li5K#F/GWiAtcaI.jr?kf>nK^88S1$T!`8#HaI(D.a
%kJ>m(YC:nJDUUGNT.L"iHA<47(HZX.cGM.'AbfuDGU`V'$jPD_pASA&RIUagrZTuaE%%5SqnK^WVa*C<2t9cBjdh0F#/>NpRs+&q
%PP:F.M#$(/PPFap`nL,.1cL?5`R='F29uA#_W&hH@YBHE_`r[L4oB;?`\Uo8,Sj&'Hl3KTc'+Er8,:`arRX!^M,CB'pFb@\3IC9d
%BCkfS4k27$Q`Y^?;Uh4,F+IDRRlXqQgKQhrRC-r':it0)j-889DI_3N6CtrUZbggepU9^-j2,Z'Zio.Y3u7JRXVZ?Y=*s%aim*2N
%T5RMgr!dF,6FWS'j5p9l+$??dRg8*G=g.d=HZ!QsfcNG2bh=n?<tDmfRRg(jmc`9]DXZGoqb)B/DiF,_(k)47+['hI>O*k%G5?Be
%K]FePpRa[#=DOi[ch-f"1\H<Rqpig2S_Ia(&Rf\P@6p<^=+4.Bo5B-GhVWUcomLQRh.fPSppV75lRgb_+iP8c^,M+?GTtI>dHi2#
%k>-jiLEGsY7Rtf%XCIVJI=29$d<i1poQ%%j^=hgjP2pt7FldC^n@?$7fn4j#jmM*VZVJ'\q7&2-Z$0tWMfRCmn(3"$GHEOQPC(X4
%F>j"hfT5^\AFgUT/fi9gB:TjBmX:\arDN%0XM;H.\Oj.LO\^o0B\i<!PM5Tlp$10+5OON_>!2Sf:G_tJdaG=S_bp=4o6&W`[Z8)2
%o1*`e3fKpRHJ7N3?ZW8,&*mG0^ZA\uochfi+r?5f2Rg?.TC(""q>%ihR",*al2FPN:Nk$Kj11kX[X*4DHY+]Z1;CN9okUkSLUg_l
%J%2c;*LWOjc/'RMhQ*eY=`O2fmaD%)Q[:i/.C5FE974@V3.1I_2G`dUkLJ_CYK6rgjeTN#q"/*2IeDF14>cNX]$Is+*X9%"G^3d8
%G)%/dlbcdWQM'"lFCOsY>e*8>,^[(JoC9_IrTM_qWDeo77(-g?4Yc]'>j^nM^0g];mJKhn91mY#m79k!5u?;R*FeDa>e"qLg/fir
%KpAce+-)e)\[8Km]RG!5p$7n/)q;beT2r](EB7X:jlDN+SZZc\hnD\4bWie95'AhCY?u#qR>:*ZDVl>>gtLs"9D8D`1h2e5]!C&W
%Hm[ZhBcYd@e_]-,17/rU^%K^sb%A]FYJ/Wbg[[ONF#f^m"EIq$Zdc+fK=dU=D521+k*q,jQPLV^iL4G*mi]5+KuRg%kDds2bPM2!
%f8g\3ko7Cf=/Z'UW8)3=ibEqF5GR8\b$hj^c-dcrj'rosWPbRD677R"Fegaa=-oM\hKo4][.E@,^7EcbpuL+ODgT75gUQdH[bW4+
%s8;'SaGkm"++F)a-<iC`I0f_`oBbt-hG4#oYIAY$pKHDQG.b'5ffQ^f2Uo!#K-c$U_>.a"H_5U[Sh/Y1*NjXt0t4`Wn(_0=n%?6u
%BD(Xd&d4]ubi3C#_6UUp<;+lJHe0THdGBdc1ch79J[)Y1:Y%2:co&7q(@Id-Ge^hSSURDl5M0/QFSfrNkM4\aW%M`gWGf-c+'&\R
%Fo1;Q3IogXqo)ol/R9=-_K4aVJ+_t#I]*28l.M?PhM\9NX4N@gnX6k]mn7EkK8uGLBh.ese@YK"Y[]VpF?B-07nX52m9A&?6)j0c
%0J\-P;CcL&ZX*C[d5RD!YM;7nq@&sYO,m@cEq]Z3!q"pVpTppRkV!a]FuH8HaDX2t`khLCkO?O`gZd,N]Ih=-59($Vh#P9/s,h42
%0OI7eYd*n9mFp:WMAFI_Z_[))J+YTLJYfEKTC>i.ld08.Bs7L5a$R(V+.0ZqX1*$'25D8WCNS!,g>b9<qkJK4`nf[Ca03t+VRDA;
%`TmE6QfC)UEi#V,r+LFip#_IG3h9tkZ7eFJ_%1m`NNJrr3D^LRo(V8EbLI\k!k%[akZ?E.;;Q7LDq2_?hLGA!7;(ZIFYP=Qb2_@T
%rpC*7Z/pCKigs<Op@MNO>:Xq^^ApW&pZZl$b4I^gMFLSfhA`V6*Boq(T\S]&\"?_+hpsG6n)([IaR$.Z&tS+BZZe7^]87WF(q!lV
%:@o8&B'1[=jJ1JE80)&e(5+M#dm&k2]N`'uFu3CRB?PB2U'#[]FQXkF2_/@8m?PBH5Q5o4e6CgZH.mUmoB%Oj;qL-nWO"P9B8pWe
%o_SD1?hIo6Y>3J\qpUd6Vr8\(fuE<hgNe)A/'6#oI\&=Xa(M='qT$!tZ#/HH6Yae`F8jjZXg?Pr?]'951_oH@5GS[%EO;6,"717M
%M/1ejO!H74h<aN65It<!T:@O:IbeesCK@e=jmI>]Od"OCrl^iAgaLtrT,Vq=5`q5&#9A6Q`aPFQI<)MiXdu!!%tPG.ote8:P?[K.
%pRXMHr2Vb[pi8AiR[aYtBbK/^8&Rt_h)"Y,c`dB:kP2K_e(:?bX'\Xec`JhU(i;0LoF11)a)([ai<;g=V7@Z_<Hr_)m6e;WBk;(d
%o="D,]Y6JIaT<.Ir$r%j@9IJO<d6[`rICrmmZ3D:^K*ELQB(+"St$fZXbk'qb3N-B@<_4IGC0)@cn;8^dE768op&q5j<>PMpGZ+r
%Ws5,0Y'h0gP;VK112&=)fZe>qm]H3.3deX:P15R4F1p+Vc;Tn)S%"]5hHuXkC<II9n&4QNc8N/,1Pg!>8+bp)jmptPr+oEBkBl)"
%f'*NX??%4WL@99JeRAKIH1:.Nch(V)@:$[QcsO?\H2/)$>O4kD/rpf?j%m9(Zj4?`5ONC%)nht_pYaHQql`NIQsk_d1h60q"?FZb
%,-gaMeLTeWjeIU,&3V:nrT)Qc[jd\DMjH@uZ)SS`lPJ=MBZn-(]6Z'D8Z1m@YO;**?eWWM5"OY-gq<HjdpWQfHED,Ka,#Mf=D=hf
%5C>]Zm2USh_hP%fL2Y-.QRc1'2qQ@/7pe;Q52<0t&qEWkNKrJUjY,0U7r#A2G9>^LrHe4_r-3,]U!8k?0i?dQoWA#ha6F,hTi[4C
%#6ID-X`O:'j;qPqT(bG;^;&++qMqXbrpepkdl7Ji_tHaONM!B1=M)$<BKr#VkQLSPC:j68cBU/eHLLLkb&H\72S19J/KQrts71<V
%r`:Lg$On'NB=i9cbM665ZYR>(a`O!^iqMR>S\r`d27?8YW10@T9D:Zc?FC+)RsFJopWj$0!ZQJZpH1<B*A=j8,OR0\T,Uu!b3JZ-
%r_[c[C1"PY^G4m@mWYutp\mObEbTFehN*<V_:ADZgLG!b,@oe;cF^]T52O)h\T<,mX-[+_4(+1X?L$Cml,^)YR19>&\(4r)]p>`!
%pVB'\fNj'`26H$]%Wg(`E=PV0`[;pRj,(E,%RS[Y[<3+Ieg-N*"Q#*R8)i9Y0]bYN2kC=+,r*@H*U]>*Z#<-bK+Ln+;97KKLXFq1
%T6hr`mG[#,#jLmlM<bC2>BkF(7O[99i6Tg"Zb=iDUV0N;,!XFbmE)]IA'^BE_a>g8bs.@m<nOBQ*\'k@YHi9Yn+IInn72j4^\*Zf
%\B1ROq5m]tJ4G201bH]=lh)<YN0O<6V5:6G="=21Ub"l#^Z(5(IZF3Z5QC6qBE!>>^[V<Rhg*:&1[R6,lIK4BnBPaug*\T#gGN<=
%$XfQqG(qBPk,MV--\uYAF^;KGZss)Qh6-75AgCs2G""2+.s(bTbAr]k!NU(L;HY'_"<aZp@_PEb9PF,fn)uhomhjSUR4][DlEmPE
%$BH&/bSG%XJk#g4C<K9R@`p!L7s"9&+C\%!iXsd=P6^<HZ>(1UMNtbYi$Do0-2ou*'Hl;#5f>U*U/04fgLjX04o.r_g1=QZem)P4
%m2RdLA#bHuXd)N+5#@6J^OR*"S`d$DBSK%K#VFbAL&n0D24eYr-nA$>_B1\B$.?f0:jDOh:J_VH1u=k$YA#V3:910DMa8/F#h0%7
%_5gct(0+Bj5jeUC+9,2<GaB!!;*.M&Wi4(OUl!DRI\iI@.UGJ3FW$/P`g@ZQ'fB/eRC:[,NEJu3`e'mKMO(NS<\5dVLl%g$0LKE.
%on-?B1ek2llO%L.BJchK/VDYhErc[jrPW637(0#tUJf#]g,q7BJP&j0,sQQT@5MYP$gJ&K<T\PD1^3b*=AkWQY/`e2Dq)R'8R3i]
%7>Se?JQ--9LCE4Xd41%Ze#K3;L"=n@9LN-&?!aZD9\VuTe*7fQg=1Y`.SPkjNf==f2JK->gNf@SU_$6&1?9fn+qe)u_5()<-1e2h
%a$<ho=TL4[n5^AZ"_(`L@d5jX.rN&Zm9Q#[B6dgj$a<uRn/*m08/rp3[Ugsm98+.W;MJCb/RI[02fn=8>#U(g`pa2Z1j_^N_[Ol!
%cK0qUQHT*AMUkp2,[`h?WNufTLc</M>unO:n\^bANZ.;B*,jf56X*EgCMnk[6u,dM7/T8T7FWRn,n6li<qC\SR'\UL>m3&iV+t2s
%o:r=cd7W+?"WeP@KiHg\KM)/dChLPH2Us)p&N4-l`bUAmX2HKeDm]CY`LJZXQ%t,'hgc6j[PaYa.94s9SLg?;Fsrq`D?3X[Js7Dk
%c2n`WXV1Wd(!]hr]^8X($RStVC)k4bEp]l?)n\DX*16`&,sI>aE:uKerf$Y:;53aGf3+@FhksI\Bk]ESD_'f9H.LQD<.\T>6@K_q
%$Wdm,qZ;+qA?(9hQ+e!?Y>&:jco"nXYYJ#;IqjV3\[PrGj$2c-f<(OO>4:=Rl9hk2V?Z?$//_72mfTAoB;UKXVGXLt8;Mkn9*?_;
%D)GEo&YeEOb_]<'&Sp+BYqhBu1E%ZW;GbgdiADE"73L.sYgB12.(";pF!@o(aP+2Ll9K80QiU!AR&]orFB",47dZ((dej5ID7k8L
%MNkpITWH-/4G"*#RHA(`P@B7lG6Oi]84=f'0n>s+JWt*MGR()&Rb!QXKjR4"RJS&M_ofiH""J)q9Qb'lepAqUg(HD(#PN3c])\U4
%Y\HG8?K[[[=pB`3Mm?W%)L^$]'`D;V85u#aAl#Gha4m"05R<Iu<n,bo@jnTVb"T=*Wq&&4&'LsWppgItQW4QM'Mi9i.!!NUC>rU#
%A9kA[VCd`[U">AY:W3Z'rs9^1A?O=;L5r'2>mWi4^6T?XR;(qk5Y]HkO_gpE/\"a'^_HFYP/U<b,bUNt8r2Mjjdo!>%2A.Dc`&j#
%K<_)S;^B!jo,4!,in7E7MU^"i-4i,?KN_D8$Bf5N$f.Hk+CAteet#1W-B`+U[4Hp/B\Ms3`i<ceb@rcm)Jlc#9=qQj/n19TbbX;D
%PdW]KBcCdOSLW>YND)@+G^d9_D-:Xd]u4rN+_CG.CgUJPWg@3gOI.00;,iZ<S@8!WoLq\O<ooa)$F_^'I@"1lZ"C&P19``?j![G^
%OUPd!<m8`YTTD2Xb65s>EUs>#2p`0WS.r(P9#FS1C5$-iS2X%W7%DXm3iA`Ye,D&$;37T`L0Bk(Mib+YD2`/^`gVULRYdmnO(bVP
%#*P4L7Y>A!AQ?(q3lAl!NV0)]Y8_'%L*ogGn,uIS#e!-9BJke_n#:TPEoN>5?Qs7L9Yp\QgnEsAGTTKg_rFBnDI'm#o9'r5S]c]8
%dALB?U\Ke,jf"#51IO`+L.Lth80jpfcu8H]1J;H9'=iL+CSqR"@#>;I))@B8D!4&74ej:0TU"7uqoZKle8.PU$HO7A:k9s:5*V(,
%RI\m;CME(F;61p=0CkY.W@m[(Zq_/Jn6i#cY_@*CJni\G8;bs)e,U5(4KV2mZFk<)kbkcE!/ZS%0;(WGZEQpRXB<lsF:RAQK86rc
%V.bg%6(4-<\5FFc+]iM^^3-Am@D@Y&4DS8BeLY!Nc81thVF]&dMq0VjW^%5"]&@I"]OW*$Z)=VC"%E\#,)#rdUM:_K..sUuSIdM*
%PiJf0`^3qI?5>$^#em&SO_^3t.lAnZ2SaQ8&P4G\?t`R`jVpD?4&IX<;YWk$lUVN!`r)5=/8/B-KagN:*@\X$JtsEC+;KOR-^(2I
%YbfpQ=JJCU+ml#0!8E@LLrj/3"A/\clLS+k<M1"/51)[JERN.6E+nH0"Y7t(<0ECZqi\=H;RCD9`enJ]b0p*`"Xqu+&<[ie&?8mV
%V[i"O;qeE8$QP6$"jPjPMO9=^CKMjXDRj&OM'3%%Ml<_r5XRYnPY!cD&4C.7bUtL@Wn./RhYVC),F+&qgo,r3W!/"0=tNRB;0r>S
%6U'-'0i7[H3?o\L,-tT@Q0dB0!aaFl*UOh5a)'@?d_p03-7JU+eZb1RUOZ$L9%gqc6h:Lm7,&['[h6k@W\Gf$dbtl,9BpX2>%@I:
%,G8oYMP>8!3,j)5'4/8#8=)#,TBVS*Jckq2e7T4kK9&U/1uMACBqpiufh$&3@XDTN6i&S>Upq2758SEFBGHC/=GumS11K)s$mZ1]
%e"2IqZ(6Od7_2bLb-NFsNHS1`CkC$*92^%[A*$];g2hh#mJ0E7p2qZo5+?%bP#/B!!$V<Y5UmM13gR;i<Yf[QhFP2X!+85gYK3YV
%i6gad7D+ltg1.Na=(O.dP&6%)fM=eHg^q:2O9Uu(Ck:'-A_RphH9.s6Q]iVD59e%j;q1-=DA3L05*1\aY8.S+B\Gf:KR$SA7+6l\
%1fe1]p#_5<Gt-7r3V6"A9j3WIEg9N18D<J3V@B>(=3b?HU*NmLXPHR'*^c[/jZ-O.h["SkXiuYY)[HgLX@glpEi8RC%LFXVASODq
%'hZm7F76%t[&U(T$Duk;[4oL\'q_LrFV)p=3ot9o;\\(R_e?f9;Qn%nQ=)[QjOfg+7AsuO*C*WP+R$(]f!L!M<i"h6/a>s]PZia9
%;D^%9C%F1'bH`++F@9W6,8R>R+lj;OdMU\]<B8oLD",)7%VG7dgB*(4KOU]$Q8YqjSc!?!`5E)Q.4C@$cmP!P"=W@GAt#upf8"qL
%XAc"=&r7g"d<6/IQ'gl30N\A#q"+R[c$Yf&LRHWH\5!a<.W=Ao]j7#<J]),h1_aI]A[?cXrtWs&=k<io3UURHK1kd5&DMZe'q0iA
%EI<fjaENG73bQs9<$Cf5VnR-O9l6l0]UD4r&U-P+)lF7'C/AA0&L8#!'dBuiI:/d&j9SKAnk<S@$#=ah*>FTl,tu.\:)'>*$CEJ`
%l1AasMD>W?0%GK<0LZ!dG4)a*P'0&WVGLh*%7R5c&NM:R]U07!]W;sMMp-#oi\Xhn$[5X!/g?iBLH+M05nq5Z(n*N]LXhs[L_c"g
%c2<VFa-Y-qfT2a"PU6d/adlH62"h03/jj25!S(r_>9:&D;32:GapgT,*Cb/=H&JZ0f-/oQ6/"KFK4i5%j#&B^:`?)lWiTtJetU.*
%eb+Q`WYo5n8#Fs!#%:roY?^N'9p6*dY*D5<_1");b>(4YPgB[2dOML@QP^KJ'>&6Ur?=Zg0cW\/RO/\A%).jc[sQ-k&kcn@]&Rl`
%<gN0<mjU[J<Yr!eW'DafI%l+blBfkK<2!7>E=%V^PotWkd+g)$)e^IZ[Q];gg`$NEMf>aL0cZN*8pT%/@Sh/'*rnI#La3]>0XN?l
%$;DW.hUiim=[M^i&Pkbp=)Qkd!n:[Io;?S5!CD94IZjmk-gmhr.\XYV&f*\>/Z]e?)'p/oCd*jlgSe$^#dXXL+O!WN&DqbWj\q5'
%:oZntVl7V.aQK]9/bY74/IoXO/khnF;$i,L>&XL+qBb9F$u!VCb*gRIq"rhABKdelPuno2Fu])=#o0;`WVN(<5r,Eqk&XRj8eR%>
%mk$8de']jfGh)3^:usM>=En`D_L,[rdTH(>5^W)_EHXC@d6TB8UA;Ht&[AXTUA:=>2RFH=)pROl/8:u]UA5d"'b5EDHql.6]H,".
%\I"^,TbGqFND&P\?)CXL1r\:Q-e?6LpHg>[)[3LkQ#9D+:h#)Qd'SY?Q*^391i7J*@o_'(1ZM5HZlJh(ZN"B"4ubI?+[Tnd,FZ''
%VS6#@0od.ak2(Jlo!0]#^/[knk?qbA-)XLN5;,Tp[mi@mOd-$KJBiSZUb;B4OqdO<Qb*lC5R1hi3RJ_knS+CO[E[IP980.QeZFQ\
%2aJ*-FFnhN0m8F')cgWUoR8$__l\!03tMbY20rc4P[&kS1N\5GD8\_Hfm5!6[QL:hWm[r[YsGlhYKQI%f:i^%"\Wg2\k'q3-uF5t
%dl*LGSeYuQFU&[?TGJ_c@>Ljcc@AZ9cPo^uC2psZ=<]Ks,58O0LfRuA$Qqu@+uDD8:*IZb\`j]K%)+rdZ6W!+E8i'YMhAUX[*)WQ
%9js6YM7Auu*"t73;CpcMV\2U@MM'GVj^qbb"Z3%t.835F$I`qjZ(BWF2[;3>)pK27,YrY\7^+G;eO+JuE<lgF'Zo8V,`5P$8YtDK
%=/8jUi+9,V6_,8:b-#:6)U%)AQ@j$B@M)3^9gI==5V'3kZCam?K<5VM[5e5Q7'2#g.T3KnRm!</,nYr-$!:k\U_NY?X%`CdA4:sf
%JiEr*QAsrLPgl.PY&0;'D#Zmnh$CgABPea<P"21Bo1+XA3#Eq:SuKX34g/H_3U&=R@R@JrK-@7HY,O6^0i=DiF%/`td%j6tFE"85
%9b@q@"\Ls"o6Bf]E*Z"Yg_#6;hLW<S/VFIIiu(PiZA%ft>l6@T0&Ys;$5re4Y2@#(q4KiO<#Sho"nPEgGeDthR4FDS`*A.;=fDKu
%6X\OM?WV:>R$FXC%V*a!/%F+!@%kOCCIXo5i9[:]pl@b3<]C[@g<K!&g(em)FVG/9DkJ!iWjNa8$eWoN8C:oafG0m0ns[P"Gch7,
%gIMFe/k\c%6g?m8Y(U&5>eNnD3](]K@S:i,'2;]&TV3j>=-GNuma=SJnO8u`NIiugW]:UsPdEQIBcCaee/=:a:"5!=3iD`c33/El
%<P13IbtK#^$SGPofYO"Ug300/hLb?3J\DgUlqk5`-sks;iC^u[V/uqHJ3!PMJC$@)%YF+C8=B'=+XH[%2p/D'MSaME/[WT!?D"%)
%MUp%KpjgjrA!#f"KP:!:U?P>tW#o31P'Q61$"/)uFK!2QO[s-6='C\h<nY,O/jdZR75SkV1%&!p"&3!kTV3hPF6g3$OUj?RD@>X+
%OVCd_@P3g:TVUZ]:"oqC`EjHWe2#WfY/TR>M^ouX&J\RBZma=c4BY(^.Ju%@7"V<(ZHb]bGu4rQj8QIYk>b@g@?<@nGhmA/eE^?f
%n8/RMX>:VTe9O^2)Gn`V[@lP-8.XgPS["?1/#g\^Vm)&;5q5F<jO6GcEk0ap&]73aK;geh:LUI?^BgL>6!1-f1.8(LB',!"1(AiO
%r;rVi\.!1#?"[>Kk/d898hAPdV\G0lCJ(Jp)HP)a$O/^t\0HKfXE;a>>0H"7m]jmqne;YI/VmD*bf5B4UJ=_&XUAc%"1M:"5W$cr
%#ck"@r*+tqTh)a($.W&`.5A`:hpN]H10>EiF^7W&8?o:q>ij0^JCsB+:p''#Qh"`!f]!Y?f$_cV=gEj$?r+@c<b4k76r7>j(:G])
%K"*"8$P+!kO!63GZi_],XBWp<W0J+UC$a0?*)SD&j%lLObr1_&T\mllTd>6$c9`0GYno4CKRtYcol^P.;@*5lNi)btMA[ANYs6m:
%b^(-Ykm@VUjpZrK,+:'(_L_.W_""pY-KoE;]ltH07>W7tV%(Nc/likC__hB=7V_]3jcq6h24`ot8]#o!LdI,h(a95CdHg"ab]4"C
%&WUdDI[`@((+Q;!BR^>AW"b!G[g3uc7h!V).CF1@_<"Xc:X[HJ8D$ZGePmKqc#La5^D1!1Ld-bc5Rfe0H-h`BL0>/NADq8@!?QbX
%ifG-lEM$!.Ur+5o1lAP!O5RY*S$k[=KKg:j>QUmTU_QAG2_0ss/YD7"kkLr-e'>)=e4=F+/XAP\);NND?,Ts",E`n''@>Eu,:.8X
%NqF]1C."^*r$X#U&%-sd7$7lZ(u"(#q3I(cDp1ah+lI0_9ZF`OWEYG:W%G+JKtf3s-lj=eq!5qP2T[NF8_[B]%:(Ng"Jgl_WBhX_
%F9ZO$^p*tl`2>TPN#Iiso?")8Xr5?e6K2![>^RtY&G*+fqA"?Bo>HiO5r89o('o7r!0LYEmYtJ^=a94r@ar\slUo>->jB2uO]\J8
%MK2qZ/CP@X3k9%0[nK_7k:#@Bdfq;,"L36q[%ZA^5XT"K2X%k2@C'O6"FX;HX$\d>CL1gd?\2i-^'FQ^%+<:&VBM-pRkefcns4!"
%NEfYbQ>&CDcm%s%'H(D>$RG8.BctELk!dHMYoaVTj'K_3RM^8_e6?Gm4GU:=c&67n;<.Z'"rDi9_`ulE))t:f`"OORn0Vi&7LSNQ
%?-PddQ:Ec4"m8]f2&bQM?_c^_%Y*HeilL^j2B9[L-uF5tdl,Y0426s`>1/:lfE>iU#"70;*DFp>ZtaP4>2VH/VJ0r6_MQ?ARPqOa
%:!(E#BUUh5LIf4A2baD&<M:)T1d34N05oRAJQB0M4hge&1pQNsW&Mh-Y@uH'>QZ:Fcp`#g/Kupg?Kk>`hF1?IEX@t4GS;oJ,O&DP
%$T8)\g)\"3%h5;5S#q79@E`u&&^I:rUL5YSHRZK*24>Q4["Xlg$,^PO`7%uD+FA9!>f%c1]b\q3M*P%sU(35jkF)g>W,:Y/"PJ!f
%C"?6^ktj9A!QnPJ&aLsAQjN=6Ku@.D^26,P?m&dZ#$UW;(jiV4BX-L*)!=4gi6Z1rgaRg@BN\p[!?'9a*)4Mg_usp;'!67k\?)eI
%NMpsNFmOIOV5q,nZ2X$RYDo1V8SB_D0Pst&\/XnH_og2"KM6*$kIEt#!YRuLOB(E?.7kl5aKa@/m'0Gt6<N#WVtSK3pLfWp2C3;#
%bX]!9GSj#rF,DG*aYZ:X/N+7b$q.ZF8%&-FN1l?+5&N3M$4!5%.)>FGmNAC%.0XIH7,H6VPEo&P5/5B0PQ#kKFukqJ@9b2/;87Eh
%?8R>.A%%k!dXr+Bn$*GYcYbj!2((oqo49]]!1Ti)8H<_.a_7bcOE3[A8K**ZL*6L].O%HD$0W9C8\)9*FAR'UkYEmI_517F<A'E,
%g)\!l#^rU#CGm[V'3C\p+[@aD4,PJUadl\47VA>uAJ/6`;d_!c\7K!DV)$FQ,GbO"2+Gs%/<]SKTBP?T4:sn/a'Cb$_GXgM,XV!6
%J_OQL*r;B^TGC2c<03P9lV+`@bcko!W*ICbDA^='<[#i9`:O*7D8B*V8!+2^I-G%WN?P)75\pUnSO/>;+EchlTg$QuK:7%kcS@b`
%FrF?RCN*tl'WbNL/K/=-!n^:7NMu!6*WmQKEROMo"r(odNPi-L1D#(FP%Yu(o)8`R;FFcDh'CH7UM2?5^f2k%D89Bk51;c17G&;g
%@mdDM=NkCiLm0(r)]QVh@3O;h"8'\>PWt.\A-3"\<hu7iW5fd,Xa?jReMpib[9.("-c&<nW4;EVhCSZK!=[/^ccK$d[*JeHBK=:p
%=iY#6olSQr/6e-_4r&bK(%W_#j`Si!o;Q+Q2D?^5CM/4b=HnTR+;-h%"&0%41IYc6H4lKJ-OLbNZogTo+/db'98D6q_@f<!#\^u(
%C+s-X9;e^t06YVn_@`E6TjX+B).e>Q&oI)ss1TV-'.UO/F4:i@e_68s4Ut1jQm;)LT8f`8:/G:2Z-o^i2@!Z;\JfBF>e/O.(^_$2
%=>*QFOJL\E9j7n"P-*3n.'<#EVTZah!D%fQ's(+IrIkn]VG4W4]982Ie.W34U<0uW07S/NT1%d%$R]i@P%Xi%5.KOf]db/0*/&1[
%SLS#F/[pCG#CiHnDo@)+il7#7P[q\m>3a:!9#=#_O"<QkC)L+N&/"hK?-;OtM&492!B.d*4DpH8>DUhb+tWLPB+Q6BaU"gZk:"H>
%S)]*_^&4%:_6mOBSg(+P>?JH^'\[gm9ERXhh8i2pOs]IgJk.p8-cb<RJhjW*j<!`"W$(da]BSh0HS'f@lkClBh-,uC^]MG/j:I"j
%>qNY2iP$jE/(gak?\d`75-1tBC;*NH_/sP]Y/##J$-R;,(D.4[YkF`DlloNP%2s-m%YPTh?ALdH\Tg=$N'IcJ;D9@3dXLu*%lkq/
%Blkrffd?ft1%tSqkViqmD>#&ZV5?"7WQSG+N%S\W'O:EqWMPpXgd6`LelOBDc[kne@j9]o=Sc]9]MpT]kCkH(p:1*co=eaXU#_)t
%:(9$dL!-Y'$,pn][D1*W)lsX:##!TnrJ7Y6OHrI>ej4,`!97+7?#cN+ARa=(RiG316r7J(:H9HFgtjI%X;%h^EthYO=-`mMdn,m+
%!:_cam#!M/<]ebENXZOsJ*a*i*DC.dc_l;-P9q/tE!I.^.2U]VoI7)C"H;]$KpuL>Admc<._1`rGj*;%07q$k<%S4-W4*_+9aKh+
%/+:!#TFGWL<h&m%J8=>2q^93PS<`uQX7It%O4b(u,QORQ+S6C"(Z/Ae>=,t;3"Q1H0XEsPUc*T&9Nneh)En1=<Oib]EQSpIL!!R;
%N%b_=>M7_Y`d8^FNrCTbD'N]B_7nlI4oWS<bUsGo>?%aCrgj\c(_#_D`+j%b/A\VoM'e6>,-L"Fd.O;B!\"cC)'UHjBRe*X5dhJr
%Jgt_iJ1BQ>GmQo0=#_67VbA4;M<bfI/k)&0e:a?3$%e=d4bR`0j#Bgc#R--?I3b.E8\G]F%?0@72^\DPa"tZOah=dqFMRI!-tQDj
%E2S41##-p<NIe;),)**1kE)A?X*Kp:Q5mp]a;HKj1TAtn6]"I<o!2,S"&m$g,ImqLlA]Ij?mHQ"1"kGmLt433:gF^cA;/5rkDOI/
%TK"AnN#(qO8J?Z%9%$P7b9ZcBR_=W1YV$>":?`BpY:?FVBpJcF.hR2sZ_a(YN4A.N!ZI3CT]VQXQ`--VaLWkW'_2E7TmS$p5_X?C
%m[T"4dYHII)_MjF?HTa"W.SBT)1j[!>_suSg./FeZ/>[?8-12q05%O]),a9a!3skkd!_oDlVZXK;Fg/hAQdK`[a%9X'N?fEaCpdH
%;K=aafD]!Qc@B^O5*])W*pa9UDLlb:k9rD[e'a:'+C[#eGW?4L"_e0"^"V$mn/OZ#b6741W+MAeiNrcd/V>B/*Gn[[-k(Mn%aPH=
%?lA@K4_#G.UF?ArOl=YF"&13mEAs<eVVd/7EXl91;&ft21^g12$U"Wn/)3B+%cZP3mj3FK06iuZCEl##A#L+ITt-=BS4NKA1a(hs
%OW:c:9aL@@2:#bb7pXtM[H@FDk_>7_3eIW@_I3Y8**nEEQ0a#@"B?[C:ff8h(IC/BT+QGc1aga>5R*!nFX7SW8&ulU$_=R/Frr7s
%2@u_s0bS$`(eV0:6fH3!%m&>\CNc?[UQ@/T&)g_nSf<<\,\gX5j:Wl?2aML4.M?cQ^J-IMiK1)#YtVV2A0sd3Di)s)Xq[D_E<1[i
%`_N/Ec:Ic88qmS+-m6GD9p:^tgoB:m43-kW:g?g%c</$3>]cj[<*-(8*iGMVbl-')o6(rpE*d,=9\Q4[el03mEBUH^1M.&B0&ah>
%@aPqb>DpG=kX]:oB(aN7OEH-'P]B9Uk;G]I"6f43;-^=RWs\MJ"GYn/K.7[,N0,RIGUD6&#Vnn_i+\W]aZ/5E$od=mN0>gnP`L*L
%mDA%1^A;`A0Z_EaEnc[QUkm+jFu;%BGu^`3"Z`g&G<*'=ao`85Xbg)HaPIeJ8jPOgfi_u\JMpZ!QfJ%%BM'F#cfo,K4JtTMC3U$"
%jJ%e7(eHSEK[F-/"r,@jE[e+B*9i?d!G18VkIc0_$BI9Md=`Lp#2(+<lh(fr2(7X6'alL`aWcn+:g.dhq?BE0Tc93oQ!KCW`V#R^
%CG?_N)k\q2="p:Da"m?[cnI1@0hW[7bDKbpTJ4?;P:#@LCKaW>L[ZmmSP:!,+FHlYE\*B3:g.dhq?BE0Tc93oo`O03Q-=Ae0)9iN
%4,0&Tn/,["^]Y#(3=?;O,0(I:Vopi>L_@Bp@juG#3hqLAcq*M"97&-`W=5T\!5B/5^`Yt\L/AGP63(DJE,C/Zmq._uRA$?)"le<(
%6h`1fBH0Y(+fPSU1rqBW\*^n9V&a<0YJX;&5tsPf3@gBl;EGmm^qP>>1dK!Rin5T><H61<;K>siCa)se""UCD'#dO3#&l2VJG)o@
%o=7qIX@DmeNoZ^j2CSc.@3l3685M_2An&hTg+XOA.?rj<bAh8?Sn/+pIN2DQ3N,`HL3-'.d>sqKG1P+.i2[_niXLRbS[c]sj1V/H
%-G,m-6!Ok0:<9aLKWEt%%?P-gZ7c3cMIds\--.QP)G+\a-R!;Rc/-UEI3XoKWaq9$gYe![P22pj2U8lHFpK+j6@b'XPfkTqo*kG)
%,WQua.Z$(C(gt9piZKZK<=m=Xa,0Q=)8=a66-ikZi((unBu(Jr6nr9MMh.b,Ep"AWQI3E74]'%5F)c1^6fuZ^'&ee<PamTgD'SRH
%id[-Z>3%`k:(("[_hX=%nULf/U!j]"g2Nfu*'^dVk_:;)$BF!Kb&/F0J.cl2U!G#8hTA-3aQ73[dQ,ca/i&bu!c#)_X>H.$.TAsL
%Gm2MG8@!8,HL;g(0Zl6@2$ZfJ$n]XIZk3m[)@n8&gTBP?^7\MC%$`@S+I2N\?jm\[$!deS!>8[p/LoZuaYQI]%[$4JRqFe=1@r?_
%<ubhITs0+$E0k>Ha+6->N"9o4L%Dh8'nW*V5:'32DWb-DK<IE^_8LK/AC!ZE-*E4*(NIB+&_iRi+h@+%Pur"P0%(06cK=<g]oPfe
%ATOaMeWh"^'bK\?e7kZDK!(<NhKRA;MYSeZ"h8qq:@"0cRPtjB=.4,XR%S.nnB[Cp4<7-F^b)5K-b:a?9#5iBiYcE%+`>?bBX/Y&
%)WM5(\s.Q7'\+DX_9(W`/DO_bke9Q0=XE%je%rC)\//ZTfbnHq@'Zo;'?Cp(7LtLB0-qL*H1)K\=3=Fj*,\1o?L_i%e>7h>^eEju
%WS<X8WFT:_Z$T)*N'h`q9$mPsatgjDKk@CR36K6Rg+%=Z6Ih'()[At7Z#Z)gn?QZR'JqF/<D2n4M9X$L#Ns6CU7$pRCf4[8WbN1>
%A^cCqcDR=l&g%d8/a4o*K#u3q4>`",W3(o::W1c#N7Bq8m#d$-#ZoeW_34C)R[-CJ5Rs^.I.Jhl3%/fnY5lDj9#3!t8"!J`E4TXJ
%/jR-Sr\gKS!_X/Hlr?b"/?.5gr,$+T-lBSYWD.J8oQQ53.Qjl$nLP>t1CKaDkpetN_KGYU?;;#RR6l;@W+6_Xe6U0BjPWH/_4K0B
%+aa[L1(Ke3"lXqX9/;T%TVUG#L'C+fTc93oF`AN$IZ(\j.m0't^H7U8:=+@;Aqb1A[mu6=U_#;M=m)n+:u'jaabYTidX+8I8F#jZ
%4+pi$9+VJ38cifR[=BO1-D5-[6Hf+38nZt#5gnt'/AOm5S?X%nH$HG)PW]#*9*N;'!&RarSecn6Q5L<&J0\Y4)?aqaH&Yqh@L8-5
%_?-]'+?K!?JN1gi+Q[\uTI/\^T,Vd<!G%m.Yr9FW##45!g,Xs5X!EFNcM>CuE)VP>iS+lLS#f;!h^FD%Q<\c(!,Ra&=e"1t/kE%5
%ee^*!"L0+V]t//k76F;s^[)+-*M9kdD,GIKZ)!7[<mPcT`Bb7F#uO`TH'fdgg9W*'"O3bjS14l;YFLu@m<Y;QY:KUV*1!Q9mD<bX
%n1oXcS:f2J:f_?ek;hP""(/?s.sD_upKH]\>A"!f$W5LOZHN#LFUU]<MjV]?6U<ss@YFn*9MH;7>-pi](.=V42^o7EBYT+q248EI
%0c`t;+<6RS8Me_X!jlK]*M7n[']LI-N[C6k)-`AaD2m(pggOW0A_*\F_&88/I>D#[Z?0e79iZ-4L#].tF$Jstb>S6DJnA'm3a%V<
%leEE[!Pl*d>ndbs`F-VM+!PUT#m8"+<]_N1?^u[=0uQg9XSc/ZfYJuV5O_.-TGB,)[Wsgt63(MbRskd![9K<8oT64&TZW!]Z/rp^
%",1(h)L!qb&8[b^b;n5:`Z?OH\VTq_PtQJ..UN(0!NHMf^DE'o$5#DmBpD@AHWOBh-qL3rU,[0B(T#!J1KfL'"ua4,BX4]P1g-2;
%$`9[J"np*Dq+NWAJ-V,p,]*aS;@#VM*41e`KgCBZhk)d@BSAF[+u5,O-r`cWG[h,uB=jU?"'OlI1'tibeT+7*Mo<[u5M/'#UU[@V
%^k*EK`R4l8[[-&d/8B.ub=ZDK_M!/<Z%\.g#V)u:JdU8NJ;@c48_IS*6]t.MW*IRKXU7YnJiEaBc#Q]P3,lX+r?6\I(QB.aWtOIt
%_c2rt+I-pndSJZmE3@!UT%sB[kt'HEc72+3W%A*oH&)UW6\\k5r3^cY^puDqEO2/d!"d?:maQ!I&KDACm,bSg.oE#l?fkn0aO;t>
%a>"[iV<'?%#cZQ<Y5u9Oqu[%"kkYX-Z17;qXb,qJ?Vi](n39B)OW/YB79XK;n9-4l?ugrZF5R1(='pu,e'(EcPSQb#bN9or?H\+i
%;r)$1%>BG$/=UlPon5Af)^!f[a_!AV`Z#_F<=,RlK,KaG<+"paH*DnkHL4LFPA`!'QcblhfUT89@T*Z4n$")[LkO]mV[+b>rQJ/b
%!:%p/$'XI[Y\Nh7Q#sk/Dc8]@lH-&SRh-8Yj&1fZFt4i%"U1r<mIj-aph:n.^Kl9Ah6H$MmdEptlPE+SC^0)o$2M%`_eVA*gJ.Ju
%B17s7#@@rqjDKg]$p?se\Uq0hIiE]c<@o`H_LNa0k&(X6R-$]bZC-s<*pH9)-/T5_>0*+Y9"Y$%65?GQXg#CJ02048,`oQ.X2$2W
%GEGe5L!;?DR8X@cAfd&0:1dd^%nWuKMn4f(dQEH"hXN3ElaK*\4hdJ@F@KjQ[T(;),j^_sc;60^4)mGlR8@4<g83rJEaUB"r[Org
%`A5cq:78%.=oE.se/T@ne?)uf-s^9)ehKPZio\WG%KUd3fNCSoS7P$Oi##a,Tm#*<fZ\/Ji!muG>.LS(\(3sAU=4L"k=A7o.W0uR
%"VYDkn&sNl)W>=HBkKm`QSI\<MpY\9Fc>npT?Q(BS],(arMa=Us!egjM:Sp@EF3lq?An1gY4PK`VnMEZ\I`ru8(t8^;$PpuEDFl?
%dY&XX7+PD1<tph^M:#SI$C+j7UYBA<mG^I,g&K``Oti]F2XOD5nXUuo>$PpijANP_MB!4/5Bpt/Ko>IO>sP=[,E%\69sVJsBG+b2
%J_Bo7)k8dLQ%'b-lu#EOH/*pI'DQ&i8_*Z9ankjmMjFV[5-F?Io@tpRXX3o"2d00!s2k_E@-(EK4\M=E<3j5%.uLpb^o>Z1(M-<X
%<#@Z7G:\q<XlNdo7>%t:,TH'm14T2<DGd>C0075>)8V&FpSjgT=dQkHO/LXXCbGPNqGYN4qJ)@N$[eGW'__dm@lsG'n#4ZQCHa0"
%:`W'aF!J%A*8dB])E3;E-IVClKTThQLe-eV=:s0rhGqW?:tu_uFn5+QSMZI@/#lW[FQ<4^J0_L_DijnpM'3Ha^LVfXkFOQK&;#-^
%^F,;u4$!7CIk'9Q)Ft2>Qqd_#/ddqH$LKX3EHqpd-LQncOg&[(KAeE1;ohH-.K7)$]dO4h?03.J&E'KM&%6=6J[sR`H6+\fV.`7/
%fk6L`PRbQGNPY2kg,!NT`(/RhbsQ>KB5U>o?KgH8+bC2):ZGR4"PHnJ'*FV&07@iGf?US21=l-9q0IoV?[E+@Hnq5HN!\#lanBA$
%0ln*CB:UHh96jm9W-(R,O7Fg(5uiX]@Ytl:,_cq4k"n_sQ9mnI*[d&r8[TU+'TS<FpB]?(9*c5f73nih!MsXq;J?)@8&p7.F-iV<
%%Mu?smCt:dG4)ffUPRNc'Jo*7<)ki1b$=`-:]gMVMAooT@1;3.2G0uO/#h,f6\tflia3<*d])"^@0^fZPggZ"d(i1)FCVVk_rT)"
%pa_rc^ujI>O?^YN0ci`<Em)0Y8ABp>fG$pr'iFbH_+kcFBpSlRWRX@'Gm%6d]ja:K,.YW$e0:,XS"RKDO^.7l6uRihb9UNRG]$7D
%PI3fN?qg>9AMHD1[,4+V(Q7%7GF$5=2][TXKB'H;/pK+sb?8M2!Wk#j^/&X>nE-^?Rjr>F*%Pmb]oM&7cWr3cQG/GJdEkZR]Ap,5
%`>l[NK*jslhO]gICM/Rc7j5M8D4U4q!fVac0(U%HQ$1FVLnL'T]Rk&(1:`G'C5ZVhZCR8Qgk#@:5VQ+\gk_S)@;UuMB3,/";RGuu
%D4Nr\I6eMReh.;2\SrKb!G_gp'ls8gROQ"BRIbQ`nj\$R%b1!i&75t?KuT:H>/W!?PNY<uo2"B>2L"W-E4gX;"_9L.)I[]GYkBD^
%aE,:N%%_KR4EBUbcMemkVSF3D-!/1UNl8^>UeUp``Z[gu!'/(RRr+8F$eJ8WiOdc:\]6Q/#U^9rH:<,nk<?]Pen!'[#L6"Z@=]FW
%JB23e*S;k9qC-Y"S!C@#Bk+EAq<;8]2q9PR=9/4,Wgq\PY/E[4Y!Y[mX[PiO,iJn5kkHNC7-&7?1Kb,(T<hI.Cbtf$B)l@Ei;f0/
%.R@O'&bHOMFW;J[6K?a7Th)c9f4Ria:]#""3J>/#U<Q.A%d61_?T:V"i>uY%TJ\*C&T8*Q^2mt<8,Io/A*c;]I(S$q#RpY<:8T=K
%;,Rr9+G`YtVaP+6E"5,.K'fuD\sPg'o)usYPLr0L(>^`Sq[LoWCZD!ZMl\qa;8TDsCeO#WK4B<boCJ1j&8*D!a?>.a4@k?<gu;4V
%mt`k1^BWAY+N1^VZ#tmB6?/OiT>o0$lB?X>=1WX?/n=EVb9I_u%ceYNTO`E2G8hiI`QH#hBhC(=oA7FYV;f9$^ZG5S`.M4[bng4V
%'49oHJLYQ1Lt<Ke2LCHd5QW?E"3t/1(dFTE$^B/.>`-p#6F9TpC_YadZ/?!r2V^+(]tt]MGV2H80u@#[Kb\"^-mFS?%NQU4B,*E#
%Z$.rgI]+'6[%%.+ISH?6*K"0#8mIemjm7krX/alRCgk>M%?NS?A5;NG!;K6*=Igl,EY,R$!R!kDoi$rb<`2OihVAm5S7(gt/K^dN
%oGbBej@%1OW*M%M3TLUpS-9Vsk2N\Jb2<rV#p"H8!R;!o,qGt"aWRN-[qVk-TP.K>?ma/Ra,*[T<Yr<&WCrF,l-;=Q+IpN,]b9KW
%1.g_fe3fDTe:X8o36tmW4fLoN!R\.6KmVB'TZ4s27r$&3qib2H1ismu)+X%KJoKLG3_u_D.'5BnIJY5!d#6$&\p-jXSCT;BREoLB
%nq&7PMj3F:NQ=9H1tM?Fd"o1+X\R!S_[-GlAc`M7AgN3YK6LJt2NpW@3"'S`;#>k=A!oum>)3B1b&R!B6NG5UE)f5>T"A:j'Y-37
%+_"B\m(2P=$f.k,pFVntR:CqkX;@i:Bk^uFRF9]lEtkA#ji)$^adls!C-S9jm7UT%P/csYP3f!#8i"UsnQ1Pq\\<`TnQRM<$HQtI
%94m01lEb5)U-eM6!D/-16Xg6pX2ubBO#Y:P*Fk$j4e#YNG(HRT^i&%&-mftP?0HHdU_oIIX5u&?.sDA>h#"=Ads314bG@hOaN5s2
%r:Y"T:Vd_b?8(V<3MMp6Ou9M(!Dm+b/le+<gs`_tq6#ZRk?pB3]'.@Cd[]j=QRAMi!(9_j,B]QHmbHpDa<Ya2Y6tNbBjA/3]N0*L
%KWTJf+YBZkFH!0*>:Q.E"fZgaG+f35d9j.;[9T1HW6Rf,N1iib!7,*.Aql@'1$jC^=.G[N,nRO?7pg@A&De87W`*pEPQapMTX\BK
%8\T8k4)6u_Mpe/h3g9?\0pLKQ'^m`nAiqoK_"6):gr^OkgTJ2W,?eWjU.ms+KsDQ(),XX!]"EcV\o_#pXAudLLKH`8Z^#N.X.%^s
%R#dAJN75e]&[!GK0]U-79$FjD0!]N>VCK+f^uN#sp+SBOVq8^/]Xaik@%U;Q:rLm/+)[5!K8uM.*kg;6D]HKa_rJL4nJXpk)<==R
%5VMXr/!,7g\TUd((7[]3YGU='.hA_c5*2*N=.eHRDbd0lQf=Z9i"\"IPR6&fqjNe+kpWGUn?5tb'XuE62#sg,]AuXA:`Q6h)`R*?
%/K$ppX$u!Gm]K#%*B:mq//09T(V;.""=a/Q;*JAJD@e6j8"mDIH*/He`<7Y6'1sF/:uS!HNr(]-X,uIIP&[=s`QO2W8`a9`G,ReI
%2Ti<CX&S+ml13i3%DrQ$WmW]NPQ4:rK(D.N5gt:C'W.Yi"DJ\aZl)BA]RAJ#GE#Z]34%?J1g*Uo'W.UaeZ4snO.Jc8@>kDjSVG*D
%H,,"g>Q8c2f*R</dF6n4Q32c%$j4T"-b8M_aU$XFl<hhtVXT<6"N\^RX"cH%!2L$gN,$hhPQEa*hpsa6_Kd"D*a(ML&25c8.MNjt
%WP,T7'pE`l&i1P&>)('.r-LV+d=ai<Ni><S.T8R'P9\Zdo=j*I;uQp+?6OTR;A?:KS7.GMdm.S/DEq;?`H*YZfDJqfO3h@Aj,@fK
%!I^;S`P2Yu;_=>3:nC9Nciuj7"jL2^Qo^Q?XlQD!q-K[l(idtjQc-\5SE8@DMXam0Fb\+SmIlU`>g=.ugEZ/ZH'DB,kqgArUf$+h
%@JKY=`tW/WY`^bl"-JhR@^(TSL70=n`tUTn[gMY@;3IFZ%WRY[;j_;C63:N2GaD(#4.P(XShi!([\'d1hMZ]LlZ$5F5pbe\Q?Fi?
%.:"7t/[U+e\M<XiB8H<.r;<Qe@OO75='d0N+3FS@Wlo2qr]=&uo_l/D%#rnp;Nq5D9_1u]a#Mrr?<#BmW\3A''>1b'dCp6Dk7Na@
%%1aER@RsKB=V1b<!/2n.CpZ\g&c.V.-Ta["[TI<qn82iE//W]pM2c`.`Djb!`5.trhc6L!m1N/r<L0BX#)W[q/OE%F='_ALC?QSq
%c_C2"Et4X884IJXRSZ6\N8/9q5T:D(O/JaEO"ioB46X#hKSS]="(`E+X\c-Ip);fF\],O:6R`8NR9#K42&&FicPX1uq0IhE-'&si
%8gGS#.5@:aHAGWoBOE6UFO$)>m&sVBM!("(TK!sqX;!3K,O_UWZnEi>6:MZsMaJC*Ids*<YmXo?Rd!Wgi%oB9CSD!B8Q#jblO\9'
%esM!;6817OUO@t2kO]K$"lu9Q1%$aGKX``ho%g"pnA9F-&M9-T,cN&L_o+6d@7ok0]g2jkn.Wb0lJ+B'3g@Uep5)0^$7L>U;2mph
%</.Q'X%IYX;bJB3hkU1AX]cQHW.`'Y1I.Wk!bn@l)t(PVJ6?S[qDH]/nEUT_8$*eBlD-.P"h9/uiVdb\HAE7ATb8E%6D3Hh]$W,)
%<MO*C0Y6`nP>n%NqnA^90GLLlVH'ElVaqZZ!2`+&5p"^bPuJ=7-FP0?g!Jr)A._q:Ch%#7hJ>nrA.p@/fncLMgH]?;`(K#+N/sVR
%=ll0h)LMQ'Kd8UhTG"9JO''T0q>F-/\805&;C$48!2`F5"be>B$Grs+/P2?sCj!l73:g>(pfb3FVPK4d$9TK+^=dpqRb0dRMKS]F
%R50A3B_fJL:;Mg'&,aC6CRc3OTTr^s&V\n6I&g-P[Cg>/T1ZT]&k^^RN9`p]^;sq7b<=!GS)]B)0rFG`FN2B$h"_F0_m_5.W6lrY
%Krkp^SF]*l8F]uD;ZKYJi@_5^hbPajcK+oo=R?_F/)2sn@\5q1.nKi:n</uN@j]&%*R4C"iGp,X4;Ne8+N]'mE>'r6rY-4n>>fH!
%Z51lJ=F&Q&G5"Go;mB^),iq.Y\QH1_O?"bl`eu&=`-l'".Y0Oa?Lq&m]rJLW)fR:Pr8X!2&l2N84P\3e=8(ZCqC+mn7nkF)).G[\
%:%LGse52)m.BgMF('H:<!2;\-B3S8SAVC/O*2j%QqoZS2mS$[lbVMR#Qj#PQ'^R5?]hrficR*-J:AH#7<cDGG1:Um=-?$ldA%sM_
%1RH:c4C(%49<UE7P1m.VKp`ZrQoNE"lbiC8IUO$!Nnr2I>R2cISmRCHL9,?KiQ=<*K.`"HNSGYdk=%C["-0Q@$B7kslf-4O%F!PF
%&;+>1[L(`.E52X4#BDM3_=+F+''&5KFj,PLo;-d$>U6Q\1Y=*Qd(cKK9BaK^meZ-Mj\db0MEBZmE_",;ND7bfj[BH=G[o#a'3,r*
%9E'e.WG"VL+#KI[S"L&k">Wa#:!f+km.#2)WOO/u<-".1fbKdq090926EX8pYutSV.S^i)]+S&ZJYM(hrqT[q]^OF>b++X@IKGf;
%336?UYV3bRE_>2+'k[aFFm^Gj30/9<]60.hANk[@!tq-Dl_)aFdS!!T`:.f5&U;'N:<gKe5>3I!]Gt6Sb9FFTU=5H2%!e6GQ@VAB
%]ErIPQl5E(W9!=Lj[5dt5.nf'3UH1A,YLV6U3#)5$Kp:IVPu')1J'kPA<^N:2e=K8e+P]fmW8n.)8f;nihi:lN<<KJO!n?o<Nl_g
%NAJ;D:Eb2T`*H%>eE:.5aSGR0P'YSI?1?"/bo-a9ge_Ao,.Rt*oqn['?p`._@nM7,k(_J%"r?b$*!*u?N^Lf1<r$,AHu7fN*"dED
%.!_aG!L:/H"A5O,#LuqK7lZ6hr@9&rJ^6?Q"/,jSogR4d.o>dgTBr3B)mY;F?kEcN47<31ROj.t>p*[5Y>0<f.Z$0@FfKuN&^d@"
%r&?[gM+!rpnZKiVhg7pN_H$e!ZLan1,MKgpW$RFlJ2guCHP!Y&gr9]:'?BP0<^JbHZ3LcX7GtJ-&SNiqFr.IB!FbF8Ggl9;ALJX$
%[<3T#MaG2JLapjlNFY+i2:dH`'n!*N<9<<_kSan.[G8<Xr#iM/=J%<>IY:N'INf_tp+0/<2+i=(agd+Q33!!C0$nuOp6H!X'+iR$
%S9od/<7grF@,pha\dRa,aLZuPAOGi`_;o['mSIAiK?<9rHi]d\3gb:9(@l:g`tH7%%I+DcB>@laPD<'\,92L8Si=2*>>M:h6l:;f
%`kdQ$ZRmf,.fU>6JIkVi+Pb_g\:-)B9t39-CW%HI%N,<"<t\+_7m8/(R3.D&T-8K(K-R>R\V2t0CZ?6I]4A8&%LtJrZtD"o@'t./
%M]C1UD0'0!M_15(rQmF>jKm$dEUPKU9*/2+&flZ0>/>b#$(/]pMVl'66<ZX^_?GD"_$Y2LFSh?\L_?Y0&72aU"F:%Qd=C+uh5Ba1
%SjRT*$d=3N^i@nXpDNd\LEa(!:sL476=,Ir'mJ,ipJ6O%-75qpUP$e9&HA3ZYf#p&+ASN7aEL)LYaD&HVcD\CbbA<re\0b)b<,BW
%-^U*'0'A%b_#8nj/u0*c^R@&n=?gDY80kQPmK@PmM/[sc\KuAN0nVJNl'r]$I@6BeJ`&";GrNUkC[b%4'W4[,1A9VKC\O?BS-s3S
%c:Em@$TGOYQZfs[+\(eORW6igqnK@VqD)HgGa&XA>8H!C,a1[LSSqCP,Mf[4RatG>Hn:]e-Jp&=Gu9TCX9;6'i6nXdZdT=>V%>T,
%<&!_N4Ii+(?Sf4([;n1B4,0S@?47o!NRq[)QJ6;/i5poQ;`Ks37`K:ak+4"g`e8qd"^O^`0]'7>OL'&S5\(us!0J2:M[UXKF(qD;
%@`Ab.Os<gV=hp;9<:"mtF+-Cjn,.9]"KLXpN5Bq+N:QKsk=]17/F`/4XB)IZSL;L@I$TbEM^S3%1cT@2"Si#IFZ$jq*67SEJH(0:
%*XQr?G9?4'":,i03r%]uYSaKU"+$cI,]*85]-AN+.f8o&[Ms.r^:HA+.P!:V:h>l:j2(=D\iTt0-j\8"E\<M)<'hnlZb,@:gu1,/
%Ghj@+F.`JEPTMg]_t(A-LC-,"i@hh!68q<c+t6G"B*jB3@h+*nbGs:VS<H$*,"\fjWWt+3U6"d-4I_phgKiXa^8=cK7g_"_BWHQU
%8J1!Ec]gs5h@n.1KTHMe]BW\cVU7]!Hgt7W2<mncI3:GCo0s\JB[Tsm\ftJtG8=jg"pIG0We\Cpbkg;k2MR-rlCj^_H'[r/W/1Y"
%hgOZEbR2UU;!?(hEV?G\Vsr%RLSbk.3p=bt7B?N9l&@09q=6n,WtX3?Lq,m/U=D%*+H!$Ce*9aY:\jo0a@l8>S6g-A;4(4>BqQ_8
%h,"c=ZUs@(pM`Sq09oj7^4<8Pb`FZ/`(\;uIle'%ec#gl2cFn:+%+AB%;6^JE+h%`g_(9p0*utm]ZQ'pY@sKF)nENZ;;2eU;1XTo
%Mg<#Zc#6&nJ`WFmh;$en`>-.Uo+*<3oU\]&24_KL5/V7<:*W#G>#oCCr/atk[Xpl6mHX_/%QdI:6A9W;k'jB.Y\b5p^,$PI6OTEh
%2IlremTLWoGjs#qSWESMOZAAjeVoJBDhh.H;j$QchM5r@.(/qs4!i+)$]"#5\N-qIkmsJNkaj3&,#ui_:l/e:1PlXS5toRKW/F:'
%6(TE/IF`BB8rBY-B]c_H#*HtP6:Isp06^qfg>P!3&BLTdV_d+e_e=&E$f[Q@9"#,B9.$eCLb:#>i\4rd.Vo4`!V&\n6^$U;!d7A5
%>_7g\lUQd.?:%cQ#]U)u,5'^uH%F+m&ul(\TM/2c=:g6`j@DVY@=:F4U%,Dn%i]oMqFm2[I`q&Zh-R9Y"s("/LF[=?)7^s+1tr?U
%$?&,[#Th\M(m4uSW=QcB95]5L#8pQ0BqY)=jr1[C*I?tVhtZ<9+.gLTV(9j>!YT6Rk\T**D0FpqgJ@@o#j?'bJ]&p+orJ[<4]GQ*
%7hqe/VmVO=c%TPr2NQ,b.oL=8&i%R]K,_!Y<9b#9`R\nm/cH<$*+V38`@WK=]?o6D<SZrY]sFmWGnjP;=PMOd'[=_"-^p6u*M,tj
%e0,Ml!YefQcqUc?TfC%-iJo%farl^60m;+:6R.$c`<@[>)c1J2.W0FihVZon[0hCOR+ADb-_`0ZPil_WmH5o#Ok1/_M,51NKc6db
%/?WbE*U>S=*<LEk^8UP=D"Kol\,aLa=K"/4'^+;^pX]gCp]Fu#8s+ABVA%uV&Q,sjCW*+F(nVr-o<:Lm7>Q%6%GPQ][O-\o03-2D
%_"EKWdb`Nch4$>r>Fi:sp-&n?o$'BOm;Xu4_m;YD1l,9a3IPX=[Ca1M>i"IJO-A(df4Fa/&,1EjqqHGkG7F2R)7o@;^HN3/`-Q3^
%I9b1BJD!UJ([aD)L>jt\X-#qHkTq5nIXL[@3,N[X1eV%DSD"S:-9%6&IeHn2EkTNeKcdJ#=`Lq-g+]=;)8,S2&#&&@%>BsmhLDIj
%0@7!8$ai`bdX5Rl[:'@*?-_KZ%iO\T.F!uWCIG:MX0gQ:>Ala.UBSjdN#0pjE[Yr4pIUkJ\:tdNhQrISng=fSb9ZHk:p,5.UKGKT
%Kfg:gl?2<e)g(M*_[eKh&a0mc>>VDFTsK<N\CljgJ&>/&>IBbpKGijrpZX)P7*j(\W?S_+;abKi$cVoK)-aM7dR)BO\E&st'<t.;
%:oH:FhS*.HlGTg6CE_4MGrc<@C"^gL!95IT>*M9M_E&F*3"ub.PqNnclXR#?/Yn1tP%Mc2@IgX]<Et(6==hr@(lFg=\FnGT,JeT4
%qoXN^a+lq&3\D*X"#[;XEDg*SVL?5Oj93SE(s:!VdXtVlNnBO&JdB-W\&/!R3r>DD=]r$.f7)TQIkVc:j3eVD<u"7VL*^%0(9s"*
%%B6dFL6AbbZ6ZX"JCeAB_lrJSh<Q#h<im0^I&bMCf8P%iD^X]\W#S"(.$Je/il-f0E;U2:SNe=jd\HaXf,p<*C#sEDHo@_gJAfmY
%^"RM+es[D(G;&;h.Gm9npj3BEIjh,WTT=,Y\L0VKGaT@YFsNa;j%u2*9;j`W+B(2qVr-<&bAXH+\)trPb.Z4\I$_5RdFfe0^tLM2
%b'4)6*0C5h<Qf=k,:4,J)>S79$Sn_XTH[P>9)])]Us%l%Cke6.+E<V'ArIpp\<a6LQNRiH5[FWR_F7]8&'`)oAZ(GR3(O&d!?TK,
%1.f2g1^<1HP\^,pDak9=aP;ZBHpM"J'3S=kOUAY7a3._tNhf@OcY8b2*qt`bTfs1+Qum$J=o+'gA2lm_Y8aOArZ_3"U_F2_8ZU3C
%Yk*WX5Md,Z@DsBs.acqYC8LVJS^M0lg$gC&bnN*[Pm9!&^6m<#5ao&%>qU[RY8pIqWW=:o1SLD?"K&f$YIcbL+%i1=;&ikLn-LiG
%0?Nkl&RhQ@A?dFr4uF!(,q<P:ekIqCl-f3?Btf,Ifkf_9p8Gik+R_Tt%V))t^^,`te5YHJoA"4<Rm_Tf!c"-=@s#I[bP!nQ"pA*#
%`.LY"ZL&O"=EKZ`Phl]pD>KsjdkGnTK;$IPdm$\FrFRIGJdE0oP!]AcKG4k]h3'Su>KI(ba%0`;+eTGt*eY"kHQo=ZOsjH#9!Sl*
%"6>Th:6pk4?o%86V:bH2lB.*d(+Vs0jl(Refhf\%1&@/5XakZL!<rRRe_H*[H,0\lPK6&5%kKSi89U;:"G=V]eg".lQS"q+B>m\N
%(H5Eoe.A+[77PWhjo]5=NlGt"j9%r'&h+D8-3YX]7.c@=8]u:E#&\R%0_DhnSVD)=ae&X/Zl#I-F?dAdKp,m4q/9l;!2VS:5#k0t
%E$mo#cjk)_k,7ZR2`1<R`<=.#nC\Xn[cYgmN7>+k:f6T&bJ[[6>&Yo]W7i^nO"QR4hG1u/q(b,1XW(G/B0f'I#k7M<\q3aZe$?=d
%r)kA!F0Zo^5OV)*V'uS!1dHnfd@>Q4eGqF-o5?@WP#-:&&T8S<OJdt4C#'k2ar+#^)J4l#W")3W<$Gr%bGO';HaINr6L#h$l@@)a
%=6Ag_$54YK&QE5cRW6;i':4B&Q8_BZ/U4\/UY+K7]3kVUZK;-90SXtdgtA/GTUkPffJ$(DT$8^r]g9.^+R,uS.V3Z5PKT6<mN^8A
%>aP^)L)Z5aDd`Bc1JUI2^:?bCg'`Ml*7[Yhe5N][q9H#NaQ=Z.;SJXS"(]]?]m*MBIL+tE[P1@O6E-=9n7qi>pTgRpe\:XmcG^+R
%e;GYl[:g'"gU-jaA+q'#S.:W)SMbZ%3PkI*aEij:d**o`K[88$>AQWCpcDu"c53RKCMkb@^=o1=/AP>3PWd;,B^Y7Oogo!hcaMO\
%Z]F*nISaOe)^*/1g19&PP8SMM-9Y)?hYbR<(o_6Y^A<Mqg+!GQI=53:#q;C'+!a@VqKg49f5?:7[><l9M$#g"?$8S3Q9-U!%%oHu
%dBo"-,PPl%!;0S\=Xrj5F,^s;3:#$KHP^ALa+31KGM$"H\-b:;#XZr)D;cTBX,J//Ks_ecYpttD+9f-l'-Wu0N1@C&(<#cr2NJ`d
%JD`%3Bg#5<"8V-UEAMd-J/!i!a*J+Hn5tD=Mm_hso\N)O%FZ'RGS9:QXs6B)@-*pBp!ieR2`$NhM"<X"loTu]BJVuohET885C3)e
%;nCSH/Z+;e/D6d,m'>:m>ofXpKp]<uN<M`(&hPB,)'uY-;ntEgZD";958W[W$E7V8LCe;OY4QVhSfQ:2*qL>QHBQqaqN,b7d]7le
%C&!>9%\%%^ofEe;aF%)mMNF-p)7r*oP1pj,,(t:822#IG`$-l#f#hqBk@PP-n0[)7LV6L@%QB\ZhGI-9aJr"uB^Wbs`TT.O;R[?V
%1gR'6dEn9Xb8IWiHegYC%t0;K2FLX+>"$M44]t"f@C!%)Ubk)4HZ^F6ahRqB8eW/""e7#=P[RuZkWZj\=3()P&I\<600ltS!g7F(
%7h5W!J<XQ[@BPL=!]mCq"DLjrK;BNm?5cdn8FOC(He;k>1lcK#OBTbil^eTY.[X+iI`ldAg#eK>Sr*%p-PNXcdkeTmS#3GmM1J^i
%X3Ts)l.8f1Ri%`Bk!,:V&(%EFOFLhllr3Fm&Wjk"i^\pE,?*IMf:CC'(igPqW.)/i!3$%+C^Qht9!g^28Bl<4;;'XZQS!:WgL0P(
%cnp^_D,MeF:hd*D91t=>hL3!:Mi>(8U#bg^UhcPC&lYL)l"G/dX=Vo@ktjaT^t&Qf]$26bN2$GbOk[jhiBdl7^RcWB(nENZE6J64
%"72NZmT[ktFp;FMME7C$_<_i,ro^/N8]dZ);AfDrRXL#Z+FFuD+!p9]OX`p'^i]KfDNiPEm=ZmSX4ai6F@>2"FXMCbc\CFkE0NLV
%<`*J,Frac^jP#ig"/_+/ksXFQ@ud'=gX'b7['=746Gfo5:(9NF/)XZ$4?al0!9dWKrBUnM17\HB2WZ7s,(DWr$%g5n=)2k5nK?PI
%ZXWp<Utpt]:Vh]@]4$(\,-t5b6Y13kh?"gS0%&n19*FH4UU'eE6;nAmEDmR>9M=l2I_m:$be$(o>X^B`Wj;`*C\RXE7>I1SUnuaM
%#"!N"Q4*\^VXQg*k[YOi'OBp$P_Wh2+M8KLBpj*3a;SP0%nDVfom'!,'^n@/@#?u&6<S.[LsCe+DF<Z:=<04T%YN:D+`#<^m3inA
%#>U'8cXO96@CJ9*4Jj;+@^="iRIqW?j;OM-W)R,J5(W8a\pX<$'Ha%1qbm5^4-#+<->YNdF1Z@A<-/ct1F#4%-A3NJkcR4$?I;LF
%s.L'9@,Qbp[)Sep,0.pRm-%Bija*bdQkY``F)_4+ShuWV@r=<a$M>h[JI+jgN-60rrsM.7`o^-D$O&Q?AoX9(2H8Vu'fE`Y8H0f=
%bc6qE_gIN2#am1EEDK+gHX&pB2dMt]"(!q8o-2oe&o0;\UnONYV?;5c*6s\H\`4R6SXD]7?fGraC_+5JLmApB\Q*f.U5/,$(<W#d
%c8?(-eVL>c:fGLk:3$@eU@\f3iJ<0*fhek>S6&;:W.hP+e`=W84e0./h]b3EVM7r()L:P'rpY)u.kr9,72*b(Q\']=q-a2^1)nI\
%DNkaE.'4Ff^d33Y8s1'LM28foGrdu5\u+qF.!);SP6%Z@o[Pj79OY)3m4#+A$G+43rE,o\ctpq*g,)lGdW\9I>!3bX'=nmH'Cu=#
%gQmDSFBC]mfqB8uCsI&4]g\>s`(Ps8/Qtqa(\"XeWM_M.!&K5a;T*b+qVa#bbcI](&[$L_8t[bV?YAMW17*eRAi`ltAX=D``*jt?
%*BB,[4m^RH8fS/d8`rO:fZi=f<"b]>F+,i#;rird"?5,R9^+m%=etK`qYDd-Q[U@S<'@+JH'i6#OPL6GPiOaC$_A'#;(mnrpn)G/
%-YeL"oKdTB,G5R&Qf!Vbi,%E3\NkR>Dn*q]KKTNmd1k;dcP3@,Ggr6r[XR%6["f5(Fm[J^.TDPV($oA<*)Y)_<2uX#.mWNS#W50Y
%@_3?$/;JR#%chuhqLj/8i`:uppuR:`DHC+hH>rrmo`inb\;FMH\FoUhYGf9apK]BAjphPZFj(C$Ou'k5I.K&Igfu$bWPbc*<H+P@
%OE\QUn\VW%,l!aY_jT76JZ&alX;pH+69/8gm)Tnj7WO9GVg\.C,"6M,##i2Hq1$oL!3_&d*ZB1A9d%/MoAV]*ra?ZK)hD8aJ@L0A
%GPBPqG6aD<S-RfOqpc3SBP=`4jdO=>A:3#TZ"Tir-90O-$&Z:IPSbc/'[Xs,6oslm/E/#W`2g>l[@(<q_)-.hU`DH'jJI[Z9(amu
%a?jiX'J2*S;6X.c^ilq48Qt?]/ld^XO6KF%W'*kQcJ3#7NkhRRh<ZTs3H_Ku#Q!%ad=QIF@&h>*M=gn4SRC7$Tc@c]0Pl-U1MW\-
%;#tfYQ7M;%F@4,=^spdQ>YXe0]JM,b8?DtVVLj`HF/DTK^@*+?JClg0fEGbEjWZ*!lT1ptEH6]0\l=@qX05_UneIc4VGis^M*%$8
%L.l389fBaU:Ia1?Acb,JQ3MS:%R7Pr[eW:32lRsfUDP24<:eAP=,'QfeI0(rP!rkGOS>,Un),q?FU03GB!<;h(c[a_rWdg@E.RQ4
%i?<HM,_uMt=/ZO#2K#b-oXcOMfWO?jR)Q#XQ*l;C;gck_X$Y`3iRCWn,i^1Ynii":`:N3Wp7_k-Ie[M=m[Fg:-d)6/G@fJs3qjfI
%nnO7m$EFEC'D!2BI1u4O2'3TqHs,kb-D#]B9j8LbY)GTNLVT&"6033!>A'm=rK,i/)B*FP?2a0I`oj_A&le&(_'%_n2iU2:_KYWt
%q(4^lY$?!#i@W;F`>sSIY\PM45XNHOf-X[@FDo'U-Edp^"KgIVMjAmFKt^EJB,9)mKJ:pA&=tJcHpm:E?ub#GV6gEFC)8qc2bTX2
%\G,]\;5`&l226pEX&0gr/pA_O5M73$dJu6S3t^j<;cCp56P"J]I24\%j`NIm)rd$!h[)%);#;)sIQe/"n(UnHk!?"\aB>_d`DZp^
%8_;WCM/a,gSl=+$]b)n%In[iHSEWD6gA!Zh@i%?T:I7Ji;jB0caj*E33J%`nWUR7pr`c,2\9?:4L^psn(9:O_'K]Yngqt'GZ3BU=
%4U5_qCl!e^_GpF)ibfUO8ns%5qFiIs:4V%V3C7F?Bs'2XQmft\'V1I!4e#"ja3tPWNO?A2.cp_BC/G9cLN9]b_h?5@iR/mXPtd2K
%Ce_/:n2u:fNCZnSJ2Bc9;.oc_TpmI;#&2.:8"8oj0I,\96Ygr8"@YF5a`p3fEYUoG`gd-=O2>5-_B.orLT0B9/E47,EM5;?S'p(^
%@P`/\U5G&Hk%UPPV,?i"kYe/>)A`"/\)FQ\8Mm:gY"S2]Ar]H=d@"@F;a"T7PH0iTnY%._UQSc6NhA:PpqT#$FH?Q\!BgeS'\rq_
%8%oI^X7J^Q9LPs3#Y-)'bX'K`qElpWh"b=mCPp9NeCp1NFV`66'qj2T,[^"`jkeig5Zj:+Tb;KbnZ<;&\0(S*/=I8hgdSh#PccK[
%@k]-0_ma0GUc5-M:5kOHL9YVPDN+:&dq(bQ5n)S(ek]5o)lP=WL/XF<*:J5o9Z"<2X-X*e\^Q.ZF@FQi-"%^5bZ?'NC:=2h>ZF7%
%V+S2!Vf3P7B++nfPWt?Gnl%"+ODRYP;X6S@b%<7DH4>\I,K`VJ8d:r^>BY869^7Qbq4*!Wa(a'0j_diK4WdBp\&/\ij'MGXmLPN#
%9G!pBNhBgWNU5##Q5eF8nueT5GFF3]@1`H@H*&=#jJEqFT*6hAm^J(N/5O)0>ot5=PXY_B$G3QJn3RHM41O)-H)PiN2nK`s(,hgr
%QWlEbdfA7%au[[&d]@>p\YiQKLWr6k+?B;2U5(S9J0#Kis0'cRkrPYr=+gTha7p\b-,c+_7p!n5Y3!Xr5ZF!2G,<#pa"Q;Rk64LW
%1F56`*hCWLFZ"hqna[*sq:p/An(ePN8tR3WO!_jZ<+e:E4Xk%O-pI0a%Ah<q^+Iqt2i>+gBJGnSO1,fO$^/4Q5iqJp>&6NVfG4Y1
%k0TAX:uA&9\kK+kH7rI[iLL$Jom^:h4k($aiA8@0WL^k?)ttr1[k5=41S=^HrHCL*gRmb<s7"4hSmVKclaNL83e8CQo&]&<s7,L"
%J,eQp\*q*/q6r$WoC[kl^\mZgmpCPDqTnb/5Q(HHlYjQ<qX*SZ^\ucfrsJr?bm/^qnIL-Kj7hI05C6=jWr~>
%AI9_PrivateDataEnd
